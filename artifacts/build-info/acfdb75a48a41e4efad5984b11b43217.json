{
	"id": "acfdb75a48a41e4efad5984b11b43217",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Marketplace_NFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SavePointMarketplace is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    IERC20 public paymentToken;      // e.g. IDRT\n    address public feeCollector;     // wallet untuk fee\n    uint256 public feePercent;       // fee % dalam basis poin (1000 = 10%)\n    \n    // Allowed NFT contract addresses yang bisa dijual\n    mapping(address => bool) public allowedNFTContracts;\n\n    // Listing struct untuk jual NFT\n    struct Listing {\n        address seller;\n        address nftContract;\n        uint256 tokenId;\n        uint256 amount;   // untuk ERC1155\n        uint256 price;    // harga total dalam paymentToken smallest unit\n        bool isERC1155;   // tipe NFT\n        bool active;\n    }\n\n    // listingId auto increment\n    uint256 private _listingIdCounter;\n\n    // listingId => Listing\n    mapping(uint256 => Listing) public listings;\n\n    // Events\n    event NFTListed(uint256 indexed listingId, address indexed seller, address indexed nftContract, uint256 tokenId, uint256 amount, uint256 price, bool isERC1155);\n    event NFTSale(uint256 indexed listingId, address indexed buyer, uint256 price, uint256 fee);\n    event NFTDelisted(uint256 indexed listingId);\n\n    constructor(address initialOwner, address _paymentToken, address _feeCollector, uint256 _feePercent) \n        Ownable(initialOwner) \n    {\n        require(initialOwner != address(0), \"owner zero\");\n        require(_paymentToken != address(0), \"paymentToken zero\");\n        require(_feeCollector != address(0), \"feeCollector zero\");\n        require(_feePercent <= 10000, \"feePercent max 10000\");\n\n        paymentToken = IERC20(_paymentToken);\n        feeCollector = _feeCollector;\n        feePercent = _feePercent; // contoh: 1000 = 10%\n        _listingIdCounter = 1; // start dari 1\n    }\n\n    // Owner functions\n    function setPaymentToken(address _paymentToken) external onlyOwner {\n        require(_paymentToken != address(0), \"zero addr\");\n        paymentToken = IERC20(_paymentToken);\n    }\n\n    function setFeeCollector(address _feeCollector) external onlyOwner {\n        require(_feeCollector != address(0), \"zero addr\");\n        feeCollector = _feeCollector;\n    }\n\n    function setFeePercent(uint256 _feePercent) external onlyOwner {\n        require(_feePercent <= 10000, \"max 10000\");\n        feePercent = _feePercent;\n    }\n\n    function setAllowedNFTContract(address nftContract, bool allowed) external onlyOwner {\n        allowedNFTContracts[nftContract] = allowed;\n    }\n\n    // List NFT for sale\n    function listNFT(address nftContract, uint256 tokenId, uint256 amount, uint256 price, bool isERC1155) external nonReentrant {\n        require(allowedNFTContracts[nftContract], \"NFT contract not allowed\");\n        require(price > 0, \"price zero\");\n\n        if (isERC1155) {\n            require(amount > 0, \"amount zero\");\n            // check ownership and approval\n            IERC1155 erc1155 = IERC1155(nftContract);\n            require(erc1155.balanceOf(msg.sender, tokenId) >= amount, \"insufficient balance\");\n            require(erc1155.isApprovedForAll(msg.sender, address(this)), \"not approved\");\n        } else {\n            require(amount == 1, \"amount must be 1 for ERC721\");\n            IERC721 erc721 = IERC721(nftContract);\n            require(erc721.ownerOf(tokenId) == msg.sender, \"not owner\");\n            require(erc721.isApprovedForAll(msg.sender, address(this)) || erc721.getApproved(tokenId) == address(this), \"not approved\");\n        }\n\n        uint256 listingId = _listingIdCounter++;\n        listings[listingId] = Listing({\n            seller: msg.sender,\n            nftContract: nftContract,\n            tokenId: tokenId,\n            amount: amount,\n            price: price,\n            isERC1155: isERC1155,\n            active: true\n        });\n\n        emit NFTListed(listingId, msg.sender, nftContract, tokenId, amount, price, isERC1155);\n    }\n\n    // Cancel listing\n    function delistNFT(uint256 listingId) external nonReentrant {\n        Listing storage l = listings[listingId];\n        require(l.active, \"listing inactive\");\n        require(l.seller == msg.sender, \"not seller\");\n\n        l.active = false;\n\n        emit NFTDelisted(listingId);\n    }\n\n    // Buy NFT from marketplace\n    function buyNFT(uint256 listingId) external nonReentrant {\n        Listing storage l = listings[listingId];\n        require(l.active, \"listing inactive\");\n\n        uint256 price = l.price;\n        uint256 fee = (price * feePercent) / 10000;\n        uint256 sellerAmount = price - fee;\n\n        // Transfer payment token from buyer to seller and feeCollector\n        paymentToken.safeTransferFrom(msg.sender, l.seller, sellerAmount);\n        paymentToken.safeTransferFrom(msg.sender, feeCollector, fee);\n\n        // Transfer NFT from seller to buyer\n        if (l.isERC1155) {\n            IERC1155(l.nftContract).safeTransferFrom(l.seller, msg.sender, l.tokenId, l.amount, \"\");\n        } else {\n            IERC721(l.nftContract).safeTransferFrom(l.seller, msg.sender, l.tokenId);\n        }\n\n        l.active = false;\n\n        emit NFTSale(listingId, msg.sender, price, fee);\n    }\n\n    // View helper to check if NFT contract allowed\n    function isAllowedNFT(address nftContract) external view returns (bool) {\n        return allowedNFTContracts[nftContract];\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9870605E8F38FC4A69034310 SWAP3 0xB7 0xB8 PUSH9 0xBC6456AB2E01DF7BCE 0xB2 OR 0xCD DUP7 PUSH21 0xD764736F6C634300081E0033000000000000000000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b9870605e8f38fc4a6903431092b7b868bc6456ab2e01df7bceb217cd8674d764736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Marketplace_NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Marketplace_NFT.sol": {
				"SavePointMarketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_paymentToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeCollector",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								}
							],
							"name": "NFTDelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isERC1155",
									"type": "bool"
								}
							],
							"name": "NFTListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "NFTSale",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowedNFTContracts",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								}
							],
							"name": "buyNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								}
							],
							"name": "delistNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								}
							],
							"name": "isAllowedNFT",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isERC1155",
									"type": "bool"
								}
							],
							"name": "listNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isERC1155",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "active",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								}
							],
							"name": "setAllowedNFTContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_feeCollector",
									"type": "address"
								}
							],
							"name": "setFeeCollector",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feePercent",
									"type": "uint256"
								}
							],
							"name": "setFeePercent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_paymentToken",
									"type": "address"
								}
							],
							"name": "setPaymentToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Marketplace_NFT.sol\":420:5720  contract SavePointMarketplace is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Marketplace_NFT.sol\":1614:2202  constructor(address initialOwner, address _paymentToken, address _feeCollector, uint256 _feePercent) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Marketplace_NFT.sol\":1732:1744  initialOwner */\n  dup4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Marketplace_NFT.sol\":1793:1794  0 */\n  0x00\n    /* \"Marketplace_NFT.sol\":1769:1795  initialOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Marketplace_NFT.sol\":1769:1781  initialOwner */\n  dup5\n    /* \"Marketplace_NFT.sol\":1769:1795  initialOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Marketplace_NFT.sol\":1761:1810  require(initialOwner != address(0), \"owner zero\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"Marketplace_NFT.sol\":1853:1854  0 */\n  0x00\n    /* \"Marketplace_NFT.sol\":1828:1855  _paymentToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Marketplace_NFT.sol\":1828:1841  _paymentToken */\n  dup4\n    /* \"Marketplace_NFT.sol\":1828:1855  _paymentToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Marketplace_NFT.sol\":1820:1877  require(_paymentToken != address(0), \"paymentToken zero\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"Marketplace_NFT.sol\":1920:1921  0 */\n  0x00\n    /* \"Marketplace_NFT.sol\":1895:1922  _feeCollector != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Marketplace_NFT.sol\":1895:1908  _feeCollector */\n  dup3\n    /* \"Marketplace_NFT.sol\":1895:1922  _feeCollector != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Marketplace_NFT.sol\":1887:1944  require(_feeCollector != address(0), \"feeCollector zero\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"Marketplace_NFT.sol\":1977:1982  10000 */\n  0x2710\n    /* \"Marketplace_NFT.sol\":1962:1973  _feePercent */\n  dup2\n    /* \"Marketplace_NFT.sol\":1962:1982  _feePercent <= 10000 */\n  gt\n  iszero\n    /* \"Marketplace_NFT.sol\":1954:2007  require(_feePercent <= 10000, \"feePercent max 10000\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"Marketplace_NFT.sol\":2040:2053  _paymentToken */\n  dup3\n    /* \"Marketplace_NFT.sol\":2018:2030  paymentToken */\n  0x02\n  0x00\n    /* \"Marketplace_NFT.sol\":2018:2054  paymentToken = IERC20(_paymentToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Marketplace_NFT.sol\":2079:2092  _feeCollector */\n  dup2\n    /* \"Marketplace_NFT.sol\":2064:2076  feeCollector */\n  0x03\n  0x00\n    /* \"Marketplace_NFT.sol\":2064:2092  feeCollector = _feeCollector */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Marketplace_NFT.sol\":2115:2126  _feePercent */\n  dup1\n    /* \"Marketplace_NFT.sol\":2102:2112  feePercent */\n  0x04\n    /* \"Marketplace_NFT.sol\":2102:2126  feePercent = _feePercent */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Marketplace_NFT.sol\":2178:2179  1 */\n  0x01\n    /* \"Marketplace_NFT.sol\":2158:2175  _listingIdCounter */\n  0x06\n    /* \"Marketplace_NFT.sol\":2158:2179  _listingIdCounter = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Marketplace_NFT.sol\":1614:2202  constructor(address initialOwner, address _paymentToken, address _feeCollector, uint256 _feePercent) ... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Marketplace_NFT.sol\":420:5720  contract SavePointMarketplace is Ownable, ReentrancyGuard {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_30:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_32:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_33:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_55\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_32\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_34:\n    /* \"#utility.yul\":641:665   */\n  tag_57\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_33\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_58\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_58:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_35:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_60\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_34\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_36:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_37:\n    /* \"#utility.yul\":1001:1025   */\n  tag_63\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_36\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_64:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_38:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_66\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_37\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2025   */\ntag_3:\n    /* \"#utility.yul\":1302:1308   */\n  0x00\n    /* \"#utility.yul\":1310:1316   */\n  0x00\n    /* \"#utility.yul\":1318:1324   */\n  0x00\n    /* \"#utility.yul\":1326:1332   */\n  0x00\n    /* \"#utility.yul\":1375:1378   */\n  0x80\n    /* \"#utility.yul\":1363:1372   */\n  dup6\n    /* \"#utility.yul\":1354:1361   */\n  dup8\n    /* \"#utility.yul\":1350:1373   */\n  sub\n    /* \"#utility.yul\":1346:1379   */\n  slt\n    /* \"#utility.yul\":1343:1463   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1382:1461   */\n  tag_69\n  tag_30\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1343:1463   */\ntag_68:\n    /* \"#utility.yul\":1502:1503   */\n  0x00\n    /* \"#utility.yul\":1527:1591   */\n  tag_70\n    /* \"#utility.yul\":1583:1590   */\n  dup8\n    /* \"#utility.yul\":1574:1580   */\n  dup3\n    /* \"#utility.yul\":1563:1572   */\n  dup9\n    /* \"#utility.yul\":1559:1581   */\n  add\n    /* \"#utility.yul\":1527:1591   */\n  tag_35\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1517:1591   */\n  swap5\n  pop\n    /* \"#utility.yul\":1473:1601   */\n  pop\n    /* \"#utility.yul\":1640:1642   */\n  0x20\n    /* \"#utility.yul\":1666:1730   */\n  tag_71\n    /* \"#utility.yul\":1722:1729   */\n  dup8\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1702:1711   */\n  dup9\n    /* \"#utility.yul\":1698:1720   */\n  add\n    /* \"#utility.yul\":1666:1730   */\n  tag_35\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1656:1730   */\n  swap4\n  pop\n    /* \"#utility.yul\":1611:1740   */\n  pop\n    /* \"#utility.yul\":1779:1781   */\n  0x40\n    /* \"#utility.yul\":1805:1869   */\n  tag_72\n    /* \"#utility.yul\":1861:1868   */\n  dup8\n    /* \"#utility.yul\":1852:1858   */\n  dup3\n    /* \"#utility.yul\":1841:1850   */\n  dup9\n    /* \"#utility.yul\":1837:1859   */\n  add\n    /* \"#utility.yul\":1805:1869   */\n  tag_35\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1795:1869   */\n  swap3\n  pop\n    /* \"#utility.yul\":1750:1879   */\n  pop\n    /* \"#utility.yul\":1918:1920   */\n  0x60\n    /* \"#utility.yul\":1944:2008   */\n  tag_73\n    /* \"#utility.yul\":2000:2007   */\n  dup8\n    /* \"#utility.yul\":1991:1997   */\n  dup3\n    /* \"#utility.yul\":1980:1989   */\n  dup9\n    /* \"#utility.yul\":1976:1998   */\n  add\n    /* \"#utility.yul\":1944:2008   */\n  tag_38\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1934:2008   */\n  swap2\n  pop\n    /* \"#utility.yul\":1889:2018   */\n  pop\n    /* \"#utility.yul\":1205:2025   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2031:2149   */\ntag_39:\n    /* \"#utility.yul\":2118:2142   */\n  tag_75\n    /* \"#utility.yul\":2136:2141   */\n  dup2\n    /* \"#utility.yul\":2118:2142   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2113:2116   */\n  dup3\n    /* \"#utility.yul\":2106:2143   */\n  mstore\n    /* \"#utility.yul\":2031:2149   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2155:2377   */\ntag_10:\n    /* \"#utility.yul\":2248:2252   */\n  0x00\n    /* \"#utility.yul\":2286:2288   */\n  0x20\n    /* \"#utility.yul\":2275:2284   */\n  dup3\n    /* \"#utility.yul\":2271:2289   */\n  add\n    /* \"#utility.yul\":2263:2289   */\n  swap1\n  pop\n    /* \"#utility.yul\":2299:2370   */\n  tag_77\n    /* \"#utility.yul\":2367:2368   */\n  0x00\n    /* \"#utility.yul\":2356:2365   */\n  dup4\n    /* \"#utility.yul\":2352:2369   */\n  add\n    /* \"#utility.yul\":2343:2349   */\n  dup5\n    /* \"#utility.yul\":2299:2370   */\n  tag_39\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2155:2377   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2383:2552   */\ntag_40:\n    /* \"#utility.yul\":2467:2478   */\n  0x00\n    /* \"#utility.yul\":2501:2507   */\n  dup3\n    /* \"#utility.yul\":2496:2499   */\n  dup3\n    /* \"#utility.yul\":2489:2508   */\n  mstore\n    /* \"#utility.yul\":2541:2545   */\n  0x20\n    /* \"#utility.yul\":2536:2539   */\n  dup3\n    /* \"#utility.yul\":2532:2546   */\n  add\n    /* \"#utility.yul\":2517:2546   */\n  swap1\n  pop\n    /* \"#utility.yul\":2383:2552   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2558:2718   */\ntag_41:\n    /* \"#utility.yul\":2698:2710   */\n  0x6f776e6572207a65726f00000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2694:2695   */\n  0x00\n    /* \"#utility.yul\":2686:2692   */\n  dup3\n    /* \"#utility.yul\":2682:2696   */\n  add\n    /* \"#utility.yul\":2675:2711   */\n  mstore\n    /* \"#utility.yul\":2558:2718   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2724:3090   */\ntag_42:\n    /* \"#utility.yul\":2866:2869   */\n  0x00\n    /* \"#utility.yul\":2887:2954   */\n  tag_81\n    /* \"#utility.yul\":2951:2953   */\n  0x0a\n    /* \"#utility.yul\":2946:2949   */\n  dup4\n    /* \"#utility.yul\":2887:2954   */\n  tag_40\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2880:2954   */\n  swap2\n  pop\n    /* \"#utility.yul\":2963:3056   */\n  tag_82\n    /* \"#utility.yul\":3052:3055   */\n  dup3\n    /* \"#utility.yul\":2963:3056   */\n  tag_41\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3081:3083   */\n  0x20\n    /* \"#utility.yul\":3076:3079   */\n  dup3\n    /* \"#utility.yul\":3072:3084   */\n  add\n    /* \"#utility.yul\":3065:3084   */\n  swap1\n  pop\n    /* \"#utility.yul\":2724:3090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3096:3515   */\ntag_17:\n    /* \"#utility.yul\":3262:3266   */\n  0x00\n    /* \"#utility.yul\":3300:3302   */\n  0x20\n    /* \"#utility.yul\":3289:3298   */\n  dup3\n    /* \"#utility.yul\":3285:3303   */\n  add\n    /* \"#utility.yul\":3277:3303   */\n  swap1\n  pop\n    /* \"#utility.yul\":3349:3358   */\n  dup2\n    /* \"#utility.yul\":3343:3347   */\n  dup2\n    /* \"#utility.yul\":3339:3359   */\n  sub\n    /* \"#utility.yul\":3335:3336   */\n  0x00\n    /* \"#utility.yul\":3324:3333   */\n  dup4\n    /* \"#utility.yul\":3320:3337   */\n  add\n    /* \"#utility.yul\":3313:3360   */\n  mstore\n    /* \"#utility.yul\":3377:3508   */\n  tag_84\n    /* \"#utility.yul\":3503:3507   */\n  dup2\n    /* \"#utility.yul\":3377:3508   */\n  tag_42\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3369:3508   */\n  swap1\n  pop\n    /* \"#utility.yul\":3096:3515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3521:3688   */\ntag_43:\n    /* \"#utility.yul\":3661:3680   */\n  0x7061796d656e74546f6b656e207a65726f000000000000000000000000000000\n    /* \"#utility.yul\":3657:3658   */\n  0x00\n    /* \"#utility.yul\":3649:3655   */\n  dup3\n    /* \"#utility.yul\":3645:3659   */\n  add\n    /* \"#utility.yul\":3638:3681   */\n  mstore\n    /* \"#utility.yul\":3521:3688   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3694:4060   */\ntag_44:\n    /* \"#utility.yul\":3836:3839   */\n  0x00\n    /* \"#utility.yul\":3857:3924   */\n  tag_87\n    /* \"#utility.yul\":3921:3923   */\n  0x11\n    /* \"#utility.yul\":3916:3919   */\n  dup4\n    /* \"#utility.yul\":3857:3924   */\n  tag_40\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3850:3924   */\n  swap2\n  pop\n    /* \"#utility.yul\":3933:4026   */\n  tag_88\n    /* \"#utility.yul\":4022:4025   */\n  dup3\n    /* \"#utility.yul\":3933:4026   */\n  tag_43\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4051:4053   */\n  0x20\n    /* \"#utility.yul\":4046:4049   */\n  dup3\n    /* \"#utility.yul\":4042:4054   */\n  add\n    /* \"#utility.yul\":4035:4054   */\n  swap1\n  pop\n    /* \"#utility.yul\":3694:4060   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4066:4485   */\ntag_20:\n    /* \"#utility.yul\":4232:4236   */\n  0x00\n    /* \"#utility.yul\":4270:4272   */\n  0x20\n    /* \"#utility.yul\":4259:4268   */\n  dup3\n    /* \"#utility.yul\":4255:4273   */\n  add\n    /* \"#utility.yul\":4247:4273   */\n  swap1\n  pop\n    /* \"#utility.yul\":4319:4328   */\n  dup2\n    /* \"#utility.yul\":4313:4317   */\n  dup2\n    /* \"#utility.yul\":4309:4329   */\n  sub\n    /* \"#utility.yul\":4305:4306   */\n  0x00\n    /* \"#utility.yul\":4294:4303   */\n  dup4\n    /* \"#utility.yul\":4290:4307   */\n  add\n    /* \"#utility.yul\":4283:4330   */\n  mstore\n    /* \"#utility.yul\":4347:4478   */\n  tag_90\n    /* \"#utility.yul\":4473:4477   */\n  dup2\n    /* \"#utility.yul\":4347:4478   */\n  tag_44\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4339:4478   */\n  swap1\n  pop\n    /* \"#utility.yul\":4066:4485   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4491:4658   */\ntag_45:\n    /* \"#utility.yul\":4631:4650   */\n  0x666565436f6c6c6563746f72207a65726f000000000000000000000000000000\n    /* \"#utility.yul\":4627:4628   */\n  0x00\n    /* \"#utility.yul\":4619:4625   */\n  dup3\n    /* \"#utility.yul\":4615:4629   */\n  add\n    /* \"#utility.yul\":4608:4651   */\n  mstore\n    /* \"#utility.yul\":4491:4658   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4664:5030   */\ntag_46:\n    /* \"#utility.yul\":4806:4809   */\n  0x00\n    /* \"#utility.yul\":4827:4894   */\n  tag_93\n    /* \"#utility.yul\":4891:4893   */\n  0x11\n    /* \"#utility.yul\":4886:4889   */\n  dup4\n    /* \"#utility.yul\":4827:4894   */\n  tag_40\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4820:4894   */\n  swap2\n  pop\n    /* \"#utility.yul\":4903:4996   */\n  tag_94\n    /* \"#utility.yul\":4992:4995   */\n  dup3\n    /* \"#utility.yul\":4903:4996   */\n  tag_45\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":5021:5023   */\n  0x20\n    /* \"#utility.yul\":5016:5019   */\n  dup3\n    /* \"#utility.yul\":5012:5024   */\n  add\n    /* \"#utility.yul\":5005:5024   */\n  swap1\n  pop\n    /* \"#utility.yul\":4664:5030   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5036:5455   */\ntag_23:\n    /* \"#utility.yul\":5202:5206   */\n  0x00\n    /* \"#utility.yul\":5240:5242   */\n  0x20\n    /* \"#utility.yul\":5229:5238   */\n  dup3\n    /* \"#utility.yul\":5225:5243   */\n  add\n    /* \"#utility.yul\":5217:5243   */\n  swap1\n  pop\n    /* \"#utility.yul\":5289:5298   */\n  dup2\n    /* \"#utility.yul\":5283:5287   */\n  dup2\n    /* \"#utility.yul\":5279:5299   */\n  sub\n    /* \"#utility.yul\":5275:5276   */\n  0x00\n    /* \"#utility.yul\":5264:5273   */\n  dup4\n    /* \"#utility.yul\":5260:5277   */\n  add\n    /* \"#utility.yul\":5253:5300   */\n  mstore\n    /* \"#utility.yul\":5317:5448   */\n  tag_96\n    /* \"#utility.yul\":5443:5447   */\n  dup2\n    /* \"#utility.yul\":5317:5448   */\n  tag_46\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":5309:5448   */\n  swap1\n  pop\n    /* \"#utility.yul\":5036:5455   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:5631   */\ntag_47:\n    /* \"#utility.yul\":5601:5623   */\n  0x66656550657263656e74206d6178203130303030000000000000000000000000\n    /* \"#utility.yul\":5597:5598   */\n  0x00\n    /* \"#utility.yul\":5589:5595   */\n  dup3\n    /* \"#utility.yul\":5585:5599   */\n  add\n    /* \"#utility.yul\":5578:5624   */\n  mstore\n    /* \"#utility.yul\":5461:5631   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5637:6003   */\ntag_48:\n    /* \"#utility.yul\":5779:5782   */\n  0x00\n    /* \"#utility.yul\":5800:5867   */\n  tag_99\n    /* \"#utility.yul\":5864:5866   */\n  0x14\n    /* \"#utility.yul\":5859:5862   */\n  dup4\n    /* \"#utility.yul\":5800:5867   */\n  tag_40\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5793:5867   */\n  swap2\n  pop\n    /* \"#utility.yul\":5876:5969   */\n  tag_100\n    /* \"#utility.yul\":5965:5968   */\n  dup3\n    /* \"#utility.yul\":5876:5969   */\n  tag_47\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5994:5996   */\n  0x20\n    /* \"#utility.yul\":5989:5992   */\n  dup3\n    /* \"#utility.yul\":5985:5997   */\n  add\n    /* \"#utility.yul\":5978:5997   */\n  swap1\n  pop\n    /* \"#utility.yul\":5637:6003   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6009:6428   */\ntag_26:\n    /* \"#utility.yul\":6175:6179   */\n  0x00\n    /* \"#utility.yul\":6213:6215   */\n  0x20\n    /* \"#utility.yul\":6202:6211   */\n  dup3\n    /* \"#utility.yul\":6198:6216   */\n  add\n    /* \"#utility.yul\":6190:6216   */\n  swap1\n  pop\n    /* \"#utility.yul\":6262:6271   */\n  dup2\n    /* \"#utility.yul\":6256:6260   */\n  dup2\n    /* \"#utility.yul\":6252:6272   */\n  sub\n    /* \"#utility.yul\":6248:6249   */\n  0x00\n    /* \"#utility.yul\":6237:6246   */\n  dup4\n    /* \"#utility.yul\":6233:6250   */\n  add\n    /* \"#utility.yul\":6226:6273   */\n  mstore\n    /* \"#utility.yul\":6290:6421   */\n  tag_102\n    /* \"#utility.yul\":6416:6420   */\n  dup2\n    /* \"#utility.yul\":6290:6421   */\n  tag_48\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":6282:6421   */\n  swap1\n  pop\n    /* \"#utility.yul\":6009:6428   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Marketplace_NFT.sol\":420:5720  contract SavePointMarketplace is Ownable, ReentrancyGuard {... */\ntag_27:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Marketplace_NFT.sol\":420:5720  contract SavePointMarketplace is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80df50a8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc415b95c\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc415b95c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcb917b9c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xde74e57b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x80df50a8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa42dce80\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc0f6ae97\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x6a326ab1\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x6a326ab1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7ce3489b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7fd6f15c\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x3013ce29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ae6064b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4e9b8c5d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x51ed8288\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Marketplace_NFT.sol\":517:543  IERC20 public paymentToken */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Marketplace_NFT.sol\":2930:4303  function listNFT(address nftContract, uint256 tokenId, uint256 amount, uint256 price, bool isERC1155) external nonReentrant {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"Marketplace_NFT.sol\":5590:5718  function isAllowedNFT(address nftContract) external view returns (bool) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Marketplace_NFT.sol\":4652:5532  function buyNFT(uint256 listingId) external nonReentrant {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"Marketplace_NFT.sol\":2231:2410  function setPaymentToken(address _paymentToken) external onlyOwner {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      stop\n        /* \"Marketplace_NFT.sol\":2593:2749  function setFeePercent(uint256 _feePercent) external onlyOwner {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Marketplace_NFT.sol\":624:649  uint256 public feePercent */\n    tag_10:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Marketplace_NFT.sol\":2755:2899  function setAllowedNFTContract(address nftContract, bool allowed) external onlyOwner {... */\n    tag_11:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Marketplace_NFT.sol\":2416:2587  function setFeeCollector(address _feeCollector) external onlyOwner {... */\n    tag_13:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"Marketplace_NFT.sol\":760:811  mapping(address => bool) public allowedNFTContracts */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Marketplace_NFT.sol\":567:594  address public feeCollector */\n    tag_15:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Marketplace_NFT.sol\":4331:4614  function delistNFT(uint256 listingId) external nonReentrant {... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"Marketplace_NFT.sol\":1237:1280  mapping(uint256 => Listing) public listings */\n    tag_17:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"Marketplace_NFT.sol\":517:543  IERC20 public paymentToken */\n    tag_23:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":2930:4303  function listNFT(address nftContract, uint256 tokenId, uint256 amount, uint256 price, bool isERC1155) external nonReentrant {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_83\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_82:\n        /* \"Marketplace_NFT.sol\":3072:3091  allowedNFTContracts */\n      0x05\n        /* \"Marketplace_NFT.sol\":3072:3104  allowedNFTContracts[nftContract] */\n      0x00\n        /* \"Marketplace_NFT.sol\":3092:3103  nftContract */\n      dup7\n        /* \"Marketplace_NFT.sol\":3072:3104  allowedNFTContracts[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Marketplace_NFT.sol\":3064:3133  require(allowedNFTContracts[nftContract], \"NFT contract not allowed\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"Marketplace_NFT.sol\":3159:3160  0 */\n      0x00\n        /* \"Marketplace_NFT.sol\":3151:3156  price */\n      dup3\n        /* \"Marketplace_NFT.sol\":3151:3160  price > 0 */\n      gt\n        /* \"Marketplace_NFT.sol\":3143:3175  require(price > 0, \"price zero\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"Marketplace_NFT.sol\":3190:3199  isERC1155 */\n      dup1\n        /* \"Marketplace_NFT.sol\":3186:3886  if (isERC1155) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"Marketplace_NFT.sol\":3232:3233  0 */\n      0x00\n        /* \"Marketplace_NFT.sol\":3223:3229  amount */\n      dup4\n        /* \"Marketplace_NFT.sol\":3223:3233  amount > 0 */\n      gt\n        /* \"Marketplace_NFT.sol\":3215:3249  require(amount > 0, \"amount zero\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"Marketplace_NFT.sol\":3307:3323  IERC1155 erc1155 */\n      0x00\n        /* \"Marketplace_NFT.sol\":3335:3346  nftContract */\n      dup6\n        /* \"Marketplace_NFT.sol\":3307:3347  IERC1155 erc1155 = IERC1155(nftContract) */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":3411:3417  amount */\n      dup4\n        /* \"Marketplace_NFT.sol\":3369:3376  erc1155 */\n      dup2\n        /* \"Marketplace_NFT.sol\":3369:3386  erc1155.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"Marketplace_NFT.sol\":3387:3397  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":3399:3406  tokenId */\n      dup9\n        /* \"Marketplace_NFT.sol\":3369:3407  erc1155.balanceOf(msg.sender, tokenId) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"Marketplace_NFT.sol\":3369:3417  erc1155.balanceOf(msg.sender, tokenId) >= amount */\n      lt\n      iszero\n        /* \"Marketplace_NFT.sol\":3361:3442  require(erc1155.balanceOf(msg.sender, tokenId) >= amount, \"insufficient balance\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"Marketplace_NFT.sol\":3464:3471  erc1155 */\n      dup1\n        /* \"Marketplace_NFT.sol\":3464:3488  erc1155.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"Marketplace_NFT.sol\":3489:3499  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":3509:3513  this */\n      address\n        /* \"Marketplace_NFT.sol\":3464:3515  erc1155.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"Marketplace_NFT.sol\":3456:3532  require(erc1155.isApprovedForAll(msg.sender, address(this)), \"not approved\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"Marketplace_NFT.sol\":3201:3543  {... */\n      pop\n        /* \"Marketplace_NFT.sol\":3186:3886  if (isERC1155) {... */\n      jump(tag_113)\n    tag_91:\n        /* \"Marketplace_NFT.sol\":3581:3582  1 */\n      0x01\n        /* \"Marketplace_NFT.sol\":3571:3577  amount */\n      dup4\n        /* \"Marketplace_NFT.sol\":3571:3582  amount == 1 */\n      eq\n        /* \"Marketplace_NFT.sol\":3563:3614  require(amount == 1, \"amount must be 1 for ERC721\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"Marketplace_NFT.sol\":3628:3642  IERC721 erc721 */\n      0x00\n        /* \"Marketplace_NFT.sol\":3653:3664  nftContract */\n      dup6\n        /* \"Marketplace_NFT.sol\":3628:3665  IERC721 erc721 = IERC721(nftContract) */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":3714:3724  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":3687:3724  erc721.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":3687:3693  erc721 */\n      dup2\n        /* \"Marketplace_NFT.sol\":3687:3701  erc721.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"Marketplace_NFT.sol\":3702:3709  tokenId */\n      dup8\n        /* \"Marketplace_NFT.sol\":3687:3710  erc721.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"Marketplace_NFT.sol\":3687:3724  erc721.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Marketplace_NFT.sol\":3679:3738  require(erc721.ownerOf(tokenId) == msg.sender, \"not owner\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"Marketplace_NFT.sol\":3760:3766  erc721 */\n      dup1\n        /* \"Marketplace_NFT.sol\":3760:3783  erc721.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"Marketplace_NFT.sol\":3784:3794  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":3804:3808  this */\n      address\n        /* \"Marketplace_NFT.sol\":3760:3810  erc721.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_125:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_128:\n        /* \"Marketplace_NFT.sol\":3760:3858  erc721.isApprovedForAll(msg.sender, address(this)) || erc721.getApproved(tokenId) == address(this) */\n      dup1\n      tag_129\n      jumpi\n      pop\n        /* \"Marketplace_NFT.sol\":3853:3857  this */\n      address\n        /* \"Marketplace_NFT.sol\":3814:3858  erc721.getApproved(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":3814:3820  erc721 */\n      dup2\n        /* \"Marketplace_NFT.sol\":3814:3832  erc721.getApproved */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x081812fc\n        /* \"Marketplace_NFT.sol\":3833:3840  tokenId */\n      dup8\n        /* \"Marketplace_NFT.sol\":3814:3841  erc721.getApproved(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_133:\n        /* \"Marketplace_NFT.sol\":3814:3858  erc721.getApproved(tokenId) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Marketplace_NFT.sol\":3760:3858  erc721.isApprovedForAll(msg.sender, address(this)) || erc721.getApproved(tokenId) == address(this) */\n    tag_129:\n        /* \"Marketplace_NFT.sol\":3752:3875  require(erc721.isApprovedForAll(msg.sender, address(this)) || erc721.getApproved(tokenId) == address(this), \"not approved\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_112\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"Marketplace_NFT.sol\":3549:3886  {... */\n      pop\n        /* \"Marketplace_NFT.sol\":3186:3886  if (isERC1155) {... */\n    tag_113:\n        /* \"Marketplace_NFT.sol\":3896:3913  uint256 listingId */\n      0x00\n        /* \"Marketplace_NFT.sol\":3916:3933  _listingIdCounter */\n      0x06\n      0x00\n        /* \"Marketplace_NFT.sol\":3916:3935  _listingIdCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"Marketplace_NFT.sol\":3896:3935  uint256 listingId = _listingIdCounter++ */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":3967:4200  Listing({... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Marketplace_NFT.sol\":3997:4007  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":3967:4200  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Marketplace_NFT.sol\":4034:4045  nftContract */\n      dup8\n        /* \"Marketplace_NFT.sol\":3967:4200  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Marketplace_NFT.sol\":4068:4075  tokenId */\n      dup7\n        /* \"Marketplace_NFT.sol\":3967:4200  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Marketplace_NFT.sol\":4097:4103  amount */\n      dup6\n        /* \"Marketplace_NFT.sol\":3967:4200  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Marketplace_NFT.sol\":4124:4129  price */\n      dup5\n        /* \"Marketplace_NFT.sol\":3967:4200  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Marketplace_NFT.sol\":4154:4163  isERC1155 */\n      dup4\n        /* \"Marketplace_NFT.sol\":3967:4200  Listing({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Marketplace_NFT.sol\":4185:4189  true */\n      0x01\n        /* \"Marketplace_NFT.sol\":3967:4200  Listing({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Marketplace_NFT.sol\":3945:3953  listings */\n      0x07\n        /* \"Marketplace_NFT.sol\":3945:3964  listings[listingId] */\n      0x00\n        /* \"Marketplace_NFT.sol\":3954:3963  listingId */\n      dup4\n        /* \"Marketplace_NFT.sol\":3945:3964  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Marketplace_NFT.sol\":3945:4200  listings[listingId] = Listing({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"Marketplace_NFT.sol\":4249:4260  nftContract */\n      dup6\n        /* \"Marketplace_NFT.sol\":4216:4296  NFTListed(listingId, msg.sender, nftContract, tokenId, amount, price, isERC1155) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":4237:4247  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":4216:4296  NFTListed(listingId, msg.sender, nftContract, tokenId, amount, price, isERC1155) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":4226:4235  listingId */\n      dup3\n        /* \"Marketplace_NFT.sol\":4216:4296  NFTListed(listingId, msg.sender, nftContract, tokenId, amount, price, isERC1155) */\n      0xd1ed8900afb99183d6684ef82e558ec94d3feba62cff25b765b503bd5505e09f\n        /* \"Marketplace_NFT.sol\":4262:4269  tokenId */\n      dup9\n        /* \"Marketplace_NFT.sol\":4271:4277  amount */\n      dup9\n        /* \"Marketplace_NFT.sol\":4279:4284  price */\n      dup9\n        /* \"Marketplace_NFT.sol\":4286:4295  isERC1155 */\n      dup9\n        /* \"Marketplace_NFT.sol\":4216:4296  NFTListed(listingId, msg.sender, nftContract, tokenId, amount, price, isERC1155) */\n      mload(0x40)\n      tag_138\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Marketplace_NFT.sol\":3054:4303  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_141\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_140:\n        /* \"Marketplace_NFT.sol\":2930:4303  function listNFT(address nftContract, uint256 tokenId, uint256 amount, uint256 price, bool isERC1155) external nonReentrant {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":5590:5718  function isAllowedNFT(address nftContract) external view returns (bool) {... */\n    tag_33:\n        /* \"Marketplace_NFT.sol\":5656:5660  bool */\n      0x00\n        /* \"Marketplace_NFT.sol\":5679:5698  allowedNFTContracts */\n      0x05\n        /* \"Marketplace_NFT.sol\":5679:5711  allowedNFTContracts[nftContract] */\n      0x00\n        /* \"Marketplace_NFT.sol\":5699:5710  nftContract */\n      dup4\n        /* \"Marketplace_NFT.sol\":5679:5711  allowedNFTContracts[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Marketplace_NFT.sol\":5672:5711  return allowedNFTContracts[nftContract] */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":5590:5718  function isAllowedNFT(address nftContract) external view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":4652:5532  function buyNFT(uint256 listingId) external nonReentrant {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_83\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_144:\n        /* \"Marketplace_NFT.sol\":4719:4736  Listing storage l */\n      0x00\n        /* \"Marketplace_NFT.sol\":4739:4747  listings */\n      0x07\n        /* \"Marketplace_NFT.sol\":4739:4758  listings[listingId] */\n      0x00\n        /* \"Marketplace_NFT.sol\":4748:4757  listingId */\n      dup4\n        /* \"Marketplace_NFT.sol\":4739:4758  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Marketplace_NFT.sol\":4719:4758  Listing storage l = listings[listingId] */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":4776:4777  l */\n      dup1\n        /* \"Marketplace_NFT.sol\":4776:4784  l.active */\n      0x05\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Marketplace_NFT.sol\":4768:4805  require(l.active, \"listing inactive\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"Marketplace_NFT.sol\":4816:4829  uint256 price */\n      0x00\n        /* \"Marketplace_NFT.sol\":4832:4833  l */\n      dup2\n        /* \"Marketplace_NFT.sol\":4832:4839  l.price */\n      0x04\n      add\n      sload\n        /* \"Marketplace_NFT.sol\":4816:4839  uint256 price = l.price */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":4849:4860  uint256 fee */\n      0x00\n        /* \"Marketplace_NFT.sol\":4886:4891  10000 */\n      0x2710\n        /* \"Marketplace_NFT.sol\":4872:4882  feePercent */\n      sload(0x04)\n        /* \"Marketplace_NFT.sol\":4864:4869  price */\n      dup4\n        /* \"Marketplace_NFT.sol\":4864:4882  price * feePercent */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"Marketplace_NFT.sol\":4863:4891  (price * feePercent) / 10000 */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"Marketplace_NFT.sol\":4849:4891  uint256 fee = (price * feePercent) / 10000 */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":4901:4921  uint256 sellerAmount */\n      0x00\n        /* \"Marketplace_NFT.sol\":4932:4935  fee */\n      dup2\n        /* \"Marketplace_NFT.sol\":4924:4929  price */\n      dup4\n        /* \"Marketplace_NFT.sol\":4924:4935  price - fee */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"Marketplace_NFT.sol\":4901:4935  uint256 sellerAmount = price - fee */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":5018:5083  paymentToken.safeTransferFrom(msg.sender, l.seller, sellerAmount) */\n      tag_155\n        /* \"Marketplace_NFT.sol\":5048:5058  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":5060:5061  l */\n      dup6\n        /* \"Marketplace_NFT.sol\":5060:5068  l.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5070:5082  sellerAmount */\n      dup4\n        /* \"Marketplace_NFT.sol\":5018:5030  paymentToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5018:5047  paymentToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_156\n      swap1\n        /* \"Marketplace_NFT.sol\":5018:5083  paymentToken.safeTransferFrom(msg.sender, l.seller, sellerAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"Marketplace_NFT.sol\":5093:5153  paymentToken.safeTransferFrom(msg.sender, feeCollector, fee) */\n      tag_157\n        /* \"Marketplace_NFT.sol\":5123:5133  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":5135:5147  feeCollector */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5149:5152  fee */\n      dup5\n        /* \"Marketplace_NFT.sol\":5093:5105  paymentToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5093:5122  paymentToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_156\n      swap1\n        /* \"Marketplace_NFT.sol\":5093:5153  paymentToken.safeTransferFrom(msg.sender, feeCollector, fee) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"Marketplace_NFT.sol\":5213:5214  l */\n      dup4\n        /* \"Marketplace_NFT.sol\":5213:5224  l.isERC1155 */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Marketplace_NFT.sol\":5209:5441  if (l.isERC1155) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"Marketplace_NFT.sol\":5249:5250  l */\n      dup4\n        /* \"Marketplace_NFT.sol\":5249:5262  l.nftContract */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5240:5280  IERC1155(l.nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"Marketplace_NFT.sol\":5281:5282  l */\n      dup6\n        /* \"Marketplace_NFT.sol\":5281:5289  l.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5291:5301  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":5303:5304  l */\n      dup8\n        /* \"Marketplace_NFT.sol\":5303:5312  l.tokenId */\n      0x02\n      add\n      sload\n        /* \"Marketplace_NFT.sol\":5314:5315  l */\n      dup9\n        /* \"Marketplace_NFT.sol\":5314:5322  l.amount */\n      0x03\n      add\n      sload\n        /* \"Marketplace_NFT.sol\":5240:5327  IERC1155(l.nftContract).safeTransferFrom(l.seller, msg.sender, l.tokenId, l.amount, \"\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      revert(0x00, 0x00)\n    tag_161:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n        /* \"Marketplace_NFT.sol\":5209:5441  if (l.isERC1155) {... */\n      jump(tag_164)\n    tag_158:\n        /* \"Marketplace_NFT.sol\":5366:5367  l */\n      dup4\n        /* \"Marketplace_NFT.sol\":5366:5379  l.nftContract */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5358:5397  IERC721(l.nftContract).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42842e0e\n        /* \"Marketplace_NFT.sol\":5398:5399  l */\n      dup6\n        /* \"Marketplace_NFT.sol\":5398:5406  l.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5408:5418  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":5420:5421  l */\n      dup8\n        /* \"Marketplace_NFT.sol\":5420:5429  l.tokenId */\n      0x02\n      add\n      sload\n        /* \"Marketplace_NFT.sol\":5358:5430  IERC721(l.nftContract).safeTransferFrom(l.seller, msg.sender, l.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      revert(0x00, 0x00)\n    tag_167:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n        /* \"Marketplace_NFT.sol\":5209:5441  if (l.isERC1155) {... */\n    tag_164:\n        /* \"Marketplace_NFT.sol\":5462:5467  false */\n      0x00\n        /* \"Marketplace_NFT.sol\":5451:5452  l */\n      dup5\n        /* \"Marketplace_NFT.sol\":5451:5459  l.active */\n      0x05\n      add\n      0x01\n        /* \"Marketplace_NFT.sol\":5451:5467  l.active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Marketplace_NFT.sol\":5502:5512  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":5483:5525  NFTSale(listingId, msg.sender, price, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":5491:5500  listingId */\n      dup6\n        /* \"Marketplace_NFT.sol\":5483:5525  NFTSale(listingId, msg.sender, price, fee) */\n      0x041bfe3082d481c8f62f6ed145f1d8cbec0daebcb4d750ae5c42a51946551d13\n        /* \"Marketplace_NFT.sol\":5514:5519  price */\n      dup6\n        /* \"Marketplace_NFT.sol\":5521:5524  fee */\n      dup6\n        /* \"Marketplace_NFT.sol\":5483:5525  NFTSale(listingId, msg.sender, price, fee) */\n      mload(0x40)\n      tag_170\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Marketplace_NFT.sol\":4709:5532  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_172\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_141\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_172:\n        /* \"Marketplace_NFT.sol\":4652:5532  function buyNFT(uint256 listingId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":2231:2410  function setPaymentToken(address _paymentToken) external onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_174:\n        /* \"Marketplace_NFT.sol\":2341:2342  0 */\n      0x00\n        /* \"Marketplace_NFT.sol\":2316:2343  _paymentToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":2316:2329  _paymentToken */\n      dup2\n        /* \"Marketplace_NFT.sol\":2316:2343  _paymentToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Marketplace_NFT.sol\":2308:2357  require(_paymentToken != address(0), \"zero addr\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"Marketplace_NFT.sol\":2389:2402  _paymentToken */\n      dup1\n        /* \"Marketplace_NFT.sol\":2367:2379  paymentToken */\n      0x02\n      0x00\n        /* \"Marketplace_NFT.sol\":2367:2403  paymentToken = IERC20(_paymentToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Marketplace_NFT.sol\":2231:2410  function setPaymentToken(address _paymentToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":2593:2749  function setFeePercent(uint256 _feePercent) external onlyOwner {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"Marketplace_NFT.sol\":2689:2694  10000 */\n      0x2710\n        /* \"Marketplace_NFT.sol\":2674:2685  _feePercent */\n      dup2\n        /* \"Marketplace_NFT.sol\":2674:2694  _feePercent <= 10000 */\n      gt\n      iszero\n        /* \"Marketplace_NFT.sol\":2666:2708  require(_feePercent <= 10000, \"max 10000\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"Marketplace_NFT.sol\":2731:2742  _feePercent */\n      dup1\n        /* \"Marketplace_NFT.sol\":2718:2728  feePercent */\n      0x04\n        /* \"Marketplace_NFT.sol\":2718:2742  feePercent = _feePercent */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Marketplace_NFT.sol\":2593:2749  function setFeePercent(uint256 _feePercent) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":624:649  uint256 public feePercent */\n    tag_49:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":2755:2899  function setAllowedNFTContract(address nftContract, bool allowed) external onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"Marketplace_NFT.sol\":2885:2892  allowed */\n      dup1\n        /* \"Marketplace_NFT.sol\":2850:2869  allowedNFTContracts */\n      0x05\n        /* \"Marketplace_NFT.sol\":2850:2882  allowedNFTContracts[nftContract] */\n      0x00\n        /* \"Marketplace_NFT.sol\":2870:2881  nftContract */\n      dup5\n        /* \"Marketplace_NFT.sol\":2850:2882  allowedNFTContracts[nftContract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Marketplace_NFT.sol\":2850:2892  allowedNFTContracts[nftContract] = allowed */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Marketplace_NFT.sol\":2755:2899  function setAllowedNFTContract(address nftContract, bool allowed) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":2416:2587  function setFeeCollector(address _feeCollector) external onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_196:\n        /* \"Marketplace_NFT.sol\":2526:2527  0 */\n      0x00\n        /* \"Marketplace_NFT.sol\":2501:2528  _feeCollector != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":2501:2514  _feeCollector */\n      dup2\n        /* \"Marketplace_NFT.sol\":2501:2528  _feeCollector != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Marketplace_NFT.sol\":2493:2542  require(_feeCollector != address(0), \"zero addr\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_179\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"Marketplace_NFT.sol\":2567:2580  _feeCollector */\n      dup1\n        /* \"Marketplace_NFT.sol\":2552:2564  feeCollector */\n      0x03\n      0x00\n        /* \"Marketplace_NFT.sol\":2552:2580  feeCollector = _feeCollector */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Marketplace_NFT.sol\":2416:2587  function setFeeCollector(address _feeCollector) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":760:811  mapping(address => bool) public allowedNFTContracts */\n    tag_65:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":567:594  address public feeCollector */\n    tag_68:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":4331:4614  function delistNFT(uint256 listingId) external nonReentrant {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_201\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_83\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_201:\n        /* \"Marketplace_NFT.sol\":4401:4418  Listing storage l */\n      0x00\n        /* \"Marketplace_NFT.sol\":4421:4429  listings */\n      0x07\n        /* \"Marketplace_NFT.sol\":4421:4440  listings[listingId] */\n      0x00\n        /* \"Marketplace_NFT.sol\":4430:4439  listingId */\n      dup4\n        /* \"Marketplace_NFT.sol\":4421:4440  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Marketplace_NFT.sol\":4401:4440  Listing storage l = listings[listingId] */\n      swap1\n      pop\n        /* \"Marketplace_NFT.sol\":4458:4459  l */\n      dup1\n        /* \"Marketplace_NFT.sol\":4458:4466  l.active */\n      0x05\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Marketplace_NFT.sol\":4450:4487  require(l.active, \"listing inactive\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_148\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"Marketplace_NFT.sol\":4517:4527  msg.sender */\n      caller\n        /* \"Marketplace_NFT.sol\":4505:4527  l.seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":4505:4506  l */\n      dup2\n        /* \"Marketplace_NFT.sol\":4505:4513  l.seller */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Marketplace_NFT.sol\":4505:4527  l.seller == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Marketplace_NFT.sol\":4497:4542  require(l.seller == msg.sender, \"not seller\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"Marketplace_NFT.sol\":4564:4569  false */\n      0x00\n        /* \"Marketplace_NFT.sol\":4553:4554  l */\n      dup2\n        /* \"Marketplace_NFT.sol\":4553:4561  l.active */\n      0x05\n      add\n      0x01\n        /* \"Marketplace_NFT.sol\":4553:4569  l.active = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Marketplace_NFT.sol\":4597:4606  listingId */\n      dup2\n        /* \"Marketplace_NFT.sol\":4585:4607  NFTDelisted(listingId) */\n      0xc0c55a6edead4433d18cb1e287a0a20a2fa003a6f483bc9823d2e504d70d1c67\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Marketplace_NFT.sol\":4391:4614  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_208\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_141\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_208:\n        /* \"Marketplace_NFT.sol\":4331:4614  function delistNFT(uint256 listingId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Marketplace_NFT.sol\":1237:1280  mapping(uint256 => Listing) public listings */\n    tag_75:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x05\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup8\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_222\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_235)\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_239:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_240:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_241:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_297\n        /* \"#utility.yul\":306:340   */\n      tag_298\n        /* \"#utility.yul\":315:339   */\n      tag_299\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_239\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":306:340   */\n      tag_240\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":288:341   */\n      tag_239\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_242:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_301\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_241\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_243:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_303\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_242\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_244:\n        /* \"#utility.yul\":732:783   */\n      tag_305\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_243\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_25:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_307\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_244\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1133:1250   */\n    tag_246:\n        /* \"#utility.yul\":1242:1243   */\n      0x00\n        /* \"#utility.yul\":1239:1240   */\n      0x00\n        /* \"#utility.yul\":1232:1244   */\n      revert\n        /* \"#utility.yul\":1379:1475   */\n    tag_248:\n        /* \"#utility.yul\":1416:1423   */\n      0x00\n        /* \"#utility.yul\":1445:1469   */\n      tag_312\n        /* \"#utility.yul\":1463:1468   */\n      dup3\n        /* \"#utility.yul\":1445:1469   */\n      tag_239\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1434:1469   */\n      swap1\n      pop\n        /* \"#utility.yul\":1379:1475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1481:1603   */\n    tag_249:\n        /* \"#utility.yul\":1554:1578   */\n      tag_314\n        /* \"#utility.yul\":1572:1577   */\n      dup2\n        /* \"#utility.yul\":1554:1578   */\n      tag_248\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1547:1552   */\n      dup2\n        /* \"#utility.yul\":1544:1579   */\n      eq\n        /* \"#utility.yul\":1534:1597   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":1593:1594   */\n      0x00\n        /* \"#utility.yul\":1590:1591   */\n      0x00\n        /* \"#utility.yul\":1583:1595   */\n      revert\n        /* \"#utility.yul\":1534:1597   */\n    tag_315:\n        /* \"#utility.yul\":1481:1603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1609:1748   */\n    tag_250:\n        /* \"#utility.yul\":1655:1660   */\n      0x00\n        /* \"#utility.yul\":1693:1699   */\n      dup2\n        /* \"#utility.yul\":1680:1700   */\n      calldataload\n        /* \"#utility.yul\":1671:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1709:1742   */\n      tag_317\n        /* \"#utility.yul\":1736:1741   */\n      dup2\n        /* \"#utility.yul\":1709:1742   */\n      tag_249\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1609:1748   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1754:1831   */\n    tag_251:\n        /* \"#utility.yul\":1791:1798   */\n      0x00\n        /* \"#utility.yul\":1820:1825   */\n      dup2\n        /* \"#utility.yul\":1809:1825   */\n      swap1\n      pop\n        /* \"#utility.yul\":1754:1831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1837:1959   */\n    tag_252:\n        /* \"#utility.yul\":1910:1934   */\n      tag_320\n        /* \"#utility.yul\":1928:1933   */\n      dup2\n        /* \"#utility.yul\":1910:1934   */\n      tag_251\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1903:1908   */\n      dup2\n        /* \"#utility.yul\":1900:1935   */\n      eq\n        /* \"#utility.yul\":1890:1953   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":1949:1950   */\n      0x00\n        /* \"#utility.yul\":1946:1947   */\n      0x00\n        /* \"#utility.yul\":1939:1951   */\n      revert\n        /* \"#utility.yul\":1890:1953   */\n    tag_321:\n        /* \"#utility.yul\":1837:1959   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1965:2104   */\n    tag_253:\n        /* \"#utility.yul\":2011:2016   */\n      0x00\n        /* \"#utility.yul\":2049:2055   */\n      dup2\n        /* \"#utility.yul\":2036:2056   */\n      calldataload\n        /* \"#utility.yul\":2027:2056   */\n      swap1\n      pop\n        /* \"#utility.yul\":2065:2098   */\n      tag_323\n        /* \"#utility.yul\":2092:2097   */\n      dup2\n        /* \"#utility.yul\":2065:2098   */\n      tag_252\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":1965:2104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2110:2200   */\n    tag_254:\n        /* \"#utility.yul\":2144:2151   */\n      0x00\n        /* \"#utility.yul\":2187:2192   */\n      dup2\n        /* \"#utility.yul\":2180:2193   */\n      iszero\n        /* \"#utility.yul\":2173:2194   */\n      iszero\n        /* \"#utility.yul\":2162:2194   */\n      swap1\n      pop\n        /* \"#utility.yul\":2110:2200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2206:2322   */\n    tag_255:\n        /* \"#utility.yul\":2276:2297   */\n      tag_326\n        /* \"#utility.yul\":2291:2296   */\n      dup2\n        /* \"#utility.yul\":2276:2297   */\n      tag_254\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2269:2274   */\n      dup2\n        /* \"#utility.yul\":2266:2298   */\n      eq\n        /* \"#utility.yul\":2256:2316   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2312:2313   */\n      0x00\n        /* \"#utility.yul\":2309:2310   */\n      0x00\n        /* \"#utility.yul\":2302:2314   */\n      revert\n        /* \"#utility.yul\":2256:2316   */\n    tag_327:\n        /* \"#utility.yul\":2206:2322   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2328:2461   */\n    tag_256:\n        /* \"#utility.yul\":2371:2376   */\n      0x00\n        /* \"#utility.yul\":2409:2415   */\n      dup2\n        /* \"#utility.yul\":2396:2416   */\n      calldataload\n        /* \"#utility.yul\":2387:2416   */\n      swap1\n      pop\n        /* \"#utility.yul\":2425:2455   */\n      tag_329\n        /* \"#utility.yul\":2449:2454   */\n      dup2\n        /* \"#utility.yul\":2425:2455   */\n      tag_255\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2328:2461   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2467:3372   */\n    tag_28:\n        /* \"#utility.yul\":2559:2565   */\n      0x00\n        /* \"#utility.yul\":2567:2573   */\n      0x00\n        /* \"#utility.yul\":2575:2581   */\n      0x00\n        /* \"#utility.yul\":2583:2589   */\n      0x00\n        /* \"#utility.yul\":2591:2597   */\n      0x00\n        /* \"#utility.yul\":2640:2643   */\n      0xa0\n        /* \"#utility.yul\":2628:2637   */\n      dup7\n        /* \"#utility.yul\":2619:2626   */\n      dup9\n        /* \"#utility.yul\":2615:2638   */\n      sub\n        /* \"#utility.yul\":2611:2644   */\n      slt\n        /* \"#utility.yul\":2608:2728   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":2647:2726   */\n      tag_332\n      tag_246\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2608:2728   */\n    tag_331:\n        /* \"#utility.yul\":2767:2768   */\n      0x00\n        /* \"#utility.yul\":2792:2845   */\n      tag_333\n        /* \"#utility.yul\":2837:2844   */\n      dup9\n        /* \"#utility.yul\":2828:2834   */\n      dup3\n        /* \"#utility.yul\":2817:2826   */\n      dup10\n        /* \"#utility.yul\":2813:2835   */\n      add\n        /* \"#utility.yul\":2792:2845   */\n      tag_250\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":2782:2845   */\n      swap6\n      pop\n        /* \"#utility.yul\":2738:2855   */\n      pop\n        /* \"#utility.yul\":2894:2896   */\n      0x20\n        /* \"#utility.yul\":2920:2973   */\n      tag_334\n        /* \"#utility.yul\":2965:2972   */\n      dup9\n        /* \"#utility.yul\":2956:2962   */\n      dup3\n        /* \"#utility.yul\":2945:2954   */\n      dup10\n        /* \"#utility.yul\":2941:2963   */\n      add\n        /* \"#utility.yul\":2920:2973   */\n      tag_253\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2910:2973   */\n      swap5\n      pop\n        /* \"#utility.yul\":2865:2983   */\n      pop\n        /* \"#utility.yul\":3022:3024   */\n      0x40\n        /* \"#utility.yul\":3048:3101   */\n      tag_335\n        /* \"#utility.yul\":3093:3100   */\n      dup9\n        /* \"#utility.yul\":3084:3090   */\n      dup3\n        /* \"#utility.yul\":3073:3082   */\n      dup10\n        /* \"#utility.yul\":3069:3091   */\n      add\n        /* \"#utility.yul\":3048:3101   */\n      tag_253\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":3038:3101   */\n      swap4\n      pop\n        /* \"#utility.yul\":2993:3111   */\n      pop\n        /* \"#utility.yul\":3150:3152   */\n      0x60\n        /* \"#utility.yul\":3176:3229   */\n      tag_336\n        /* \"#utility.yul\":3221:3228   */\n      dup9\n        /* \"#utility.yul\":3212:3218   */\n      dup3\n        /* \"#utility.yul\":3201:3210   */\n      dup10\n        /* \"#utility.yul\":3197:3219   */\n      add\n        /* \"#utility.yul\":3176:3229   */\n      tag_253\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3166:3229   */\n      swap3\n      pop\n        /* \"#utility.yul\":3121:3239   */\n      pop\n        /* \"#utility.yul\":3278:3281   */\n      0x80\n        /* \"#utility.yul\":3305:3355   */\n      tag_337\n        /* \"#utility.yul\":3347:3354   */\n      dup9\n        /* \"#utility.yul\":3338:3344   */\n      dup3\n        /* \"#utility.yul\":3327:3336   */\n      dup10\n        /* \"#utility.yul\":3323:3345   */\n      add\n        /* \"#utility.yul\":3305:3355   */\n      tag_256\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3295:3355   */\n      swap2\n      pop\n        /* \"#utility.yul\":3249:3365   */\n      pop\n        /* \"#utility.yul\":2467:3372   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3378:3707   */\n    tag_32:\n        /* \"#utility.yul\":3437:3443   */\n      0x00\n        /* \"#utility.yul\":3486:3488   */\n      0x20\n        /* \"#utility.yul\":3474:3483   */\n      dup3\n        /* \"#utility.yul\":3465:3472   */\n      dup5\n        /* \"#utility.yul\":3461:3484   */\n      sub\n        /* \"#utility.yul\":3457:3489   */\n      slt\n        /* \"#utility.yul\":3454:3573   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3492:3571   */\n      tag_340\n      tag_246\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3454:3573   */\n    tag_339:\n        /* \"#utility.yul\":3612:3613   */\n      0x00\n        /* \"#utility.yul\":3637:3690   */\n      tag_341\n        /* \"#utility.yul\":3682:3689   */\n      dup5\n        /* \"#utility.yul\":3673:3679   */\n      dup3\n        /* \"#utility.yul\":3662:3671   */\n      dup6\n        /* \"#utility.yul\":3658:3680   */\n      add\n        /* \"#utility.yul\":3637:3690   */\n      tag_250\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3627:3690   */\n      swap2\n      pop\n        /* \"#utility.yul\":3583:3700   */\n      pop\n        /* \"#utility.yul\":3378:3707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3713:3822   */\n    tag_257:\n        /* \"#utility.yul\":3794:3815   */\n      tag_343\n        /* \"#utility.yul\":3809:3814   */\n      dup2\n        /* \"#utility.yul\":3794:3815   */\n      tag_254\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3789:3792   */\n      dup3\n        /* \"#utility.yul\":3782:3816   */\n      mstore\n        /* \"#utility.yul\":3713:3822   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4038   */\n    tag_35:\n        /* \"#utility.yul\":3915:3919   */\n      0x00\n        /* \"#utility.yul\":3953:3955   */\n      0x20\n        /* \"#utility.yul\":3942:3951   */\n      dup3\n        /* \"#utility.yul\":3938:3956   */\n      add\n        /* \"#utility.yul\":3930:3956   */\n      swap1\n      pop\n        /* \"#utility.yul\":3966:4031   */\n      tag_345\n        /* \"#utility.yul\":4028:4029   */\n      0x00\n        /* \"#utility.yul\":4017:4026   */\n      dup4\n        /* \"#utility.yul\":4013:4030   */\n      add\n        /* \"#utility.yul\":4004:4010   */\n      dup5\n        /* \"#utility.yul\":3966:4031   */\n      tag_257\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3828:4038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4044:4373   */\n    tag_38:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4152:4154   */\n      0x20\n        /* \"#utility.yul\":4140:4149   */\n      dup3\n        /* \"#utility.yul\":4131:4138   */\n      dup5\n        /* \"#utility.yul\":4127:4150   */\n      sub\n        /* \"#utility.yul\":4123:4155   */\n      slt\n        /* \"#utility.yul\":4120:4239   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":4158:4237   */\n      tag_348\n      tag_246\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4120:4239   */\n    tag_347:\n        /* \"#utility.yul\":4278:4279   */\n      0x00\n        /* \"#utility.yul\":4303:4356   */\n      tag_349\n        /* \"#utility.yul\":4348:4355   */\n      dup5\n        /* \"#utility.yul\":4339:4345   */\n      dup3\n        /* \"#utility.yul\":4328:4337   */\n      dup6\n        /* \"#utility.yul\":4324:4346   */\n      add\n        /* \"#utility.yul\":4303:4356   */\n      tag_253\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4293:4356   */\n      swap2\n      pop\n        /* \"#utility.yul\":4249:4366   */\n      pop\n        /* \"#utility.yul\":4044:4373   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4379:4497   */\n    tag_258:\n        /* \"#utility.yul\":4466:4490   */\n      tag_351\n        /* \"#utility.yul\":4484:4489   */\n      dup2\n        /* \"#utility.yul\":4466:4490   */\n      tag_251\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4461:4464   */\n      dup3\n        /* \"#utility.yul\":4454:4491   */\n      mstore\n        /* \"#utility.yul\":4379:4497   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4503:4725   */\n    tag_51:\n        /* \"#utility.yul\":4596:4600   */\n      0x00\n        /* \"#utility.yul\":4634:4636   */\n      0x20\n        /* \"#utility.yul\":4623:4632   */\n      dup3\n        /* \"#utility.yul\":4619:4637   */\n      add\n        /* \"#utility.yul\":4611:4637   */\n      swap1\n      pop\n        /* \"#utility.yul\":4647:4718   */\n      tag_353\n        /* \"#utility.yul\":4715:4716   */\n      0x00\n        /* \"#utility.yul\":4704:4713   */\n      dup4\n        /* \"#utility.yul\":4700:4717   */\n      add\n        /* \"#utility.yul\":4691:4697   */\n      dup5\n        /* \"#utility.yul\":4647:4718   */\n      tag_258\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4503:4725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4731:5199   */\n    tag_54:\n        /* \"#utility.yul\":4796:4802   */\n      0x00\n        /* \"#utility.yul\":4804:4810   */\n      0x00\n        /* \"#utility.yul\":4853:4855   */\n      0x40\n        /* \"#utility.yul\":4841:4850   */\n      dup4\n        /* \"#utility.yul\":4832:4839   */\n      dup6\n        /* \"#utility.yul\":4828:4851   */\n      sub\n        /* \"#utility.yul\":4824:4856   */\n      slt\n        /* \"#utility.yul\":4821:4940   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":4859:4938   */\n      tag_356\n      tag_246\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4821:4940   */\n    tag_355:\n        /* \"#utility.yul\":4979:4980   */\n      0x00\n        /* \"#utility.yul\":5004:5057   */\n      tag_357\n        /* \"#utility.yul\":5049:5056   */\n      dup6\n        /* \"#utility.yul\":5040:5046   */\n      dup3\n        /* \"#utility.yul\":5029:5038   */\n      dup7\n        /* \"#utility.yul\":5025:5047   */\n      add\n        /* \"#utility.yul\":5004:5057   */\n      tag_250\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4994:5057   */\n      swap3\n      pop\n        /* \"#utility.yul\":4950:5067   */\n      pop\n        /* \"#utility.yul\":5106:5108   */\n      0x20\n        /* \"#utility.yul\":5132:5182   */\n      tag_358\n        /* \"#utility.yul\":5174:5181   */\n      dup6\n        /* \"#utility.yul\":5165:5171   */\n      dup3\n        /* \"#utility.yul\":5154:5163   */\n      dup7\n        /* \"#utility.yul\":5150:5172   */\n      add\n        /* \"#utility.yul\":5132:5182   */\n      tag_256\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5122:5182   */\n      swap2\n      pop\n        /* \"#utility.yul\":5077:5192   */\n      pop\n        /* \"#utility.yul\":4731:5199   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5323   */\n    tag_259:\n        /* \"#utility.yul\":5292:5316   */\n      tag_360\n        /* \"#utility.yul\":5310:5315   */\n      dup2\n        /* \"#utility.yul\":5292:5316   */\n      tag_248\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5287:5290   */\n      dup3\n        /* \"#utility.yul\":5280:5317   */\n      mstore\n        /* \"#utility.yul\":5205:5323   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5329:5551   */\n    tag_59:\n        /* \"#utility.yul\":5422:5426   */\n      0x00\n        /* \"#utility.yul\":5460:5462   */\n      0x20\n        /* \"#utility.yul\":5449:5458   */\n      dup3\n        /* \"#utility.yul\":5445:5463   */\n      add\n        /* \"#utility.yul\":5437:5463   */\n      swap1\n      pop\n        /* \"#utility.yul\":5473:5544   */\n      tag_362\n        /* \"#utility.yul\":5541:5542   */\n      0x00\n        /* \"#utility.yul\":5530:5539   */\n      dup4\n        /* \"#utility.yul\":5526:5543   */\n      add\n        /* \"#utility.yul\":5517:5523   */\n      dup5\n        /* \"#utility.yul\":5473:5544   */\n      tag_259\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5329:5551   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5557:6419   */\n    tag_77:\n        /* \"#utility.yul\":5806:5810   */\n      0x00\n        /* \"#utility.yul\":5844:5847   */\n      0xe0\n        /* \"#utility.yul\":5833:5842   */\n      dup3\n        /* \"#utility.yul\":5829:5848   */\n      add\n        /* \"#utility.yul\":5821:5848   */\n      swap1\n      pop\n        /* \"#utility.yul\":5858:5929   */\n      tag_364\n        /* \"#utility.yul\":5926:5927   */\n      0x00\n        /* \"#utility.yul\":5915:5924   */\n      dup4\n        /* \"#utility.yul\":5911:5928   */\n      add\n        /* \"#utility.yul\":5902:5908   */\n      dup11\n        /* \"#utility.yul\":5858:5929   */\n      tag_259\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5939:6011   */\n      tag_365\n        /* \"#utility.yul\":6007:6009   */\n      0x20\n        /* \"#utility.yul\":5996:6005   */\n      dup4\n        /* \"#utility.yul\":5992:6010   */\n      add\n        /* \"#utility.yul\":5983:5989   */\n      dup10\n        /* \"#utility.yul\":5939:6011   */\n      tag_259\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6021:6093   */\n      tag_366\n        /* \"#utility.yul\":6089:6091   */\n      0x40\n        /* \"#utility.yul\":6078:6087   */\n      dup4\n        /* \"#utility.yul\":6074:6092   */\n      add\n        /* \"#utility.yul\":6065:6071   */\n      dup9\n        /* \"#utility.yul\":6021:6093   */\n      tag_258\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6103:6175   */\n      tag_367\n        /* \"#utility.yul\":6171:6173   */\n      0x60\n        /* \"#utility.yul\":6160:6169   */\n      dup4\n        /* \"#utility.yul\":6156:6174   */\n      add\n        /* \"#utility.yul\":6147:6153   */\n      dup8\n        /* \"#utility.yul\":6103:6175   */\n      tag_258\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6185:6258   */\n      tag_368\n        /* \"#utility.yul\":6253:6256   */\n      0x80\n        /* \"#utility.yul\":6242:6251   */\n      dup4\n        /* \"#utility.yul\":6238:6257   */\n      add\n        /* \"#utility.yul\":6229:6235   */\n      dup7\n        /* \"#utility.yul\":6185:6258   */\n      tag_258\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6268:6335   */\n      tag_369\n        /* \"#utility.yul\":6330:6333   */\n      0xa0\n        /* \"#utility.yul\":6319:6328   */\n      dup4\n        /* \"#utility.yul\":6315:6334   */\n      add\n        /* \"#utility.yul\":6306:6312   */\n      dup6\n        /* \"#utility.yul\":6268:6335   */\n      tag_257\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6345:6412   */\n      tag_370\n        /* \"#utility.yul\":6407:6410   */\n      0xc0\n        /* \"#utility.yul\":6396:6405   */\n      dup4\n        /* \"#utility.yul\":6392:6411   */\n      add\n        /* \"#utility.yul\":6383:6389   */\n      dup5\n        /* \"#utility.yul\":6345:6412   */\n      tag_257\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5557:6419   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6594   */\n    tag_260:\n        /* \"#utility.yul\":6509:6520   */\n      0x00\n        /* \"#utility.yul\":6543:6549   */\n      dup3\n        /* \"#utility.yul\":6538:6541   */\n      dup3\n        /* \"#utility.yul\":6531:6550   */\n      mstore\n        /* \"#utility.yul\":6583:6587   */\n      0x20\n        /* \"#utility.yul\":6578:6581   */\n      dup3\n        /* \"#utility.yul\":6574:6588   */\n      add\n        /* \"#utility.yul\":6559:6588   */\n      swap1\n      pop\n        /* \"#utility.yul\":6425:6594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6600:6774   */\n    tag_261:\n        /* \"#utility.yul\":6740:6766   */\n      0x4e465420636f6e7472616374206e6f7420616c6c6f7765640000000000000000\n        /* \"#utility.yul\":6736:6737   */\n      0x00\n        /* \"#utility.yul\":6728:6734   */\n      dup3\n        /* \"#utility.yul\":6724:6738   */\n      add\n        /* \"#utility.yul\":6717:6767   */\n      mstore\n        /* \"#utility.yul\":6600:6774   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6780:7146   */\n    tag_262:\n        /* \"#utility.yul\":6922:6925   */\n      0x00\n        /* \"#utility.yul\":6943:7010   */\n      tag_374\n        /* \"#utility.yul\":7007:7009   */\n      0x18\n        /* \"#utility.yul\":7002:7005   */\n      dup4\n        /* \"#utility.yul\":6943:7010   */\n      tag_260\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6936:7010   */\n      swap2\n      pop\n        /* \"#utility.yul\":7019:7112   */\n      tag_375\n        /* \"#utility.yul\":7108:7111   */\n      dup3\n        /* \"#utility.yul\":7019:7112   */\n      tag_261\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7137:7139   */\n      0x20\n        /* \"#utility.yul\":7132:7135   */\n      dup3\n        /* \"#utility.yul\":7128:7140   */\n      add\n        /* \"#utility.yul\":7121:7140   */\n      swap1\n      pop\n        /* \"#utility.yul\":6780:7146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7152:7571   */\n    tag_87:\n        /* \"#utility.yul\":7318:7322   */\n      0x00\n        /* \"#utility.yul\":7356:7358   */\n      0x20\n        /* \"#utility.yul\":7345:7354   */\n      dup3\n        /* \"#utility.yul\":7341:7359   */\n      add\n        /* \"#utility.yul\":7333:7359   */\n      swap1\n      pop\n        /* \"#utility.yul\":7405:7414   */\n      dup2\n        /* \"#utility.yul\":7399:7403   */\n      dup2\n        /* \"#utility.yul\":7395:7415   */\n      sub\n        /* \"#utility.yul\":7391:7392   */\n      0x00\n        /* \"#utility.yul\":7380:7389   */\n      dup4\n        /* \"#utility.yul\":7376:7393   */\n      add\n        /* \"#utility.yul\":7369:7416   */\n      mstore\n        /* \"#utility.yul\":7433:7564   */\n      tag_377\n        /* \"#utility.yul\":7559:7563   */\n      dup2\n        /* \"#utility.yul\":7433:7564   */\n      tag_262\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7425:7564   */\n      swap1\n      pop\n        /* \"#utility.yul\":7152:7571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7577:7737   */\n    tag_263:\n        /* \"#utility.yul\":7717:7729   */\n      0x7072696365207a65726f00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7713:7714   */\n      0x00\n        /* \"#utility.yul\":7705:7711   */\n      dup3\n        /* \"#utility.yul\":7701:7715   */\n      add\n        /* \"#utility.yul\":7694:7730   */\n      mstore\n        /* \"#utility.yul\":7577:7737   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7743:8109   */\n    tag_264:\n        /* \"#utility.yul\":7885:7888   */\n      0x00\n        /* \"#utility.yul\":7906:7973   */\n      tag_380\n        /* \"#utility.yul\":7970:7972   */\n      0x0a\n        /* \"#utility.yul\":7965:7968   */\n      dup4\n        /* \"#utility.yul\":7906:7973   */\n      tag_260\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7899:7973   */\n      swap2\n      pop\n        /* \"#utility.yul\":7982:8075   */\n      tag_381\n        /* \"#utility.yul\":8071:8074   */\n      dup3\n        /* \"#utility.yul\":7982:8075   */\n      tag_263\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8100:8102   */\n      0x20\n        /* \"#utility.yul\":8095:8098   */\n      dup3\n        /* \"#utility.yul\":8091:8103   */\n      add\n        /* \"#utility.yul\":8084:8103   */\n      swap1\n      pop\n        /* \"#utility.yul\":7743:8109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8115:8534   */\n    tag_90:\n        /* \"#utility.yul\":8281:8285   */\n      0x00\n        /* \"#utility.yul\":8319:8321   */\n      0x20\n        /* \"#utility.yul\":8308:8317   */\n      dup3\n        /* \"#utility.yul\":8304:8322   */\n      add\n        /* \"#utility.yul\":8296:8322   */\n      swap1\n      pop\n        /* \"#utility.yul\":8368:8377   */\n      dup2\n        /* \"#utility.yul\":8362:8366   */\n      dup2\n        /* \"#utility.yul\":8358:8378   */\n      sub\n        /* \"#utility.yul\":8354:8355   */\n      0x00\n        /* \"#utility.yul\":8343:8352   */\n      dup4\n        /* \"#utility.yul\":8339:8356   */\n      add\n        /* \"#utility.yul\":8332:8379   */\n      mstore\n        /* \"#utility.yul\":8396:8527   */\n      tag_383\n        /* \"#utility.yul\":8522:8526   */\n      dup2\n        /* \"#utility.yul\":8396:8527   */\n      tag_264\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8388:8527   */\n      swap1\n      pop\n        /* \"#utility.yul\":8115:8534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8540:8701   */\n    tag_265:\n        /* \"#utility.yul\":8680:8693   */\n      0x616d6f756e74207a65726f000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8676:8677   */\n      0x00\n        /* \"#utility.yul\":8668:8674   */\n      dup3\n        /* \"#utility.yul\":8664:8678   */\n      add\n        /* \"#utility.yul\":8657:8694   */\n      mstore\n        /* \"#utility.yul\":8540:8701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8707:9073   */\n    tag_266:\n        /* \"#utility.yul\":8849:8852   */\n      0x00\n        /* \"#utility.yul\":8870:8937   */\n      tag_386\n        /* \"#utility.yul\":8934:8936   */\n      0x0b\n        /* \"#utility.yul\":8929:8932   */\n      dup4\n        /* \"#utility.yul\":8870:8937   */\n      tag_260\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8863:8937   */\n      swap2\n      pop\n        /* \"#utility.yul\":8946:9039   */\n      tag_387\n        /* \"#utility.yul\":9035:9038   */\n      dup3\n        /* \"#utility.yul\":8946:9039   */\n      tag_265\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9064:9066   */\n      0x20\n        /* \"#utility.yul\":9059:9062   */\n      dup3\n        /* \"#utility.yul\":9055:9067   */\n      add\n        /* \"#utility.yul\":9048:9067   */\n      swap1\n      pop\n        /* \"#utility.yul\":8707:9073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9079:9498   */\n    tag_94:\n        /* \"#utility.yul\":9245:9249   */\n      0x00\n        /* \"#utility.yul\":9283:9285   */\n      0x20\n        /* \"#utility.yul\":9272:9281   */\n      dup3\n        /* \"#utility.yul\":9268:9286   */\n      add\n        /* \"#utility.yul\":9260:9286   */\n      swap1\n      pop\n        /* \"#utility.yul\":9332:9341   */\n      dup2\n        /* \"#utility.yul\":9326:9330   */\n      dup2\n        /* \"#utility.yul\":9322:9342   */\n      sub\n        /* \"#utility.yul\":9318:9319   */\n      0x00\n        /* \"#utility.yul\":9307:9316   */\n      dup4\n        /* \"#utility.yul\":9303:9320   */\n      add\n        /* \"#utility.yul\":9296:9343   */\n      mstore\n        /* \"#utility.yul\":9360:9491   */\n      tag_389\n        /* \"#utility.yul\":9486:9490   */\n      dup2\n        /* \"#utility.yul\":9360:9491   */\n      tag_266\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9352:9491   */\n      swap1\n      pop\n        /* \"#utility.yul\":9079:9498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9504:9836   */\n    tag_96:\n        /* \"#utility.yul\":9625:9629   */\n      0x00\n        /* \"#utility.yul\":9663:9665   */\n      0x40\n        /* \"#utility.yul\":9652:9661   */\n      dup3\n        /* \"#utility.yul\":9648:9666   */\n      add\n        /* \"#utility.yul\":9640:9666   */\n      swap1\n      pop\n        /* \"#utility.yul\":9676:9747   */\n      tag_391\n        /* \"#utility.yul\":9744:9745   */\n      0x00\n        /* \"#utility.yul\":9733:9742   */\n      dup4\n        /* \"#utility.yul\":9729:9746   */\n      add\n        /* \"#utility.yul\":9720:9726   */\n      dup6\n        /* \"#utility.yul\":9676:9747   */\n      tag_259\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9757:9829   */\n      tag_392\n        /* \"#utility.yul\":9825:9827   */\n      0x20\n        /* \"#utility.yul\":9814:9823   */\n      dup4\n        /* \"#utility.yul\":9810:9828   */\n      add\n        /* \"#utility.yul\":9801:9807   */\n      dup5\n        /* \"#utility.yul\":9757:9829   */\n      tag_258\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9504:9836   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9842:9985   */\n    tag_267:\n        /* \"#utility.yul\":9899:9904   */\n      0x00\n        /* \"#utility.yul\":9930:9936   */\n      dup2\n        /* \"#utility.yul\":9924:9937   */\n      mload\n        /* \"#utility.yul\":9915:9937   */\n      swap1\n      pop\n        /* \"#utility.yul\":9946:9979   */\n      tag_394\n        /* \"#utility.yul\":9973:9978   */\n      dup2\n        /* \"#utility.yul\":9946:9979   */\n      tag_252\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9842:9985   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10342   */\n    tag_100:\n        /* \"#utility.yul\":10061:10067   */\n      0x00\n        /* \"#utility.yul\":10110:10112   */\n      0x20\n        /* \"#utility.yul\":10098:10107   */\n      dup3\n        /* \"#utility.yul\":10089:10096   */\n      dup5\n        /* \"#utility.yul\":10085:10108   */\n      sub\n        /* \"#utility.yul\":10081:10113   */\n      slt\n        /* \"#utility.yul\":10078:10197   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":10116:10195   */\n      tag_397\n      tag_246\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":10078:10197   */\n    tag_396:\n        /* \"#utility.yul\":10236:10237   */\n      0x00\n        /* \"#utility.yul\":10261:10325   */\n      tag_398\n        /* \"#utility.yul\":10317:10324   */\n      dup5\n        /* \"#utility.yul\":10308:10314   */\n      dup3\n        /* \"#utility.yul\":10297:10306   */\n      dup6\n        /* \"#utility.yul\":10293:10315   */\n      add\n        /* \"#utility.yul\":10261:10325   */\n      tag_267\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10251:10325   */\n      swap2\n      pop\n        /* \"#utility.yul\":10207:10335   */\n      pop\n        /* \"#utility.yul\":9991:10342   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10348:10518   */\n    tag_268:\n        /* \"#utility.yul\":10488:10510   */\n      0x696e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":10484:10485   */\n      0x00\n        /* \"#utility.yul\":10476:10482   */\n      dup3\n        /* \"#utility.yul\":10472:10486   */\n      add\n        /* \"#utility.yul\":10465:10511   */\n      mstore\n        /* \"#utility.yul\":10348:10518   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10524:10890   */\n    tag_269:\n        /* \"#utility.yul\":10666:10669   */\n      0x00\n        /* \"#utility.yul\":10687:10754   */\n      tag_401\n        /* \"#utility.yul\":10751:10753   */\n      0x14\n        /* \"#utility.yul\":10746:10749   */\n      dup4\n        /* \"#utility.yul\":10687:10754   */\n      tag_260\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10680:10754   */\n      swap2\n      pop\n        /* \"#utility.yul\":10763:10856   */\n      tag_402\n        /* \"#utility.yul\":10852:10855   */\n      dup3\n        /* \"#utility.yul\":10763:10856   */\n      tag_268\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10881:10883   */\n      0x20\n        /* \"#utility.yul\":10876:10879   */\n      dup3\n        /* \"#utility.yul\":10872:10884   */\n      add\n        /* \"#utility.yul\":10865:10884   */\n      swap1\n      pop\n        /* \"#utility.yul\":10524:10890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10896:11315   */\n    tag_103:\n        /* \"#utility.yul\":11062:11066   */\n      0x00\n        /* \"#utility.yul\":11100:11102   */\n      0x20\n        /* \"#utility.yul\":11089:11098   */\n      dup3\n        /* \"#utility.yul\":11085:11103   */\n      add\n        /* \"#utility.yul\":11077:11103   */\n      swap1\n      pop\n        /* \"#utility.yul\":11149:11158   */\n      dup2\n        /* \"#utility.yul\":11143:11147   */\n      dup2\n        /* \"#utility.yul\":11139:11159   */\n      sub\n        /* \"#utility.yul\":11135:11136   */\n      0x00\n        /* \"#utility.yul\":11124:11133   */\n      dup4\n        /* \"#utility.yul\":11120:11137   */\n      add\n        /* \"#utility.yul\":11113:11160   */\n      mstore\n        /* \"#utility.yul\":11177:11308   */\n      tag_404\n        /* \"#utility.yul\":11303:11307   */\n      dup2\n        /* \"#utility.yul\":11177:11308   */\n      tag_269\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":11169:11308   */\n      swap1\n      pop\n        /* \"#utility.yul\":10896:11315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11321:11653   */\n    tag_105:\n        /* \"#utility.yul\":11442:11446   */\n      0x00\n        /* \"#utility.yul\":11480:11482   */\n      0x40\n        /* \"#utility.yul\":11469:11478   */\n      dup3\n        /* \"#utility.yul\":11465:11483   */\n      add\n        /* \"#utility.yul\":11457:11483   */\n      swap1\n      pop\n        /* \"#utility.yul\":11493:11564   */\n      tag_406\n        /* \"#utility.yul\":11561:11562   */\n      0x00\n        /* \"#utility.yul\":11550:11559   */\n      dup4\n        /* \"#utility.yul\":11546:11563   */\n      add\n        /* \"#utility.yul\":11537:11543   */\n      dup6\n        /* \"#utility.yul\":11493:11564   */\n      tag_259\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11574:11646   */\n      tag_407\n        /* \"#utility.yul\":11642:11644   */\n      0x20\n        /* \"#utility.yul\":11631:11640   */\n      dup4\n        /* \"#utility.yul\":11627:11645   */\n      add\n        /* \"#utility.yul\":11618:11624   */\n      dup5\n        /* \"#utility.yul\":11574:11646   */\n      tag_259\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11321:11653   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11659:11796   */\n    tag_270:\n        /* \"#utility.yul\":11713:11718   */\n      0x00\n        /* \"#utility.yul\":11744:11750   */\n      dup2\n        /* \"#utility.yul\":11738:11751   */\n      mload\n        /* \"#utility.yul\":11729:11751   */\n      swap1\n      pop\n        /* \"#utility.yul\":11760:11790   */\n      tag_409\n        /* \"#utility.yul\":11784:11789   */\n      dup2\n        /* \"#utility.yul\":11760:11790   */\n      tag_255\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11659:11796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11802:12147   */\n    tag_109:\n        /* \"#utility.yul\":11869:11875   */\n      0x00\n        /* \"#utility.yul\":11918:11920   */\n      0x20\n        /* \"#utility.yul\":11906:11915   */\n      dup3\n        /* \"#utility.yul\":11897:11904   */\n      dup5\n        /* \"#utility.yul\":11893:11916   */\n      sub\n        /* \"#utility.yul\":11889:11921   */\n      slt\n        /* \"#utility.yul\":11886:12005   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":11924:12003   */\n      tag_412\n      tag_246\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11886:12005   */\n    tag_411:\n        /* \"#utility.yul\":12044:12045   */\n      0x00\n        /* \"#utility.yul\":12069:12130   */\n      tag_413\n        /* \"#utility.yul\":12122:12129   */\n      dup5\n        /* \"#utility.yul\":12113:12119   */\n      dup3\n        /* \"#utility.yul\":12102:12111   */\n      dup6\n        /* \"#utility.yul\":12098:12120   */\n      add\n        /* \"#utility.yul\":12069:12130   */\n      tag_270\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12059:12130   */\n      swap2\n      pop\n        /* \"#utility.yul\":12015:12140   */\n      pop\n        /* \"#utility.yul\":11802:12147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12153:12315   */\n    tag_271:\n        /* \"#utility.yul\":12293:12307   */\n      0x6e6f7420617070726f7665640000000000000000000000000000000000000000\n        /* \"#utility.yul\":12289:12290   */\n      0x00\n        /* \"#utility.yul\":12281:12287   */\n      dup3\n        /* \"#utility.yul\":12277:12291   */\n      add\n        /* \"#utility.yul\":12270:12308   */\n      mstore\n        /* \"#utility.yul\":12153:12315   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12321:12687   */\n    tag_272:\n        /* \"#utility.yul\":12463:12466   */\n      0x00\n        /* \"#utility.yul\":12484:12551   */\n      tag_416\n        /* \"#utility.yul\":12548:12550   */\n      0x0c\n        /* \"#utility.yul\":12543:12546   */\n      dup4\n        /* \"#utility.yul\":12484:12551   */\n      tag_260\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12477:12551   */\n      swap2\n      pop\n        /* \"#utility.yul\":12560:12653   */\n      tag_417\n        /* \"#utility.yul\":12649:12652   */\n      dup3\n        /* \"#utility.yul\":12560:12653   */\n      tag_271\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12678:12680   */\n      0x20\n        /* \"#utility.yul\":12673:12676   */\n      dup3\n        /* \"#utility.yul\":12669:12681   */\n      add\n        /* \"#utility.yul\":12662:12681   */\n      swap1\n      pop\n        /* \"#utility.yul\":12321:12687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12693:13112   */\n    tag_112:\n        /* \"#utility.yul\":12859:12863   */\n      0x00\n        /* \"#utility.yul\":12897:12899   */\n      0x20\n        /* \"#utility.yul\":12886:12895   */\n      dup3\n        /* \"#utility.yul\":12882:12900   */\n      add\n        /* \"#utility.yul\":12874:12900   */\n      swap1\n      pop\n        /* \"#utility.yul\":12946:12955   */\n      dup2\n        /* \"#utility.yul\":12940:12944   */\n      dup2\n        /* \"#utility.yul\":12936:12956   */\n      sub\n        /* \"#utility.yul\":12932:12933   */\n      0x00\n        /* \"#utility.yul\":12921:12930   */\n      dup4\n        /* \"#utility.yul\":12917:12934   */\n      add\n        /* \"#utility.yul\":12910:12957   */\n      mstore\n        /* \"#utility.yul\":12974:13105   */\n      tag_419\n        /* \"#utility.yul\":13100:13104   */\n      dup2\n        /* \"#utility.yul\":12974:13105   */\n      tag_272\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12966:13105   */\n      swap1\n      pop\n        /* \"#utility.yul\":12693:13112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13118:13295   */\n    tag_273:\n        /* \"#utility.yul\":13258:13287   */\n      0x616d6f756e74206d757374206265203120666f72204552433732310000000000\n        /* \"#utility.yul\":13254:13255   */\n      0x00\n        /* \"#utility.yul\":13246:13252   */\n      dup3\n        /* \"#utility.yul\":13242:13256   */\n      add\n        /* \"#utility.yul\":13235:13288   */\n      mstore\n        /* \"#utility.yul\":13118:13295   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13301:13667   */\n    tag_274:\n        /* \"#utility.yul\":13443:13446   */\n      0x00\n        /* \"#utility.yul\":13464:13531   */\n      tag_422\n        /* \"#utility.yul\":13528:13530   */\n      0x1b\n        /* \"#utility.yul\":13523:13526   */\n      dup4\n        /* \"#utility.yul\":13464:13531   */\n      tag_260\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13457:13531   */\n      swap2\n      pop\n        /* \"#utility.yul\":13540:13633   */\n      tag_423\n        /* \"#utility.yul\":13629:13632   */\n      dup3\n        /* \"#utility.yul\":13540:13633   */\n      tag_273\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13658:13660   */\n      0x20\n        /* \"#utility.yul\":13653:13656   */\n      dup3\n        /* \"#utility.yul\":13649:13661   */\n      add\n        /* \"#utility.yul\":13642:13661   */\n      swap1\n      pop\n        /* \"#utility.yul\":13301:13667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13673:14092   */\n    tag_116:\n        /* \"#utility.yul\":13839:13843   */\n      0x00\n        /* \"#utility.yul\":13877:13879   */\n      0x20\n        /* \"#utility.yul\":13866:13875   */\n      dup3\n        /* \"#utility.yul\":13862:13880   */\n      add\n        /* \"#utility.yul\":13854:13880   */\n      swap1\n      pop\n        /* \"#utility.yul\":13926:13935   */\n      dup2\n        /* \"#utility.yul\":13920:13924   */\n      dup2\n        /* \"#utility.yul\":13916:13936   */\n      sub\n        /* \"#utility.yul\":13912:13913   */\n      0x00\n        /* \"#utility.yul\":13901:13910   */\n      dup4\n        /* \"#utility.yul\":13897:13914   */\n      add\n        /* \"#utility.yul\":13890:13937   */\n      mstore\n        /* \"#utility.yul\":13954:14085   */\n      tag_425\n        /* \"#utility.yul\":14080:14084   */\n      dup2\n        /* \"#utility.yul\":13954:14085   */\n      tag_274\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13946:14085   */\n      swap1\n      pop\n        /* \"#utility.yul\":13673:14092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14098:14241   */\n    tag_275:\n        /* \"#utility.yul\":14155:14160   */\n      0x00\n        /* \"#utility.yul\":14186:14192   */\n      dup2\n        /* \"#utility.yul\":14180:14193   */\n      mload\n        /* \"#utility.yul\":14171:14193   */\n      swap1\n      pop\n        /* \"#utility.yul\":14202:14235   */\n      tag_427\n        /* \"#utility.yul\":14229:14234   */\n      dup2\n        /* \"#utility.yul\":14202:14235   */\n      tag_249\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":14098:14241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14247:14598   */\n    tag_121:\n        /* \"#utility.yul\":14317:14323   */\n      0x00\n        /* \"#utility.yul\":14366:14368   */\n      0x20\n        /* \"#utility.yul\":14354:14363   */\n      dup3\n        /* \"#utility.yul\":14345:14352   */\n      dup5\n        /* \"#utility.yul\":14341:14364   */\n      sub\n        /* \"#utility.yul\":14337:14369   */\n      slt\n        /* \"#utility.yul\":14334:14453   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":14372:14451   */\n      tag_430\n      tag_246\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":14334:14453   */\n    tag_429:\n        /* \"#utility.yul\":14492:14493   */\n      0x00\n        /* \"#utility.yul\":14517:14581   */\n      tag_431\n        /* \"#utility.yul\":14573:14580   */\n      dup5\n        /* \"#utility.yul\":14564:14570   */\n      dup3\n        /* \"#utility.yul\":14553:14562   */\n      dup6\n        /* \"#utility.yul\":14549:14571   */\n      add\n        /* \"#utility.yul\":14517:14581   */\n      tag_275\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14507:14581   */\n      swap2\n      pop\n        /* \"#utility.yul\":14463:14591   */\n      pop\n        /* \"#utility.yul\":14247:14598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14604:14763   */\n    tag_276:\n        /* \"#utility.yul\":14744:14755   */\n      0x6e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14740:14741   */\n      0x00\n        /* \"#utility.yul\":14732:14738   */\n      dup3\n        /* \"#utility.yul\":14728:14742   */\n      add\n        /* \"#utility.yul\":14721:14756   */\n      mstore\n        /* \"#utility.yul\":14604:14763   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14769:15134   */\n    tag_277:\n        /* \"#utility.yul\":14911:14914   */\n      0x00\n        /* \"#utility.yul\":14932:14998   */\n      tag_434\n        /* \"#utility.yul\":14996:14997   */\n      0x09\n        /* \"#utility.yul\":14991:14994   */\n      dup4\n        /* \"#utility.yul\":14932:14998   */\n      tag_260\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":14925:14998   */\n      swap2\n      pop\n        /* \"#utility.yul\":15007:15100   */\n      tag_435\n        /* \"#utility.yul\":15096:15099   */\n      dup3\n        /* \"#utility.yul\":15007:15100   */\n      tag_276\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":15125:15127   */\n      0x20\n        /* \"#utility.yul\":15120:15123   */\n      dup3\n        /* \"#utility.yul\":15116:15128   */\n      add\n        /* \"#utility.yul\":15109:15128   */\n      swap1\n      pop\n        /* \"#utility.yul\":14769:15134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15140:15559   */\n    tag_124:\n        /* \"#utility.yul\":15306:15310   */\n      0x00\n        /* \"#utility.yul\":15344:15346   */\n      0x20\n        /* \"#utility.yul\":15333:15342   */\n      dup3\n        /* \"#utility.yul\":15329:15347   */\n      add\n        /* \"#utility.yul\":15321:15347   */\n      swap1\n      pop\n        /* \"#utility.yul\":15393:15402   */\n      dup2\n        /* \"#utility.yul\":15387:15391   */\n      dup2\n        /* \"#utility.yul\":15383:15403   */\n      sub\n        /* \"#utility.yul\":15379:15380   */\n      0x00\n        /* \"#utility.yul\":15368:15377   */\n      dup4\n        /* \"#utility.yul\":15364:15381   */\n      add\n        /* \"#utility.yul\":15357:15404   */\n      mstore\n        /* \"#utility.yul\":15421:15552   */\n      tag_437\n        /* \"#utility.yul\":15547:15551   */\n      dup2\n        /* \"#utility.yul\":15421:15552   */\n      tag_277\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":15413:15552   */\n      swap1\n      pop\n        /* \"#utility.yul\":15140:15559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15565:15745   */\n    tag_278:\n        /* \"#utility.yul\":15613:15690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15610:15611   */\n      0x00\n        /* \"#utility.yul\":15603:15691   */\n      mstore\n        /* \"#utility.yul\":15710:15714   */\n      0x11\n        /* \"#utility.yul\":15707:15708   */\n      0x04\n        /* \"#utility.yul\":15700:15715   */\n      mstore\n        /* \"#utility.yul\":15734:15738   */\n      0x24\n        /* \"#utility.yul\":15731:15732   */\n      0x00\n        /* \"#utility.yul\":15724:15739   */\n      revert\n        /* \"#utility.yul\":15751:15984   */\n    tag_137:\n        /* \"#utility.yul\":15790:15793   */\n      0x00\n        /* \"#utility.yul\":15813:15837   */\n      tag_440\n        /* \"#utility.yul\":15831:15836   */\n      dup3\n        /* \"#utility.yul\":15813:15837   */\n      tag_251\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":15804:15837   */\n      swap2\n      pop\n        /* \"#utility.yul\":15859:15925   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15852:15857   */\n      dup3\n        /* \"#utility.yul\":15849:15926   */\n      sub\n        /* \"#utility.yul\":15846:15949   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":15929:15947   */\n      tag_442\n      tag_278\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":15846:15949   */\n    tag_441:\n        /* \"#utility.yul\":15976:15977   */\n      0x01\n        /* \"#utility.yul\":15969:15974   */\n      dup3\n        /* \"#utility.yul\":15965:15978   */\n      add\n        /* \"#utility.yul\":15958:15978   */\n      swap1\n      pop\n        /* \"#utility.yul\":15751:15984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15990:16531   */\n    tag_139:\n        /* \"#utility.yul\":16161:16165   */\n      0x00\n        /* \"#utility.yul\":16199:16202   */\n      0x80\n        /* \"#utility.yul\":16188:16197   */\n      dup3\n        /* \"#utility.yul\":16184:16203   */\n      add\n        /* \"#utility.yul\":16176:16203   */\n      swap1\n      pop\n        /* \"#utility.yul\":16213:16284   */\n      tag_444\n        /* \"#utility.yul\":16281:16282   */\n      0x00\n        /* \"#utility.yul\":16270:16279   */\n      dup4\n        /* \"#utility.yul\":16266:16283   */\n      add\n        /* \"#utility.yul\":16257:16263   */\n      dup8\n        /* \"#utility.yul\":16213:16284   */\n      tag_258\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":16294:16366   */\n      tag_445\n        /* \"#utility.yul\":16362:16364   */\n      0x20\n        /* \"#utility.yul\":16351:16360   */\n      dup4\n        /* \"#utility.yul\":16347:16365   */\n      add\n        /* \"#utility.yul\":16338:16344   */\n      dup7\n        /* \"#utility.yul\":16294:16366   */\n      tag_258\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":16376:16448   */\n      tag_446\n        /* \"#utility.yul\":16444:16446   */\n      0x40\n        /* \"#utility.yul\":16433:16442   */\n      dup4\n        /* \"#utility.yul\":16429:16447   */\n      add\n        /* \"#utility.yul\":16420:16426   */\n      dup6\n        /* \"#utility.yul\":16376:16448   */\n      tag_258\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":16458:16524   */\n      tag_447\n        /* \"#utility.yul\":16520:16522   */\n      0x60\n        /* \"#utility.yul\":16509:16518   */\n      dup4\n        /* \"#utility.yul\":16505:16523   */\n      add\n        /* \"#utility.yul\":16496:16502   */\n      dup5\n        /* \"#utility.yul\":16458:16524   */\n      tag_257\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":15990:16531   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16537:16703   */\n    tag_279:\n        /* \"#utility.yul\":16677:16695   */\n      0x6c697374696e6720696e61637469766500000000000000000000000000000000\n        /* \"#utility.yul\":16673:16674   */\n      0x00\n        /* \"#utility.yul\":16665:16671   */\n      dup3\n        /* \"#utility.yul\":16661:16675   */\n      add\n        /* \"#utility.yul\":16654:16696   */\n      mstore\n        /* \"#utility.yul\":16537:16703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16709:17075   */\n    tag_280:\n        /* \"#utility.yul\":16851:16854   */\n      0x00\n        /* \"#utility.yul\":16872:16939   */\n      tag_450\n        /* \"#utility.yul\":16936:16938   */\n      0x10\n        /* \"#utility.yul\":16931:16934   */\n      dup4\n        /* \"#utility.yul\":16872:16939   */\n      tag_260\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":16865:16939   */\n      swap2\n      pop\n        /* \"#utility.yul\":16948:17041   */\n      tag_451\n        /* \"#utility.yul\":17037:17040   */\n      dup3\n        /* \"#utility.yul\":16948:17041   */\n      tag_279\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":17066:17068   */\n      0x20\n        /* \"#utility.yul\":17061:17064   */\n      dup3\n        /* \"#utility.yul\":17057:17069   */\n      add\n        /* \"#utility.yul\":17050:17069   */\n      swap1\n      pop\n        /* \"#utility.yul\":16709:17075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17081:17500   */\n    tag_148:\n        /* \"#utility.yul\":17247:17251   */\n      0x00\n        /* \"#utility.yul\":17285:17287   */\n      0x20\n        /* \"#utility.yul\":17274:17283   */\n      dup3\n        /* \"#utility.yul\":17270:17288   */\n      add\n        /* \"#utility.yul\":17262:17288   */\n      swap1\n      pop\n        /* \"#utility.yul\":17334:17343   */\n      dup2\n        /* \"#utility.yul\":17328:17332   */\n      dup2\n        /* \"#utility.yul\":17324:17344   */\n      sub\n        /* \"#utility.yul\":17320:17321   */\n      0x00\n        /* \"#utility.yul\":17309:17318   */\n      dup4\n        /* \"#utility.yul\":17305:17322   */\n      add\n        /* \"#utility.yul\":17298:17345   */\n      mstore\n        /* \"#utility.yul\":17362:17493   */\n      tag_453\n        /* \"#utility.yul\":17488:17492   */\n      dup2\n        /* \"#utility.yul\":17362:17493   */\n      tag_280\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":17354:17493   */\n      swap1\n      pop\n        /* \"#utility.yul\":17081:17500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17506:17916   */\n    tag_150:\n        /* \"#utility.yul\":17546:17553   */\n      0x00\n        /* \"#utility.yul\":17569:17589   */\n      tag_455\n        /* \"#utility.yul\":17587:17588   */\n      dup3\n        /* \"#utility.yul\":17569:17589   */\n      tag_251\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":17564:17589   */\n      swap2\n      pop\n        /* \"#utility.yul\":17603:17623   */\n      tag_456\n        /* \"#utility.yul\":17621:17622   */\n      dup4\n        /* \"#utility.yul\":17603:17623   */\n      tag_251\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":17598:17623   */\n      swap3\n      pop\n        /* \"#utility.yul\":17658:17659   */\n      dup3\n        /* \"#utility.yul\":17655:17656   */\n      dup3\n        /* \"#utility.yul\":17651:17660   */\n      mul\n        /* \"#utility.yul\":17680:17710   */\n      tag_457\n        /* \"#utility.yul\":17698:17709   */\n      dup2\n        /* \"#utility.yul\":17680:17710   */\n      tag_251\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":17669:17710   */\n      swap2\n      pop\n        /* \"#utility.yul\":17859:17860   */\n      dup3\n        /* \"#utility.yul\":17850:17857   */\n      dup3\n        /* \"#utility.yul\":17846:17861   */\n      div\n        /* \"#utility.yul\":17843:17844   */\n      dup5\n        /* \"#utility.yul\":17840:17862   */\n      eq\n        /* \"#utility.yul\":17820:17821   */\n      dup4\n        /* \"#utility.yul\":17813:17822   */\n      iszero\n        /* \"#utility.yul\":17793:17876   */\n      or\n        /* \"#utility.yul\":17770:17909   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":17889:17907   */\n      tag_459\n      tag_278\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":17770:17909   */\n    tag_458:\n        /* \"#utility.yul\":17554:17916   */\n      pop\n        /* \"#utility.yul\":17506:17916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17922:18102   */\n    tag_281:\n        /* \"#utility.yul\":17970:18047   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17967:17968   */\n      0x00\n        /* \"#utility.yul\":17960:18048   */\n      mstore\n        /* \"#utility.yul\":18067:18071   */\n      0x12\n        /* \"#utility.yul\":18064:18065   */\n      0x04\n        /* \"#utility.yul\":18057:18072   */\n      mstore\n        /* \"#utility.yul\":18091:18095   */\n      0x24\n        /* \"#utility.yul\":18088:18089   */\n      0x00\n        /* \"#utility.yul\":18081:18096   */\n      revert\n        /* \"#utility.yul\":18108:18293   */\n    tag_152:\n        /* \"#utility.yul\":18148:18149   */\n      0x00\n        /* \"#utility.yul\":18165:18185   */\n      tag_462\n        /* \"#utility.yul\":18183:18184   */\n      dup3\n        /* \"#utility.yul\":18165:18185   */\n      tag_251\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":18160:18185   */\n      swap2\n      pop\n        /* \"#utility.yul\":18199:18219   */\n      tag_463\n        /* \"#utility.yul\":18217:18218   */\n      dup4\n        /* \"#utility.yul\":18199:18219   */\n      tag_251\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":18194:18219   */\n      swap3\n      pop\n        /* \"#utility.yul\":18238:18239   */\n      dup3\n        /* \"#utility.yul\":18228:18263   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":18243:18261   */\n      tag_465\n      tag_281\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":18228:18263   */\n    tag_464:\n        /* \"#utility.yul\":18285:18286   */\n      dup3\n        /* \"#utility.yul\":18282:18283   */\n      dup3\n        /* \"#utility.yul\":18278:18287   */\n      div\n        /* \"#utility.yul\":18273:18287   */\n      swap1\n      pop\n        /* \"#utility.yul\":18108:18293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18299:18493   */\n    tag_154:\n        /* \"#utility.yul\":18339:18343   */\n      0x00\n        /* \"#utility.yul\":18359:18379   */\n      tag_467\n        /* \"#utility.yul\":18377:18378   */\n      dup3\n        /* \"#utility.yul\":18359:18379   */\n      tag_251\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":18354:18379   */\n      swap2\n      pop\n        /* \"#utility.yul\":18393:18413   */\n      tag_468\n        /* \"#utility.yul\":18411:18412   */\n      dup4\n        /* \"#utility.yul\":18393:18413   */\n      tag_251\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":18388:18413   */\n      swap3\n      pop\n        /* \"#utility.yul\":18437:18438   */\n      dup3\n        /* \"#utility.yul\":18434:18435   */\n      dup3\n        /* \"#utility.yul\":18430:18439   */\n      sub\n        /* \"#utility.yul\":18422:18439   */\n      swap1\n      pop\n        /* \"#utility.yul\":18461:18462   */\n      dup2\n        /* \"#utility.yul\":18455:18459   */\n      dup2\n        /* \"#utility.yul\":18452:18463   */\n      gt\n        /* \"#utility.yul\":18449:18486   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":18466:18484   */\n      tag_470\n      tag_278\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":18449:18486   */\n    tag_469:\n        /* \"#utility.yul\":18299:18493   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18499:18667   */\n    tag_282:\n        /* \"#utility.yul\":18582:18593   */\n      0x00\n        /* \"#utility.yul\":18616:18622   */\n      dup3\n        /* \"#utility.yul\":18611:18614   */\n      dup3\n        /* \"#utility.yul\":18604:18623   */\n      mstore\n        /* \"#utility.yul\":18656:18660   */\n      0x20\n        /* \"#utility.yul\":18651:18654   */\n      dup3\n        /* \"#utility.yul\":18647:18661   */\n      add\n        /* \"#utility.yul\":18632:18661   */\n      swap1\n      pop\n        /* \"#utility.yul\":18499:18667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18673:18787   */\n    tag_283:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18793:19155   */\n    tag_284:\n        /* \"#utility.yul\":18934:18937   */\n      0x00\n        /* \"#utility.yul\":18955:19020   */\n      tag_474\n        /* \"#utility.yul\":19018:19019   */\n      0x00\n        /* \"#utility.yul\":19013:19016   */\n      dup4\n        /* \"#utility.yul\":18955:19020   */\n      tag_282\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":18948:19020   */\n      swap2\n      pop\n        /* \"#utility.yul\":19029:19122   */\n      tag_475\n        /* \"#utility.yul\":19118:19121   */\n      dup3\n        /* \"#utility.yul\":19029:19122   */\n      tag_283\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":19147:19148   */\n      0x00\n        /* \"#utility.yul\":19142:19145   */\n      dup3\n        /* \"#utility.yul\":19138:19149   */\n      add\n        /* \"#utility.yul\":19131:19149   */\n      swap1\n      pop\n        /* \"#utility.yul\":18793:19155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19161:20020   */\n    tag_160:\n        /* \"#utility.yul\":19438:19442   */\n      0x00\n        /* \"#utility.yul\":19476:19479   */\n      0xa0\n        /* \"#utility.yul\":19465:19474   */\n      dup3\n        /* \"#utility.yul\":19461:19480   */\n      add\n        /* \"#utility.yul\":19453:19480   */\n      swap1\n      pop\n        /* \"#utility.yul\":19490:19561   */\n      tag_477\n        /* \"#utility.yul\":19558:19559   */\n      0x00\n        /* \"#utility.yul\":19547:19556   */\n      dup4\n        /* \"#utility.yul\":19543:19560   */\n      add\n        /* \"#utility.yul\":19534:19540   */\n      dup8\n        /* \"#utility.yul\":19490:19561   */\n      tag_259\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":19571:19643   */\n      tag_478\n        /* \"#utility.yul\":19639:19641   */\n      0x20\n        /* \"#utility.yul\":19628:19637   */\n      dup4\n        /* \"#utility.yul\":19624:19642   */\n      add\n        /* \"#utility.yul\":19615:19621   */\n      dup7\n        /* \"#utility.yul\":19571:19643   */\n      tag_259\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":19653:19725   */\n      tag_479\n        /* \"#utility.yul\":19721:19723   */\n      0x40\n        /* \"#utility.yul\":19710:19719   */\n      dup4\n        /* \"#utility.yul\":19706:19724   */\n      add\n        /* \"#utility.yul\":19697:19703   */\n      dup6\n        /* \"#utility.yul\":19653:19725   */\n      tag_258\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":19735:19807   */\n      tag_480\n        /* \"#utility.yul\":19803:19805   */\n      0x60\n        /* \"#utility.yul\":19792:19801   */\n      dup4\n        /* \"#utility.yul\":19788:19806   */\n      add\n        /* \"#utility.yul\":19779:19785   */\n      dup5\n        /* \"#utility.yul\":19735:19807   */\n      tag_258\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":19855:19864   */\n      dup2\n        /* \"#utility.yul\":19849:19853   */\n      dup2\n        /* \"#utility.yul\":19845:19865   */\n      sub\n        /* \"#utility.yul\":19839:19842   */\n      0x80\n        /* \"#utility.yul\":19828:19837   */\n      dup4\n        /* \"#utility.yul\":19824:19843   */\n      add\n        /* \"#utility.yul\":19817:19866   */\n      mstore\n        /* \"#utility.yul\":19883:20013   */\n      tag_481\n        /* \"#utility.yul\":20008:20012   */\n      dup2\n        /* \"#utility.yul\":19883:20013   */\n      tag_284\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":19875:20013   */\n      swap1\n      pop\n        /* \"#utility.yul\":19161:20020   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20026:20468   */\n    tag_166:\n        /* \"#utility.yul\":20175:20179   */\n      0x00\n        /* \"#utility.yul\":20213:20215   */\n      0x60\n        /* \"#utility.yul\":20202:20211   */\n      dup3\n        /* \"#utility.yul\":20198:20216   */\n      add\n        /* \"#utility.yul\":20190:20216   */\n      swap1\n      pop\n        /* \"#utility.yul\":20226:20297   */\n      tag_483\n        /* \"#utility.yul\":20294:20295   */\n      0x00\n        /* \"#utility.yul\":20283:20292   */\n      dup4\n        /* \"#utility.yul\":20279:20296   */\n      add\n        /* \"#utility.yul\":20270:20276   */\n      dup7\n        /* \"#utility.yul\":20226:20297   */\n      tag_259\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":20307:20379   */\n      tag_484\n        /* \"#utility.yul\":20375:20377   */\n      0x20\n        /* \"#utility.yul\":20364:20373   */\n      dup4\n        /* \"#utility.yul\":20360:20378   */\n      add\n        /* \"#utility.yul\":20351:20357   */\n      dup6\n        /* \"#utility.yul\":20307:20379   */\n      tag_259\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":20389:20461   */\n      tag_485\n        /* \"#utility.yul\":20457:20459   */\n      0x40\n        /* \"#utility.yul\":20446:20455   */\n      dup4\n        /* \"#utility.yul\":20442:20460   */\n      add\n        /* \"#utility.yul\":20433:20439   */\n      dup5\n        /* \"#utility.yul\":20389:20461   */\n      tag_258\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":20026:20468   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20474:20806   */\n    tag_171:\n        /* \"#utility.yul\":20595:20599   */\n      0x00\n        /* \"#utility.yul\":20633:20635   */\n      0x40\n        /* \"#utility.yul\":20622:20631   */\n      dup3\n        /* \"#utility.yul\":20618:20636   */\n      add\n        /* \"#utility.yul\":20610:20636   */\n      swap1\n      pop\n        /* \"#utility.yul\":20646:20717   */\n      tag_487\n        /* \"#utility.yul\":20714:20715   */\n      0x00\n        /* \"#utility.yul\":20703:20712   */\n      dup4\n        /* \"#utility.yul\":20699:20716   */\n      add\n        /* \"#utility.yul\":20690:20696   */\n      dup6\n        /* \"#utility.yul\":20646:20717   */\n      tag_258\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":20727:20799   */\n      tag_488\n        /* \"#utility.yul\":20795:20797   */\n      0x20\n        /* \"#utility.yul\":20784:20793   */\n      dup4\n        /* \"#utility.yul\":20780:20798   */\n      add\n        /* \"#utility.yul\":20771:20777   */\n      dup5\n        /* \"#utility.yul\":20727:20799   */\n      tag_258\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":20474:20806   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20812:20971   */\n    tag_285:\n        /* \"#utility.yul\":20952:20963   */\n      0x7a65726f20616464720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20948:20949   */\n      0x00\n        /* \"#utility.yul\":20940:20946   */\n      dup3\n        /* \"#utility.yul\":20936:20950   */\n      add\n        /* \"#utility.yul\":20929:20964   */\n      mstore\n        /* \"#utility.yul\":20812:20971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20977:21342   */\n    tag_286:\n        /* \"#utility.yul\":21119:21122   */\n      0x00\n        /* \"#utility.yul\":21140:21206   */\n      tag_491\n        /* \"#utility.yul\":21204:21205   */\n      0x09\n        /* \"#utility.yul\":21199:21202   */\n      dup4\n        /* \"#utility.yul\":21140:21206   */\n      tag_260\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":21133:21206   */\n      swap2\n      pop\n        /* \"#utility.yul\":21215:21308   */\n      tag_492\n        /* \"#utility.yul\":21304:21307   */\n      dup3\n        /* \"#utility.yul\":21215:21308   */\n      tag_285\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":21333:21335   */\n      0x20\n        /* \"#utility.yul\":21328:21331   */\n      dup3\n        /* \"#utility.yul\":21324:21336   */\n      add\n        /* \"#utility.yul\":21317:21336   */\n      swap1\n      pop\n        /* \"#utility.yul\":20977:21342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21348:21767   */\n    tag_179:\n        /* \"#utility.yul\":21514:21518   */\n      0x00\n        /* \"#utility.yul\":21552:21554   */\n      0x20\n        /* \"#utility.yul\":21541:21550   */\n      dup3\n        /* \"#utility.yul\":21537:21555   */\n      add\n        /* \"#utility.yul\":21529:21555   */\n      swap1\n      pop\n        /* \"#utility.yul\":21601:21610   */\n      dup2\n        /* \"#utility.yul\":21595:21599   */\n      dup2\n        /* \"#utility.yul\":21591:21611   */\n      sub\n        /* \"#utility.yul\":21587:21588   */\n      0x00\n        /* \"#utility.yul\":21576:21585   */\n      dup4\n        /* \"#utility.yul\":21572:21589   */\n      add\n        /* \"#utility.yul\":21565:21612   */\n      mstore\n        /* \"#utility.yul\":21629:21760   */\n      tag_494\n        /* \"#utility.yul\":21755:21759   */\n      dup2\n        /* \"#utility.yul\":21629:21760   */\n      tag_286\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":21621:21760   */\n      swap1\n      pop\n        /* \"#utility.yul\":21348:21767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21773:21932   */\n    tag_287:\n        /* \"#utility.yul\":21913:21924   */\n      0x6d61782031303030300000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21909:21910   */\n      0x00\n        /* \"#utility.yul\":21901:21907   */\n      dup3\n        /* \"#utility.yul\":21897:21911   */\n      add\n        /* \"#utility.yul\":21890:21925   */\n      mstore\n        /* \"#utility.yul\":21773:21932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21938:22303   */\n    tag_288:\n        /* \"#utility.yul\":22080:22083   */\n      0x00\n        /* \"#utility.yul\":22101:22167   */\n      tag_497\n        /* \"#utility.yul\":22165:22166   */\n      0x09\n        /* \"#utility.yul\":22160:22163   */\n      dup4\n        /* \"#utility.yul\":22101:22167   */\n      tag_260\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":22094:22167   */\n      swap2\n      pop\n        /* \"#utility.yul\":22176:22269   */\n      tag_498\n        /* \"#utility.yul\":22265:22268   */\n      dup3\n        /* \"#utility.yul\":22176:22269   */\n      tag_287\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":22294:22296   */\n      0x20\n        /* \"#utility.yul\":22289:22292   */\n      dup3\n        /* \"#utility.yul\":22285:22297   */\n      add\n        /* \"#utility.yul\":22278:22297   */\n      swap1\n      pop\n        /* \"#utility.yul\":21938:22303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22309:22728   */\n    tag_190:\n        /* \"#utility.yul\":22475:22479   */\n      0x00\n        /* \"#utility.yul\":22513:22515   */\n      0x20\n        /* \"#utility.yul\":22502:22511   */\n      dup3\n        /* \"#utility.yul\":22498:22516   */\n      add\n        /* \"#utility.yul\":22490:22516   */\n      swap1\n      pop\n        /* \"#utility.yul\":22562:22571   */\n      dup2\n        /* \"#utility.yul\":22556:22560   */\n      dup2\n        /* \"#utility.yul\":22552:22572   */\n      sub\n        /* \"#utility.yul\":22548:22549   */\n      0x00\n        /* \"#utility.yul\":22537:22546   */\n      dup4\n        /* \"#utility.yul\":22533:22550   */\n      add\n        /* \"#utility.yul\":22526:22573   */\n      mstore\n        /* \"#utility.yul\":22590:22721   */\n      tag_500\n        /* \"#utility.yul\":22716:22720   */\n      dup2\n        /* \"#utility.yul\":22590:22721   */\n      tag_288\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":22582:22721   */\n      swap1\n      pop\n        /* \"#utility.yul\":22309:22728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22734:22894   */\n    tag_289:\n        /* \"#utility.yul\":22874:22886   */\n      0x6e6f742073656c6c657200000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22870:22871   */\n      0x00\n        /* \"#utility.yul\":22862:22868   */\n      dup3\n        /* \"#utility.yul\":22858:22872   */\n      add\n        /* \"#utility.yul\":22851:22887   */\n      mstore\n        /* \"#utility.yul\":22734:22894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22900:23266   */\n    tag_290:\n        /* \"#utility.yul\":23042:23045   */\n      0x00\n        /* \"#utility.yul\":23063:23130   */\n      tag_503\n        /* \"#utility.yul\":23127:23129   */\n      0x0a\n        /* \"#utility.yul\":23122:23125   */\n      dup4\n        /* \"#utility.yul\":23063:23130   */\n      tag_260\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":23056:23130   */\n      swap2\n      pop\n        /* \"#utility.yul\":23139:23232   */\n      tag_504\n        /* \"#utility.yul\":23228:23231   */\n      dup3\n        /* \"#utility.yul\":23139:23232   */\n      tag_289\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":23257:23259   */\n      0x20\n        /* \"#utility.yul\":23252:23255   */\n      dup3\n        /* \"#utility.yul\":23248:23260   */\n      add\n        /* \"#utility.yul\":23241:23260   */\n      swap1\n      pop\n        /* \"#utility.yul\":22900:23266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23272:23691   */\n    tag_207:\n        /* \"#utility.yul\":23438:23442   */\n      0x00\n        /* \"#utility.yul\":23476:23478   */\n      0x20\n        /* \"#utility.yul\":23465:23474   */\n      dup3\n        /* \"#utility.yul\":23461:23479   */\n      add\n        /* \"#utility.yul\":23453:23479   */\n      swap1\n      pop\n        /* \"#utility.yul\":23525:23534   */\n      dup2\n        /* \"#utility.yul\":23519:23523   */\n      dup2\n        /* \"#utility.yul\":23515:23535   */\n      sub\n        /* \"#utility.yul\":23511:23512   */\n      0x00\n        /* \"#utility.yul\":23500:23509   */\n      dup4\n        /* \"#utility.yul\":23496:23513   */\n      add\n        /* \"#utility.yul\":23489:23536   */\n      mstore\n        /* \"#utility.yul\":23553:23684   */\n      tag_506\n        /* \"#utility.yul\":23679:23683   */\n      dup2\n        /* \"#utility.yul\":23553:23684   */\n      tag_290\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":23545:23684   */\n      swap1\n      pop\n        /* \"#utility.yul\":23272:23691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23697:23878   */\n    tag_291:\n        /* \"#utility.yul\":23837:23870   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":23833:23834   */\n      0x00\n        /* \"#utility.yul\":23825:23831   */\n      dup3\n        /* \"#utility.yul\":23821:23835   */\n      add\n        /* \"#utility.yul\":23814:23871   */\n      mstore\n        /* \"#utility.yul\":23697:23878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23884:24250   */\n    tag_292:\n        /* \"#utility.yul\":24026:24029   */\n      0x00\n        /* \"#utility.yul\":24047:24114   */\n      tag_509\n        /* \"#utility.yul\":24111:24113   */\n      0x1f\n        /* \"#utility.yul\":24106:24109   */\n      dup4\n        /* \"#utility.yul\":24047:24114   */\n      tag_260\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":24040:24114   */\n      swap2\n      pop\n        /* \"#utility.yul\":24123:24216   */\n      tag_510\n        /* \"#utility.yul\":24212:24215   */\n      dup3\n        /* \"#utility.yul\":24123:24216   */\n      tag_291\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":24241:24243   */\n      0x20\n        /* \"#utility.yul\":24236:24239   */\n      dup3\n        /* \"#utility.yul\":24232:24244   */\n      add\n        /* \"#utility.yul\":24225:24244   */\n      swap1\n      pop\n        /* \"#utility.yul\":23884:24250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24256:24675   */\n    tag_218:\n        /* \"#utility.yul\":24422:24426   */\n      0x00\n        /* \"#utility.yul\":24460:24462   */\n      0x20\n        /* \"#utility.yul\":24449:24458   */\n      dup3\n        /* \"#utility.yul\":24445:24463   */\n      add\n        /* \"#utility.yul\":24437:24463   */\n      swap1\n      pop\n        /* \"#utility.yul\":24509:24518   */\n      dup2\n        /* \"#utility.yul\":24503:24507   */\n      dup2\n        /* \"#utility.yul\":24499:24519   */\n      sub\n        /* \"#utility.yul\":24495:24496   */\n      0x00\n        /* \"#utility.yul\":24484:24493   */\n      dup4\n        /* \"#utility.yul\":24480:24497   */\n      add\n        /* \"#utility.yul\":24473:24520   */\n      mstore\n        /* \"#utility.yul\":24537:24668   */\n      tag_512\n        /* \"#utility.yul\":24663:24667   */\n      dup2\n        /* \"#utility.yul\":24537:24668   */\n      tag_292\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":24529:24668   */\n      swap1\n      pop\n        /* \"#utility.yul\":24256:24675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb62d52665b095edbbfe67be3ca40b7a67d8fb9f44cfcc207bf226e7787f3d2864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1275": {
									"entryPoint": null,
									"id": 1275,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 736,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc": {
									"entryPoint": 1334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff": {
									"entryPoint": 1438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6431:12",
										"nodeType": "YulBlock",
										"src": "0:6431:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "890:32:12",
													"nodeType": "YulBlock",
													"src": "890:32:12",
													"statements": [
														{
															"nativeSrc": "900:16:12",
															"nodeType": "YulAssignment",
															"src": "900:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:12",
																"nodeType": "YulIdentifier",
																"src": "911:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:12",
														"nodeType": "YulTypedName",
														"src": "872:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:12",
														"nodeType": "YulTypedName",
														"src": "882:7:12",
														"type": ""
													}
												],
												"src": "845:77:12"
											},
											{
												"body": {
													"nativeSrc": "971:79:12",
													"nodeType": "YulBlock",
													"src": "971:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:12",
																"nodeType": "YulBlock",
																"src": "1028:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:12"
																			},
																			"nativeSrc": "1030:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:12"
																		},
																		"nativeSrc": "1030:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:12"
																				},
																				"nativeSrc": "1001:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:12"
																		},
																		"nativeSrc": "991:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:12"
																},
																"nativeSrc": "984:43:12",
																"nodeType": "YulFunctionCall",
																"src": "984:43:12"
															},
															"nativeSrc": "981:63:12",
															"nodeType": "YulIf",
															"src": "981:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:12",
														"nodeType": "YulTypedName",
														"src": "964:5:12",
														"type": ""
													}
												],
												"src": "928:122:12"
											},
											{
												"body": {
													"nativeSrc": "1119:80:12",
													"nodeType": "YulBlock",
													"src": "1119:80:12",
													"statements": [
														{
															"nativeSrc": "1129:22:12",
															"nodeType": "YulAssignment",
															"src": "1129:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:12"
																},
																"nativeSrc": "1138:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:12"
																},
																"nativeSrc": "1160:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:12"
															},
															"nativeSrc": "1160:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:12",
														"nodeType": "YulTypedName",
														"src": "1097:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:12",
														"nodeType": "YulTypedName",
														"src": "1105:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:12",
														"nodeType": "YulTypedName",
														"src": "1113:5:12",
														"type": ""
													}
												],
												"src": "1056:143:12"
											},
											{
												"body": {
													"nativeSrc": "1333:692:12",
													"nodeType": "YulBlock",
													"src": "1333:692:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1380:83:12",
																"nodeType": "YulBlock",
																"src": "1380:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1382:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1382:77:12"
																			},
																			"nativeSrc": "1382:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1382:79:12"
																		},
																		"nativeSrc": "1382:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1382:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1354:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1354:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1363:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1363:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1350:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:12"
																		},
																		"nativeSrc": "1350:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1375:3:12",
																		"nodeType": "YulLiteral",
																		"src": "1375:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1346:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:12"
																},
																"nativeSrc": "1346:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1346:33:12"
															},
															"nativeSrc": "1343:120:12",
															"nodeType": "YulIf",
															"src": "1343:120:12"
														},
														{
															"nativeSrc": "1473:128:12",
															"nodeType": "YulBlock",
															"src": "1473:128:12",
															"statements": [
																{
																	"nativeSrc": "1488:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1488:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1502:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1502:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1492:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1492:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1517:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1517:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1563:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1563:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1574:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1574:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1559:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1559:3:12"
																				},
																				"nativeSrc": "1559:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1559:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1583:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1583:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1527:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1527:31:12"
																		},
																		"nativeSrc": "1527:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1527:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1517:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1517:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1611:129:12",
															"nodeType": "YulBlock",
															"src": "1611:129:12",
															"statements": [
																{
																	"nativeSrc": "1626:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1626:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1640:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1630:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1630:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1656:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1656:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1702:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1702:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1713:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1713:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1698:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:12"
																				},
																				"nativeSrc": "1698:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1698:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1722:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1722:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1666:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1666:31:12"
																		},
																		"nativeSrc": "1666:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1666:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1656:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1656:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1750:129:12",
															"nodeType": "YulBlock",
															"src": "1750:129:12",
															"statements": [
																{
																	"nativeSrc": "1765:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1765:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1779:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1779:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1769:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1769:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1795:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1795:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1841:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1841:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1852:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1852:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1837:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:12"
																				},
																				"nativeSrc": "1837:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1861:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1861:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1805:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1805:31:12"
																		},
																		"nativeSrc": "1805:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1805:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1795:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1795:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1889:129:12",
															"nodeType": "YulBlock",
															"src": "1889:129:12",
															"statements": [
																{
																	"nativeSrc": "1904:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1904:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1918:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1908:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1908:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1934:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1934:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1980:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1980:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1991:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1991:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1976:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1976:3:12"
																				},
																				"nativeSrc": "1976:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1976:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2000:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2000:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1944:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1944:31:12"
																		},
																		"nativeSrc": "1944:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1944:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1934:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1934:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "1205:820:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1279:9:12",
														"nodeType": "YulTypedName",
														"src": "1279:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1290:7:12",
														"nodeType": "YulTypedName",
														"src": "1290:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1302:6:12",
														"nodeType": "YulTypedName",
														"src": "1302:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1310:6:12",
														"nodeType": "YulTypedName",
														"src": "1310:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1318:6:12",
														"nodeType": "YulTypedName",
														"src": "1318:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1326:6:12",
														"nodeType": "YulTypedName",
														"src": "1326:6:12",
														"type": ""
													}
												],
												"src": "1205:820:12"
											},
											{
												"body": {
													"nativeSrc": "2096:53:12",
													"nodeType": "YulBlock",
													"src": "2096:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2113:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2113:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2136:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2136:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2118:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2118:17:12"
																		},
																		"nativeSrc": "2118:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2118:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2106:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:12"
																},
																"nativeSrc": "2106:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2106:37:12"
															},
															"nativeSrc": "2106:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2106:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2031:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2084:5:12",
														"nodeType": "YulTypedName",
														"src": "2084:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2091:3:12",
														"nodeType": "YulTypedName",
														"src": "2091:3:12",
														"type": ""
													}
												],
												"src": "2031:118:12"
											},
											{
												"body": {
													"nativeSrc": "2253:124:12",
													"nodeType": "YulBlock",
													"src": "2253:124:12",
													"statements": [
														{
															"nativeSrc": "2263:26:12",
															"nodeType": "YulAssignment",
															"src": "2263:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2275:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2275:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2286:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2286:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2271:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2271:3:12"
																},
																"nativeSrc": "2271:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2271:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2263:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2263:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2343:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2343:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2356:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2367:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2367:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:12"
																		},
																		"nativeSrc": "2352:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2352:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2299:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2299:43:12"
																},
																"nativeSrc": "2299:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2299:71:12"
															},
															"nativeSrc": "2299:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2299:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2155:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2225:9:12",
														"nodeType": "YulTypedName",
														"src": "2225:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2237:6:12",
														"nodeType": "YulTypedName",
														"src": "2237:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2248:4:12",
														"nodeType": "YulTypedName",
														"src": "2248:4:12",
														"type": ""
													}
												],
												"src": "2155:222:12"
											},
											{
												"body": {
													"nativeSrc": "2479:73:12",
													"nodeType": "YulBlock",
													"src": "2479:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2496:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2496:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2501:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2501:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2489:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:12"
																},
																"nativeSrc": "2489:19:12",
																"nodeType": "YulFunctionCall",
																"src": "2489:19:12"
															},
															"nativeSrc": "2489:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "2489:19:12"
														},
														{
															"nativeSrc": "2517:29:12",
															"nodeType": "YulAssignment",
															"src": "2517:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2536:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2541:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2541:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2532:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2532:3:12"
																},
																"nativeSrc": "2532:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2532:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2517:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "2517:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2383:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2451:3:12",
														"nodeType": "YulTypedName",
														"src": "2451:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2456:6:12",
														"nodeType": "YulTypedName",
														"src": "2456:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2467:11:12",
														"nodeType": "YulTypedName",
														"src": "2467:11:12",
														"type": ""
													}
												],
												"src": "2383:169:12"
											},
											{
												"body": {
													"nativeSrc": "2664:54:12",
													"nodeType": "YulBlock",
													"src": "2664:54:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2686:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2694:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2694:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2682:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:12"
																		},
																		"nativeSrc": "2682:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2682:14:12"
																	},
																	{
																		"hexValue": "6f776e6572207a65726f",
																		"kind": "string",
																		"nativeSrc": "2698:12:12",
																		"nodeType": "YulLiteral",
																		"src": "2698:12:12",
																		"type": "",
																		"value": "owner zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2675:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:12"
																},
																"nativeSrc": "2675:36:12",
																"nodeType": "YulFunctionCall",
																"src": "2675:36:12"
															},
															"nativeSrc": "2675:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "2675:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945",
												"nativeSrc": "2558:160:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2656:6:12",
														"nodeType": "YulTypedName",
														"src": "2656:6:12",
														"type": ""
													}
												],
												"src": "2558:160:12"
											},
											{
												"body": {
													"nativeSrc": "2870:220:12",
													"nodeType": "YulBlock",
													"src": "2870:220:12",
													"statements": [
														{
															"nativeSrc": "2880:74:12",
															"nodeType": "YulAssignment",
															"src": "2880:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2946:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2946:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2951:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2951:2:12",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2887:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2887:58:12"
																},
																"nativeSrc": "2887:67:12",
																"nodeType": "YulFunctionCall",
																"src": "2887:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2880:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3052:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3052:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945",
																	"nativeSrc": "2963:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "2963:88:12"
																},
																"nativeSrc": "2963:93:12",
																"nodeType": "YulFunctionCall",
																"src": "2963:93:12"
															},
															"nativeSrc": "2963:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "2963:93:12"
														},
														{
															"nativeSrc": "3065:19:12",
															"nodeType": "YulAssignment",
															"src": "3065:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3076:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3076:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3081:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3081:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3072:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:12"
																},
																"nativeSrc": "3072:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3072:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3065:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3065:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2724:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2858:3:12",
														"nodeType": "YulTypedName",
														"src": "2858:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2866:3:12",
														"nodeType": "YulTypedName",
														"src": "2866:3:12",
														"type": ""
													}
												],
												"src": "2724:366:12"
											},
											{
												"body": {
													"nativeSrc": "3267:248:12",
													"nodeType": "YulBlock",
													"src": "3267:248:12",
													"statements": [
														{
															"nativeSrc": "3277:26:12",
															"nodeType": "YulAssignment",
															"src": "3277:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3289:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3289:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3300:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3300:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3285:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3285:3:12"
																},
																"nativeSrc": "3285:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3285:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3277:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3277:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3324:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3324:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3335:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3335:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3320:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3320:3:12"
																		},
																		"nativeSrc": "3320:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3320:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3343:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3343:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3349:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3349:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3339:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3339:3:12"
																		},
																		"nativeSrc": "3339:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3339:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3313:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:12"
																},
																"nativeSrc": "3313:47:12",
																"nodeType": "YulFunctionCall",
																"src": "3313:47:12"
															},
															"nativeSrc": "3313:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "3313:47:12"
														},
														{
															"nativeSrc": "3369:139:12",
															"nodeType": "YulAssignment",
															"src": "3369:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3503:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3503:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3377:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "3377:124:12"
																},
																"nativeSrc": "3377:131:12",
																"nodeType": "YulFunctionCall",
																"src": "3377:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3369:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3369:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3096:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3247:9:12",
														"nodeType": "YulTypedName",
														"src": "3247:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3262:4:12",
														"nodeType": "YulTypedName",
														"src": "3262:4:12",
														"type": ""
													}
												],
												"src": "3096:419:12"
											},
											{
												"body": {
													"nativeSrc": "3627:61:12",
													"nodeType": "YulBlock",
													"src": "3627:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3649:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3649:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3657:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3657:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3645:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3645:3:12"
																		},
																		"nativeSrc": "3645:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3645:14:12"
																	},
																	{
																		"hexValue": "7061796d656e74546f6b656e207a65726f",
																		"kind": "string",
																		"nativeSrc": "3661:19:12",
																		"nodeType": "YulLiteral",
																		"src": "3661:19:12",
																		"type": "",
																		"value": "paymentToken zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3638:6:12"
																},
																"nativeSrc": "3638:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3638:43:12"
															},
															"nativeSrc": "3638:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "3638:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc",
												"nativeSrc": "3521:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3619:6:12",
														"nodeType": "YulTypedName",
														"src": "3619:6:12",
														"type": ""
													}
												],
												"src": "3521:167:12"
											},
											{
												"body": {
													"nativeSrc": "3840:220:12",
													"nodeType": "YulBlock",
													"src": "3840:220:12",
													"statements": [
														{
															"nativeSrc": "3850:74:12",
															"nodeType": "YulAssignment",
															"src": "3850:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3916:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3916:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3921:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3921:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3857:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "3857:58:12"
																},
																"nativeSrc": "3857:67:12",
																"nodeType": "YulFunctionCall",
																"src": "3857:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3850:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3850:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4022:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4022:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc",
																	"nativeSrc": "3933:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "3933:88:12"
																},
																"nativeSrc": "3933:93:12",
																"nodeType": "YulFunctionCall",
																"src": "3933:93:12"
															},
															"nativeSrc": "3933:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "3933:93:12"
														},
														{
															"nativeSrc": "4035:19:12",
															"nodeType": "YulAssignment",
															"src": "4035:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4046:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4046:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4051:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4051:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4042:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4042:3:12"
																},
																"nativeSrc": "4042:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4042:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4035:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4035:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3694:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3828:3:12",
														"nodeType": "YulTypedName",
														"src": "3828:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3836:3:12",
														"nodeType": "YulTypedName",
														"src": "3836:3:12",
														"type": ""
													}
												],
												"src": "3694:366:12"
											},
											{
												"body": {
													"nativeSrc": "4237:248:12",
													"nodeType": "YulBlock",
													"src": "4237:248:12",
													"statements": [
														{
															"nativeSrc": "4247:26:12",
															"nodeType": "YulAssignment",
															"src": "4247:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4259:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4270:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4270:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4255:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4255:3:12"
																},
																"nativeSrc": "4255:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4255:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4247:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4247:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4294:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4294:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4305:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4305:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4290:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4290:3:12"
																		},
																		"nativeSrc": "4290:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4313:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4313:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4319:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4319:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4309:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4309:3:12"
																		},
																		"nativeSrc": "4309:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4309:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4283:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4283:6:12"
																},
																"nativeSrc": "4283:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4283:47:12"
															},
															"nativeSrc": "4283:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "4283:47:12"
														},
														{
															"nativeSrc": "4339:139:12",
															"nodeType": "YulAssignment",
															"src": "4339:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4473:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4473:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4347:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "4347:124:12"
																},
																"nativeSrc": "4347:131:12",
																"nodeType": "YulFunctionCall",
																"src": "4347:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4339:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4339:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4066:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4217:9:12",
														"nodeType": "YulTypedName",
														"src": "4217:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4232:4:12",
														"nodeType": "YulTypedName",
														"src": "4232:4:12",
														"type": ""
													}
												],
												"src": "4066:419:12"
											},
											{
												"body": {
													"nativeSrc": "4597:61:12",
													"nodeType": "YulBlock",
													"src": "4597:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4619:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4627:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4627:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4615:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4615:3:12"
																		},
																		"nativeSrc": "4615:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4615:14:12"
																	},
																	{
																		"hexValue": "666565436f6c6c6563746f72207a65726f",
																		"kind": "string",
																		"nativeSrc": "4631:19:12",
																		"nodeType": "YulLiteral",
																		"src": "4631:19:12",
																		"type": "",
																		"value": "feeCollector zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4608:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4608:6:12"
																},
																"nativeSrc": "4608:43:12",
																"nodeType": "YulFunctionCall",
																"src": "4608:43:12"
															},
															"nativeSrc": "4608:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "4608:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff",
												"nativeSrc": "4491:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4589:6:12",
														"nodeType": "YulTypedName",
														"src": "4589:6:12",
														"type": ""
													}
												],
												"src": "4491:167:12"
											},
											{
												"body": {
													"nativeSrc": "4810:220:12",
													"nodeType": "YulBlock",
													"src": "4810:220:12",
													"statements": [
														{
															"nativeSrc": "4820:74:12",
															"nodeType": "YulAssignment",
															"src": "4820:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4886:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4886:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4891:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4891:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4827:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "4827:58:12"
																},
																"nativeSrc": "4827:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4827:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4820:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4820:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4992:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4992:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff",
																	"nativeSrc": "4903:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "4903:88:12"
																},
																"nativeSrc": "4903:93:12",
																"nodeType": "YulFunctionCall",
																"src": "4903:93:12"
															},
															"nativeSrc": "4903:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "4903:93:12"
														},
														{
															"nativeSrc": "5005:19:12",
															"nodeType": "YulAssignment",
															"src": "5005:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5016:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5016:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5021:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5021:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5012:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5012:3:12"
																},
																"nativeSrc": "5012:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5012:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5005:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4664:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4798:3:12",
														"nodeType": "YulTypedName",
														"src": "4798:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4806:3:12",
														"nodeType": "YulTypedName",
														"src": "4806:3:12",
														"type": ""
													}
												],
												"src": "4664:366:12"
											},
											{
												"body": {
													"nativeSrc": "5207:248:12",
													"nodeType": "YulBlock",
													"src": "5207:248:12",
													"statements": [
														{
															"nativeSrc": "5217:26:12",
															"nodeType": "YulAssignment",
															"src": "5217:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5229:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5229:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5240:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5240:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5225:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5225:3:12"
																},
																"nativeSrc": "5225:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5225:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5217:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5217:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5264:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5264:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5275:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5275:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5260:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5260:3:12"
																		},
																		"nativeSrc": "5260:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5260:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5283:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5283:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5289:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5289:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5279:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:12"
																		},
																		"nativeSrc": "5279:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5253:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:12"
																},
																"nativeSrc": "5253:47:12",
																"nodeType": "YulFunctionCall",
																"src": "5253:47:12"
															},
															"nativeSrc": "5253:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "5253:47:12"
														},
														{
															"nativeSrc": "5309:139:12",
															"nodeType": "YulAssignment",
															"src": "5309:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5443:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5443:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5317:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "5317:124:12"
																},
																"nativeSrc": "5317:131:12",
																"nodeType": "YulFunctionCall",
																"src": "5317:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5309:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5309:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5036:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5187:9:12",
														"nodeType": "YulTypedName",
														"src": "5187:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5202:4:12",
														"nodeType": "YulTypedName",
														"src": "5202:4:12",
														"type": ""
													}
												],
												"src": "5036:419:12"
											},
											{
												"body": {
													"nativeSrc": "5567:64:12",
													"nodeType": "YulBlock",
													"src": "5567:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5589:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5597:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5597:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5585:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5585:3:12"
																		},
																		"nativeSrc": "5585:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5585:14:12"
																	},
																	{
																		"hexValue": "66656550657263656e74206d6178203130303030",
																		"kind": "string",
																		"nativeSrc": "5601:22:12",
																		"nodeType": "YulLiteral",
																		"src": "5601:22:12",
																		"type": "",
																		"value": "feePercent max 10000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5578:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5578:6:12"
																},
																"nativeSrc": "5578:46:12",
																"nodeType": "YulFunctionCall",
																"src": "5578:46:12"
															},
															"nativeSrc": "5578:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "5578:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62",
												"nativeSrc": "5461:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5559:6:12",
														"nodeType": "YulTypedName",
														"src": "5559:6:12",
														"type": ""
													}
												],
												"src": "5461:170:12"
											},
											{
												"body": {
													"nativeSrc": "5783:220:12",
													"nodeType": "YulBlock",
													"src": "5783:220:12",
													"statements": [
														{
															"nativeSrc": "5793:74:12",
															"nodeType": "YulAssignment",
															"src": "5793:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5859:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5859:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5864:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5864:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5800:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "5800:58:12"
																},
																"nativeSrc": "5800:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5800:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5793:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5793:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5965:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5965:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62",
																	"nativeSrc": "5876:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "5876:88:12"
																},
																"nativeSrc": "5876:93:12",
																"nodeType": "YulFunctionCall",
																"src": "5876:93:12"
															},
															"nativeSrc": "5876:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "5876:93:12"
														},
														{
															"nativeSrc": "5978:19:12",
															"nodeType": "YulAssignment",
															"src": "5978:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5989:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5989:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5994:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5994:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5985:3:12"
																},
																"nativeSrc": "5985:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5985:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5978:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5978:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5637:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5771:3:12",
														"nodeType": "YulTypedName",
														"src": "5771:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5779:3:12",
														"nodeType": "YulTypedName",
														"src": "5779:3:12",
														"type": ""
													}
												],
												"src": "5637:366:12"
											},
											{
												"body": {
													"nativeSrc": "6180:248:12",
													"nodeType": "YulBlock",
													"src": "6180:248:12",
													"statements": [
														{
															"nativeSrc": "6190:26:12",
															"nodeType": "YulAssignment",
															"src": "6190:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6202:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6202:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6213:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6213:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6198:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6198:3:12"
																},
																"nativeSrc": "6198:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6198:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6190:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6190:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6237:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6237:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6248:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6248:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6233:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6233:3:12"
																		},
																		"nativeSrc": "6233:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6233:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6256:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6256:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6262:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6262:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6252:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6252:3:12"
																		},
																		"nativeSrc": "6252:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6252:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6226:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6226:6:12"
																},
																"nativeSrc": "6226:47:12",
																"nodeType": "YulFunctionCall",
																"src": "6226:47:12"
															},
															"nativeSrc": "6226:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "6226:47:12"
														},
														{
															"nativeSrc": "6282:139:12",
															"nodeType": "YulAssignment",
															"src": "6282:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6416:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6416:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6290:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "6290:124:12"
																},
																"nativeSrc": "6290:131:12",
																"nodeType": "YulFunctionCall",
																"src": "6290:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6282:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6282:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6009:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6160:9:12",
														"nodeType": "YulTypedName",
														"src": "6160:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6175:4:12",
														"nodeType": "YulTypedName",
														"src": "6175:4:12",
														"type": ""
													}
												],
												"src": "6009:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945(memPtr) {\n\n        mstore(add(memPtr, 0), \"owner zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc(memPtr) {\n\n        mstore(add(memPtr, 0), \"paymentToken zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff(memPtr) {\n\n        mstore(add(memPtr, 0), \"feeCollector zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62(memPtr) {\n\n        mstore(add(memPtr, 0), \"feePercent max 10000\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161283438038061283483398181016040528101906100319190610432565b835f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906104a5565b60405180910390fd5b6100b1816102e060201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011e90610518565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c90610580565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610203576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fa906105e8565b60405180910390fd5b612710811115610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f90610650565b60405180910390fd5b8260025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060048190555060016006819055505050505061066e565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103ce826103a5565b9050919050565b6103de816103c4565b81146103e8575f5ffd5b50565b5f815190506103f9816103d5565b92915050565b5f819050919050565b610411816103ff565b811461041b575f5ffd5b50565b5f8151905061042c81610408565b92915050565b5f5f5f5f6080858703121561044a576104496103a1565b5b5f610457878288016103eb565b9450506020610468878288016103eb565b9350506040610479878288016103eb565b925050606061048a8782880161041e565b91505092959194509250565b61049f816103c4565b82525050565b5f6020820190506104b85f830184610496565b92915050565b5f82825260208201905092915050565b7f6f776e6572207a65726f000000000000000000000000000000000000000000005f82015250565b5f610502600a836104be565b915061050d826104ce565b602082019050919050565b5f6020820190508181035f83015261052f816104f6565b9050919050565b7f7061796d656e74546f6b656e207a65726f0000000000000000000000000000005f82015250565b5f61056a6011836104be565b915061057582610536565b602082019050919050565b5f6020820190508181035f8301526105978161055e565b9050919050565b7f666565436f6c6c6563746f72207a65726f0000000000000000000000000000005f82015250565b5f6105d26011836104be565b91506105dd8261059e565b602082019050919050565b5f6020820190508181035f8301526105ff816105c6565b9050919050565b7f66656550657263656e74206d61782031303030300000000000000000000000005f82015250565b5f61063a6014836104be565b915061064582610606565b602082019050919050565b5f6020820190508181035f8301526106678161062e565b9050919050565b6121b98061067b5f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c806380df50a811610095578063c415b95c11610064578063c415b95c1461026e578063cb917b9c1461028c578063de74e57b146102a8578063f2fde38b146102de576100fe565b806380df50a8146101e85780638da5cb5b14610204578063a42dce8014610222578063c0f6ae971461023e576100fe565b80636a326ab1116100d15780636a326ab114610188578063715018a6146101a45780637ce3489b146101ae5780637fd6f15c146101ca576100fe565b80633013ce29146101025780633ae6064b146101205780634e9b8c5d1461013c57806351ed82881461016c575b5f5ffd5b61010a6102fa565b604051610117919061166b565b60405180910390f35b61013a6004803603810190610135919061172b565b61031f565b005b610156600480360381019061015191906117a2565b610a40565b60405161016391906117dc565b60405180910390f35b610186600480360381019061018191906117f5565b610a92565b005b6101a2600480360381019061019d91906117a2565b610e17565b005b6101ac610ed0565b005b6101c860048036038101906101c391906117f5565b610ee3565b005b6101d2610f3a565b6040516101df919061182f565b60405180910390f35b61020260048036038101906101fd9190611848565b610f40565b005b61020c610fa0565b6040516102199190611895565b60405180910390f35b61023c600480360381019061023791906117a2565b610fc7565b005b610258600480360381019061025391906117a2565b611080565b60405161026591906117dc565b60405180910390f35b61027661109d565b6040516102839190611895565b60405180910390f35b6102a660048036038101906102a191906117f5565b6110c2565b005b6102c260048036038101906102bd91906117f5565b611214565b6040516102d597969594939291906118ae565b60405180910390f35b6102f860048036038101906102f391906117a2565b6112a9565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61032761132d565b60055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790611975565b60405180910390fd5b5f82116103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e9906119dd565b60405180910390fd5b80156105b8575f831161043a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043190611a45565b60405180910390fd5b5f859050838173ffffffffffffffffffffffffffffffffffffffff1662fdd58e33886040518363ffffffff1660e01b8152600401610479929190611a63565b602060405180830381865afa158015610494573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104b89190611a9e565b10156104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090611b13565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b8152600401610534929190611b31565b602060405180830381865afa15801561054f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105739190611b6c565b6105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990611be1565b60405180910390fd5b5061084c565b600183146105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290611c49565b60405180910390fd5b5f8590503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e876040518263ffffffff1660e01b815260040161064f919061182f565b602060405180830381865afa15801561066a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068e9190611c7b565b73ffffffffffffffffffffffffffffffffffffffff16146106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90611cf0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161071f929190611b31565b602060405180830381865afa15801561073a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075e9190611b6c565b8061080b57503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc876040518263ffffffff1660e01b81526004016107b4919061182f565b602060405180830381865afa1580156107cf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f39190611c7b565b73ffffffffffffffffffffffffffffffffffffffff16145b61084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084190611be1565b60405180910390fd5b505b5f60065f81548092919061085f90611d3b565b9190505590506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183151581526020016001151581525060075f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015f6101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff0219169083151502179055509050508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827fd1ed8900afb99183d6684ef82e558ec94d3feba62cff25b765b503bd5505e09f88888888604051610a289493929190611d82565b60405180910390a450610a3961137c565b5050505050565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610a9a61132d565b5f60075f8381526020019081526020015f2090508060050160019054906101000a900460ff16610aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af690611e0f565b60405180910390fd5b5f816004015490505f61271060045483610b199190611e2d565b610b239190611e9b565b90505f8183610b329190611ecb565b9050610ba433855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611385909392919063ffffffff16565b610c133360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611385909392919063ffffffff16565b836005015f9054906101000a900460ff1615610ce757836001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633876002015488600301546040518563ffffffff1660e01b8152600401610cb59493929190611f31565b5f604051808303815f87803b158015610ccc575f5ffd5b505af1158015610cde573d5f5f3e3d5ffd5b50505050610d9b565b836001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387600201546040518463ffffffff1660e01b8152600401610d6d93929190611f87565b5f604051808303815f87803b158015610d84575f5ffd5b505af1158015610d96573d5f5f3e3d5ffd5b505050505b5f8460050160016101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16857f041bfe3082d481c8f62f6ed145f1d8cbec0daebcb4d750ae5c42a51946551d138585604051610e00929190611fbc565b60405180910390a350505050610e1461137c565b50565b610e1f611407565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e849061202d565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ed8611407565b610ee15f61148e565b565b610eeb611407565b612710811115610f30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2790612095565b60405180910390fd5b8060048190555050565b60045481565b610f48611407565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610fcf611407565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361103d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110349061202d565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6005602052805f5260405f205f915054906101000a900460ff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110ca61132d565b5f60075f8381526020019081526020015f2090508060050160019054906101000a900460ff1661112f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112690611e0f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b6906120fd565b60405180910390fd5b5f8160050160016101000a81548160ff021916908315150217905550817fc0c55a6edead4433d18cb1e287a0a20a2fa003a6f483bc9823d2e504d70d1c6760405160405180910390a25061121161137c565b50565b6007602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015f9054906101000a900460ff16908060050160019054906101000a900460ff16905087565b6112b1611407565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611321575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113189190611895565b60405180910390fd5b61132a8161148e565b50565b600260015403611372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136990612165565b60405180910390fd5b6002600181905550565b60018081905550565b611401848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016113ba93929190611f87565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061154f565b50505050565b61140f6115ea565b73ffffffffffffffffffffffffffffffffffffffff1661142d610fa0565b73ffffffffffffffffffffffffffffffffffffffff161461148c576114506115ea565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114839190611895565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f60205f8451602086015f885af18061156e576040513d5f823e3d81fd5b3d92505f519150505f82146115875760018114156115a2565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156115e457836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016115db9190611895565b60405180910390fd5b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61163361162e611629846115f1565b611610565b6115f1565b9050919050565b5f61164482611619565b9050919050565b5f6116558261163a565b9050919050565b6116658161164b565b82525050565b5f60208201905061167e5f83018461165c565b92915050565b5f5ffd5b5f611692826115f1565b9050919050565b6116a281611688565b81146116ac575f5ffd5b50565b5f813590506116bd81611699565b92915050565b5f819050919050565b6116d5816116c3565b81146116df575f5ffd5b50565b5f813590506116f0816116cc565b92915050565b5f8115159050919050565b61170a816116f6565b8114611714575f5ffd5b50565b5f8135905061172581611701565b92915050565b5f5f5f5f5f60a0868803121561174457611743611684565b5b5f611751888289016116af565b9550506020611762888289016116e2565b9450506040611773888289016116e2565b9350506060611784888289016116e2565b925050608061179588828901611717565b9150509295509295909350565b5f602082840312156117b7576117b6611684565b5b5f6117c4848285016116af565b91505092915050565b6117d6816116f6565b82525050565b5f6020820190506117ef5f8301846117cd565b92915050565b5f6020828403121561180a57611809611684565b5b5f611817848285016116e2565b91505092915050565b611829816116c3565b82525050565b5f6020820190506118425f830184611820565b92915050565b5f5f6040838503121561185e5761185d611684565b5b5f61186b858286016116af565b925050602061187c85828601611717565b9150509250929050565b61188f81611688565b82525050565b5f6020820190506118a85f830184611886565b92915050565b5f60e0820190506118c15f83018a611886565b6118ce6020830189611886565b6118db6040830188611820565b6118e86060830187611820565b6118f56080830186611820565b61190260a08301856117cd565b61190f60c08301846117cd565b98975050505050505050565b5f82825260208201905092915050565b7f4e465420636f6e7472616374206e6f7420616c6c6f77656400000000000000005f82015250565b5f61195f60188361191b565b915061196a8261192b565b602082019050919050565b5f6020820190508181035f83015261198c81611953565b9050919050565b7f7072696365207a65726f000000000000000000000000000000000000000000005f82015250565b5f6119c7600a8361191b565b91506119d282611993565b602082019050919050565b5f6020820190508181035f8301526119f4816119bb565b9050919050565b7f616d6f756e74207a65726f0000000000000000000000000000000000000000005f82015250565b5f611a2f600b8361191b565b9150611a3a826119fb565b602082019050919050565b5f6020820190508181035f830152611a5c81611a23565b9050919050565b5f604082019050611a765f830185611886565b611a836020830184611820565b9392505050565b5f81519050611a98816116cc565b92915050565b5f60208284031215611ab357611ab2611684565b5b5f611ac084828501611a8a565b91505092915050565b7f696e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611afd60148361191b565b9150611b0882611ac9565b602082019050919050565b5f6020820190508181035f830152611b2a81611af1565b9050919050565b5f604082019050611b445f830185611886565b611b516020830184611886565b9392505050565b5f81519050611b6681611701565b92915050565b5f60208284031215611b8157611b80611684565b5b5f611b8e84828501611b58565b91505092915050565b7f6e6f7420617070726f76656400000000000000000000000000000000000000005f82015250565b5f611bcb600c8361191b565b9150611bd682611b97565b602082019050919050565b5f6020820190508181035f830152611bf881611bbf565b9050919050565b7f616d6f756e74206d757374206265203120666f722045524337323100000000005f82015250565b5f611c33601b8361191b565b9150611c3e82611bff565b602082019050919050565b5f6020820190508181035f830152611c6081611c27565b9050919050565b5f81519050611c7581611699565b92915050565b5f60208284031215611c9057611c8f611684565b5b5f611c9d84828501611c67565b91505092915050565b7f6e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f611cda60098361191b565b9150611ce582611ca6565b602082019050919050565b5f6020820190508181035f830152611d0781611cce565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d45826116c3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d7757611d76611d0e565b5b600182019050919050565b5f608082019050611d955f830187611820565b611da26020830186611820565b611daf6040830185611820565b611dbc60608301846117cd565b95945050505050565b7f6c697374696e6720696e616374697665000000000000000000000000000000005f82015250565b5f611df960108361191b565b9150611e0482611dc5565b602082019050919050565b5f6020820190508181035f830152611e2681611ded565b9050919050565b5f611e37826116c3565b9150611e42836116c3565b9250828202611e50816116c3565b91508282048414831517611e6757611e66611d0e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611ea5826116c3565b9150611eb0836116c3565b925082611ec057611ebf611e6e565b5b828204905092915050565b5f611ed5826116c3565b9150611ee0836116c3565b9250828203905081811115611ef857611ef7611d0e565b5b92915050565b5f82825260208201905092915050565b50565b5f611f1c5f83611efe565b9150611f2782611f0e565b5f82019050919050565b5f60a082019050611f445f830187611886565b611f516020830186611886565b611f5e6040830185611820565b611f6b6060830184611820565b8181036080830152611f7c81611f11565b905095945050505050565b5f606082019050611f9a5f830186611886565b611fa76020830185611886565b611fb46040830184611820565b949350505050565b5f604082019050611fcf5f830185611820565b611fdc6020830184611820565b9392505050565b7f7a65726f206164647200000000000000000000000000000000000000000000005f82015250565b5f61201760098361191b565b915061202282611fe3565b602082019050919050565b5f6020820190508181035f8301526120448161200b565b9050919050565b7f6d617820313030303000000000000000000000000000000000000000000000005f82015250565b5f61207f60098361191b565b915061208a8261204b565b602082019050919050565b5f6020820190508181035f8301526120ac81612073565b9050919050565b7f6e6f742073656c6c6572000000000000000000000000000000000000000000005f82015250565b5f6120e7600a8361191b565b91506120f2826120b3565b602082019050919050565b5f6020820190508181035f830152612114816120db565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61214f601f8361191b565b915061215a8261211b565b602082019050919050565b5f6020820190508181035f83015261217c81612143565b905091905056fea2646970667358221220eb62d52665b095edbbfe67be3ca40b7a67d8fb9f44cfcc207bf226e7787f3d2864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2834 CODESIZE SUB DUP1 PUSH2 0x2834 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x432 JUMP JUMPDEST DUP4 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x2E0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E SWAP1 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x195 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C SWAP1 PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x203 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA SWAP1 PUSH2 0x5E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x66E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3CE DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3DE DUP2 PUSH2 0x3C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3E8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3F9 DUP2 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x411 DUP2 PUSH2 0x3FF JUMP JUMPDEST DUP2 EQ PUSH2 0x41B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x42C DUP2 PUSH2 0x408 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x44A JUMPI PUSH2 0x449 PUSH2 0x3A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x457 DUP8 DUP3 DUP9 ADD PUSH2 0x3EB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x468 DUP8 DUP3 DUP9 ADD PUSH2 0x3EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x479 DUP8 DUP3 DUP9 ADD PUSH2 0x3EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x48A DUP8 DUP3 DUP9 ADD PUSH2 0x41E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x49F DUP2 PUSH2 0x3C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x496 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F776E6572207A65726F00000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x502 PUSH1 0xA DUP4 PUSH2 0x4BE JUMP JUMPDEST SWAP2 POP PUSH2 0x50D DUP3 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52F DUP2 PUSH2 0x4F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7061796D656E74546F6B656E207A65726F000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x56A PUSH1 0x11 DUP4 PUSH2 0x4BE JUMP JUMPDEST SWAP2 POP PUSH2 0x575 DUP3 PUSH2 0x536 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x597 DUP2 PUSH2 0x55E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x666565436F6C6C6563746F72207A65726F000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5D2 PUSH1 0x11 DUP4 PUSH2 0x4BE JUMP JUMPDEST SWAP2 POP PUSH2 0x5DD DUP3 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FF DUP2 PUSH2 0x5C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x66656550657263656E74206D6178203130303030000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x63A PUSH1 0x14 DUP4 PUSH2 0x4BE JUMP JUMPDEST SWAP2 POP PUSH2 0x645 DUP3 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x667 DUP2 PUSH2 0x62E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B9 DUP1 PUSH2 0x67B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80DF50A8 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC415B95C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xCB917B9C EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DE JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x80DF50A8 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA42DCE80 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xC0F6AE97 EQ PUSH2 0x23E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6A326AB1 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6A326AB1 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x7CE3489B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x1CA JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x3AE6064B EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x4E9B8C5D EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x16C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH2 0xED0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0xFC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x10C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E9 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH0 DUP4 GT PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 SWAP1 POP DUP4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E CALLER DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x479 SWAP3 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x494 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST LT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x534 SWAP3 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1 DUP4 EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP1 PUSH2 0x1C49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST DUP1 PUSH2 0x80B JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x85F SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xD1ED8900AFB99183D6684EF82E558EC94D3FEBA62CFF25B765B503BD5505E09F DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xA28 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0xA39 PUSH2 0x137C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x132D JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF6 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x4 SLOAD DUP4 PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0x1ECB JUMP JUMPDEST SWAP1 POP PUSH2 0xBA4 CALLER DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1385 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC13 CALLER PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1385 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCE7 JUMPI DUP4 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP8 PUSH1 0x2 ADD SLOAD DUP9 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCDE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD9B JUMP JUMPDEST DUP4 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP8 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD84 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH0 DUP5 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x41BFE3082D481C8F62F6ED145F1D8CBEC0DAEBCB4D750AE5C42A51946551D13 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE00 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0xE14 PUSH2 0x137C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE1F PUSH2 0x1407 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE84 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xED8 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0xEE1 PUSH0 PUSH2 0x148E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEEB PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF27 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF48 PUSH2 0x1407 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFCF PUSH2 0x1407 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x10CA PUSH2 0x132D JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1126 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B6 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0xC0C55A6EDEAD4433D18CB1E287A0A20A2FA003A6F483BC9823D2E504D70D1C67 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1211 PUSH2 0x137C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x12B1 PUSH2 0x1407 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1321 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x132A DUP2 PUSH2 0x148E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1369 SWAP1 PUSH2 0x2165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1401 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x154F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x140F PUSH2 0x15EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x142D PUSH2 0xFA0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148C JUMPI PUSH2 0x1450 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x156E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1587 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x15A2 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x15E4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1633 PUSH2 0x162E PUSH2 0x1629 DUP5 PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0x1610 JUMP JUMPDEST PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1644 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1655 DUP3 PUSH2 0x163A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1665 DUP2 PUSH2 0x164B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167E PUSH0 DUP4 ADD DUP5 PUSH2 0x165C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1692 DUP3 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A2 DUP2 PUSH2 0x1688 JUMP JUMPDEST DUP2 EQ PUSH2 0x16AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16BD DUP2 PUSH2 0x1699 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D5 DUP2 PUSH2 0x16C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x16DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F0 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170A DUP2 PUSH2 0x16F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1714 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1725 DUP2 PUSH2 0x1701 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1751 DUP9 DUP3 DUP10 ADD PUSH2 0x16AF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1762 DUP9 DUP3 DUP10 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1773 DUP9 DUP3 DUP10 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1784 DUP9 DUP3 DUP10 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1795 DUP9 DUP3 DUP10 ADD PUSH2 0x1717 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17C4 DUP5 DUP3 DUP6 ADD PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D6 DUP2 PUSH2 0x16F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17EF PUSH0 DUP4 ADD DUP5 PUSH2 0x17CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180A JUMPI PUSH2 0x1809 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1817 DUP5 DUP3 DUP6 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1829 DUP2 PUSH2 0x16C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1842 PUSH0 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x185E JUMPI PUSH2 0x185D PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x186B DUP6 DUP3 DUP7 ADD PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x187C DUP6 DUP3 DUP7 ADD PUSH2 0x1717 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x188F DUP2 PUSH2 0x1688 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1886 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x18C1 PUSH0 DUP4 ADD DUP11 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x18CE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x18DB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x18E8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x18F5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1902 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x190F PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x17CD JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E465420636F6E7472616374206E6F7420616C6C6F7765640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x195F PUSH1 0x18 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x196A DUP3 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x198C DUP2 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7072696365207A65726F00000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19C7 PUSH1 0xA DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x19D2 DUP3 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F4 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74207A65726F000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2F PUSH1 0xB DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3A DUP3 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A5C DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A76 PUSH0 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1A83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A98 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFD PUSH1 0x14 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B08 DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B2A DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B44 PUSH0 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1B51 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1886 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B66 DUP2 PUSH2 0x1701 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B81 JUMPI PUSH2 0x1B80 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8E DUP5 DUP3 DUP6 ADD PUSH2 0x1B58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420617070726F7665640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCB PUSH1 0xC DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD6 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF8 DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D757374206265203120666F72204552433732310000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C33 PUSH1 0x1B DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3E DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C60 DUP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C75 DUP2 PUSH2 0x1699 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C90 JUMPI PUSH2 0x1C8F PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C9D DUP5 DUP3 DUP6 ADD PUSH2 0x1C67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CDA PUSH1 0x9 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE5 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D07 DUP2 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D45 DUP3 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1D77 JUMPI PUSH2 0x1D76 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D95 PUSH0 DUP4 ADD DUP8 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1DA2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1DAF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1DBC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x17CD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x6C697374696E6720696E61637469766500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF9 PUSH1 0x10 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E04 DUP3 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E26 DUP2 PUSH2 0x1DED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E37 DUP3 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E42 DUP4 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E50 DUP2 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E67 JUMPI PUSH2 0x1E66 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EA5 DUP3 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB0 DUP4 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EC0 JUMPI PUSH2 0x1EBF PUSH2 0x1E6E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED5 DUP3 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE0 DUP4 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1C PUSH0 DUP4 PUSH2 0x1EFE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F27 DUP3 PUSH2 0x1F0E JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1F44 PUSH0 DUP4 ADD DUP8 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1F51 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1F5E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1F6B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1F7C DUP2 PUSH2 0x1F11 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F9A PUSH0 DUP4 ADD DUP7 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1FA7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1FB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FCF PUSH0 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1FDC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x7A65726F20616464720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2017 PUSH1 0x9 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x2022 DUP3 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2044 DUP2 PUSH2 0x200B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D61782031303030300000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x207F PUSH1 0x9 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x208A DUP3 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20AC DUP2 PUSH2 0x2073 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F742073656C6C657200000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20E7 PUSH1 0xA DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x20F2 DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2114 DUP2 PUSH2 0x20DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x214F PUSH1 0x1F DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x215A DUP3 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x217C DUP2 PUSH2 0x2143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB PUSH3 0xD52665 0xB0 SWAP6 0xED 0xBB INVALID PUSH8 0xBE3CA40B7A67D8FB SWAP16 PREVRANDAO 0xCF 0xCC KECCAK256 PUSH28 0xF226E7787F3D2864736F6C634300081E003300000000000000000000 ",
							"sourceMap": "420:5300:11:-:0;;;1614:588;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1732:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;1793:1:11::1;1769:26;;:12;:26;;::::0;1761:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1853:1;1828:27;;:13;:27;;::::0;1820:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1920:1;1895:27;;:13;:27;;::::0;1887:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1977:5;1962:11;:20;;1954:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2040:13;2018:12;;:36;;;;;;;;;;;;;;;;;;2079:13;2064:12;;:28;;;;;;;;;;;;;;;;;;2115:11;2102:10;:24;;;;2178:1;2158:17;:21;;;;1614:588:::0;;;;420:5300;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:820::-;1302:6;1310;1318;1326;1375:3;1363:9;1354:7;1350:23;1346:33;1343:120;;;1382:79;;:::i;:::-;1343:120;1502:1;1527:64;1583:7;1574:6;1563:9;1559:22;1527:64;:::i;:::-;1517:74;;1473:128;1640:2;1666:64;1722:7;1713:6;1702:9;1698:22;1666:64;:::i;:::-;1656:74;;1611:129;1779:2;1805:64;1861:7;1852:6;1841:9;1837:22;1805:64;:::i;:::-;1795:74;;1750:129;1918:2;1944:64;2000:7;1991:6;1980:9;1976:22;1944:64;:::i;:::-;1934:74;;1889:129;1205:820;;;;;;;:::o;2031:118::-;2118:24;2136:5;2118:24;:::i;:::-;2113:3;2106:37;2031:118;;:::o;2155:222::-;2248:4;2286:2;2275:9;2271:18;2263:26;;2299:71;2367:1;2356:9;2352:17;2343:6;2299:71;:::i;:::-;2155:222;;;;:::o;2383:169::-;2467:11;2501:6;2496:3;2489:19;2541:4;2536:3;2532:14;2517:29;;2383:169;;;;:::o;2558:160::-;2698:12;2694:1;2686:6;2682:14;2675:36;2558:160;:::o;2724:366::-;2866:3;2887:67;2951:2;2946:3;2887:67;:::i;:::-;2880:74;;2963:93;3052:3;2963:93;:::i;:::-;3081:2;3076:3;3072:12;3065:19;;2724:366;;;:::o;3096:419::-;3262:4;3300:2;3289:9;3285:18;3277:26;;3349:9;3343:4;3339:20;3335:1;3324:9;3320:17;3313:47;3377:131;3503:4;3377:131;:::i;:::-;3369:139;;3096:419;;;:::o;3521:167::-;3661:19;3657:1;3649:6;3645:14;3638:43;3521:167;:::o;3694:366::-;3836:3;3857:67;3921:2;3916:3;3857:67;:::i;:::-;3850:74;;3933:93;4022:3;3933:93;:::i;:::-;4051:2;4046:3;4042:12;4035:19;;3694:366;;;:::o;4066:419::-;4232:4;4270:2;4259:9;4255:18;4247:26;;4319:9;4313:4;4309:20;4305:1;4294:9;4290:17;4283:47;4347:131;4473:4;4347:131;:::i;:::-;4339:139;;4066:419;;;:::o;4491:167::-;4631:19;4627:1;4619:6;4615:14;4608:43;4491:167;:::o;4664:366::-;4806:3;4827:67;4891:2;4886:3;4827:67;:::i;:::-;4820:74;;4903:93;4992:3;4903:93;:::i;:::-;5021:2;5016:3;5012:12;5005:19;;4664:366;;;:::o;5036:419::-;5202:4;5240:2;5229:9;5225:18;5217:26;;5289:9;5283:4;5279:20;5275:1;5264:9;5260:17;5253:47;5317:131;5443:4;5317:131;:::i;:::-;5309:139;;5036:419;;;:::o;5461:170::-;5601:22;5597:1;5589:6;5585:14;5578:46;5461:170;:::o;5637:366::-;5779:3;5800:67;5864:2;5859:3;5800:67;:::i;:::-;5793:74;;5876:93;5965:3;5876:93;:::i;:::-;5994:2;5989:3;5985:12;5978:19;;5637:366;;;:::o;6009:419::-;6175:4;6213:2;6202:9;6198:18;6190:26;;6262:9;6256:4;6252:20;6248:1;6237:9;6233:17;6226:47;6290:131;6416:4;6290:131;:::i;:::-;6282:139;;6009:419;;;:::o;420:5300:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_925": {
									"entryPoint": 5455,
									"id": 925,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5127,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1096": {
									"entryPoint": 5610,
									"id": 1096,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 4988,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 4909,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5262,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowedNFTContracts_1153": {
									"entryPoint": 4224,
									"id": 1153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyNFT_1656": {
									"entryPoint": 2706,
									"id": 1656,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@delistNFT_1548": {
									"entryPoint": 4290,
									"id": 1548,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeCollector_1147": {
									"entryPoint": 4253,
									"id": 1147,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feePercent_1149": {
									"entryPoint": 3898,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAllowedNFT_1668": {
									"entryPoint": 2624,
									"id": 1668,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@listNFT_1508": {
									"entryPoint": 799,
									"id": 1508,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@listings_1175": {
									"entryPoint": 4628,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 4000,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paymentToken_1145": {
									"entryPoint": 762,
									"id": 1145,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3792,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_575": {
									"entryPoint": 4997,
									"id": 575,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setAllowedNFTContract_1356": {
									"entryPoint": 3904,
									"id": 1356,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setFeeCollector_1321": {
									"entryPoint": 4039,
									"id": 1321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeePercent_1340": {
									"entryPoint": 3811,
									"id": 1340,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPaymentToken_1299": {
									"entryPoint": 3607,
									"id": 1299,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4777,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$503_to_t_address_fromStack": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 6961,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8071,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7985,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$503__to_t_address__fromStack_reversed": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8124,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 7554,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7725,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$503_to_t_address": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7438,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7790,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27": {
									"entryPoint": 7621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15": {
									"entryPoint": 8163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee": {
									"entryPoint": 6857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16": {
									"entryPoint": 7063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050": {
									"entryPoint": 6547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e": {
									"entryPoint": 7334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24678:12",
										"nodeType": "YulBlock",
										"src": "0:24678:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:12",
													"nodeType": "YulBlock",
													"src": "52:81:12",
													"statements": [
														{
															"nativeSrc": "62:65:12",
															"nodeType": "YulAssignment",
															"src": "62:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:12",
																		"nodeType": "YulLiteral",
																		"src": "84:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:12"
																},
																"nativeSrc": "73:54:12",
																"nodeType": "YulFunctionCall",
																"src": "73:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:12",
														"nodeType": "YulTypedName",
														"src": "34:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:12",
														"nodeType": "YulTypedName",
														"src": "44:7:12",
														"type": ""
													}
												],
												"src": "7:126:12"
											},
											{
												"body": {
													"nativeSrc": "171:28:12",
													"nodeType": "YulBlock",
													"src": "171:28:12",
													"statements": [
														{
															"nativeSrc": "181:12:12",
															"nodeType": "YulAssignment",
															"src": "181:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:12",
																"nodeType": "YulIdentifier",
																"src": "188:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:12",
														"nodeType": "YulTypedName",
														"src": "157:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:12",
														"nodeType": "YulTypedName",
														"src": "167:3:12",
														"type": ""
													}
												],
												"src": "139:60:12"
											},
											{
												"body": {
													"nativeSrc": "265:82:12",
													"nodeType": "YulBlock",
													"src": "265:82:12",
													"statements": [
														{
															"nativeSrc": "275:66:12",
															"nodeType": "YulAssignment",
															"src": "275:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:12"
																				},
																				"nativeSrc": "315:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:12"
																		},
																		"nativeSrc": "306:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:12"
																},
																"nativeSrc": "288:53:12",
																"nodeType": "YulFunctionCall",
																"src": "288:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:12",
														"nodeType": "YulTypedName",
														"src": "245:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:12",
														"nodeType": "YulTypedName",
														"src": "255:9:12",
														"type": ""
													}
												],
												"src": "205:142:12"
											},
											{
												"body": {
													"nativeSrc": "413:66:12",
													"nodeType": "YulBlock",
													"src": "413:66:12",
													"statements": [
														{
															"nativeSrc": "423:50:12",
															"nodeType": "YulAssignment",
															"src": "423:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:12"
																},
																"nativeSrc": "436:37:12",
																"nodeType": "YulFunctionCall",
																"src": "436:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:12",
														"nodeType": "YulTypedName",
														"src": "393:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:12",
														"nodeType": "YulTypedName",
														"src": "403:9:12",
														"type": ""
													}
												],
												"src": "353:126:12"
											},
											{
												"body": {
													"nativeSrc": "559:66:12",
													"nodeType": "YulBlock",
													"src": "559:66:12",
													"statements": [
														{
															"nativeSrc": "569:50:12",
															"nodeType": "YulAssignment",
															"src": "569:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:12"
																},
																"nativeSrc": "582:37:12",
																"nodeType": "YulFunctionCall",
																"src": "582:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$503_to_t_address",
												"nativeSrc": "485:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:12",
														"nodeType": "YulTypedName",
														"src": "539:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:12",
														"nodeType": "YulTypedName",
														"src": "549:9:12",
														"type": ""
													}
												],
												"src": "485:140:12"
											},
											{
												"body": {
													"nativeSrc": "710:80:12",
													"nodeType": "YulBlock",
													"src": "710:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$503_to_t_address",
																			"nativeSrc": "732:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:12"
																		},
																		"nativeSrc": "732:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:12"
																},
																"nativeSrc": "720:64:12",
																"nodeType": "YulFunctionCall",
																"src": "720:64:12"
															},
															"nativeSrc": "720:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$503_to_t_address_fromStack",
												"nativeSrc": "631:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:12",
														"nodeType": "YulTypedName",
														"src": "698:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:12",
														"nodeType": "YulTypedName",
														"src": "705:3:12",
														"type": ""
													}
												],
												"src": "631:159:12"
											},
											{
												"body": {
													"nativeSrc": "908:138:12",
													"nodeType": "YulBlock",
													"src": "908:138:12",
													"statements": [
														{
															"nativeSrc": "918:26:12",
															"nodeType": "YulAssignment",
															"src": "918:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:12",
																		"nodeType": "YulLiteral",
																		"src": "941:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:12"
																},
																"nativeSrc": "926:18:12",
																"nodeType": "YulFunctionCall",
																"src": "926:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:12"
																		},
																		"nativeSrc": "1021:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$503_to_t_address_fromStack",
																	"nativeSrc": "954:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:12"
																},
																"nativeSrc": "954:85:12",
																"nodeType": "YulFunctionCall",
																"src": "954:85:12"
															},
															"nativeSrc": "954:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$503__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:12",
														"nodeType": "YulTypedName",
														"src": "880:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:12",
														"nodeType": "YulTypedName",
														"src": "892:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:12",
														"nodeType": "YulTypedName",
														"src": "903:4:12",
														"type": ""
													}
												],
												"src": "796:250:12"
											},
											{
												"body": {
													"nativeSrc": "1092:35:12",
													"nodeType": "YulBlock",
													"src": "1092:35:12",
													"statements": [
														{
															"nativeSrc": "1102:19:12",
															"nodeType": "YulAssignment",
															"src": "1102:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1118:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1118:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1112:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1112:5:12"
																},
																"nativeSrc": "1112:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1112:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1102:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1102:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1052:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1085:6:12",
														"nodeType": "YulTypedName",
														"src": "1085:6:12",
														"type": ""
													}
												],
												"src": "1052:75:12"
											},
											{
												"body": {
													"nativeSrc": "1222:28:12",
													"nodeType": "YulBlock",
													"src": "1222:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1239:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1239:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1232:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1232:6:12"
																},
																"nativeSrc": "1232:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1232:12:12"
															},
															"nativeSrc": "1232:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1232:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1133:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1133:117:12"
											},
											{
												"body": {
													"nativeSrc": "1345:28:12",
													"nodeType": "YulBlock",
													"src": "1345:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1362:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1355:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1355:6:12"
																},
																"nativeSrc": "1355:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:12"
															},
															"nativeSrc": "1355:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1355:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1256:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1256:117:12"
											},
											{
												"body": {
													"nativeSrc": "1424:51:12",
													"nodeType": "YulBlock",
													"src": "1424:51:12",
													"statements": [
														{
															"nativeSrc": "1434:35:12",
															"nodeType": "YulAssignment",
															"src": "1434:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1463:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1463:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1445:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1445:17:12"
																},
																"nativeSrc": "1445:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1445:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1434:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1434:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1379:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:12",
														"nodeType": "YulTypedName",
														"src": "1406:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1416:7:12",
														"nodeType": "YulTypedName",
														"src": "1416:7:12",
														"type": ""
													}
												],
												"src": "1379:96:12"
											},
											{
												"body": {
													"nativeSrc": "1524:79:12",
													"nodeType": "YulBlock",
													"src": "1524:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1581:16:12",
																"nodeType": "YulBlock",
																"src": "1581:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1590:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1590:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1593:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1593:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1583:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1583:6:12"
																			},
																			"nativeSrc": "1583:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1583:12:12"
																		},
																		"nativeSrc": "1583:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1583:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1547:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1547:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1572:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1572:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1554:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1554:17:12"
																				},
																				"nativeSrc": "1554:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1554:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1544:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1544:2:12"
																		},
																		"nativeSrc": "1544:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1537:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1537:6:12"
																},
																"nativeSrc": "1537:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1537:43:12"
															},
															"nativeSrc": "1534:63:12",
															"nodeType": "YulIf",
															"src": "1534:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1481:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1517:5:12",
														"nodeType": "YulTypedName",
														"src": "1517:5:12",
														"type": ""
													}
												],
												"src": "1481:122:12"
											},
											{
												"body": {
													"nativeSrc": "1661:87:12",
													"nodeType": "YulBlock",
													"src": "1661:87:12",
													"statements": [
														{
															"nativeSrc": "1671:29:12",
															"nodeType": "YulAssignment",
															"src": "1671:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1693:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1693:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1680:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1680:12:12"
																},
																"nativeSrc": "1680:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1680:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1671:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1671:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1736:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1736:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1709:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1709:26:12"
																},
																"nativeSrc": "1709:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1709:33:12"
															},
															"nativeSrc": "1709:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1709:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1609:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1639:6:12",
														"nodeType": "YulTypedName",
														"src": "1639:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1647:3:12",
														"nodeType": "YulTypedName",
														"src": "1647:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1655:5:12",
														"nodeType": "YulTypedName",
														"src": "1655:5:12",
														"type": ""
													}
												],
												"src": "1609:139:12"
											},
											{
												"body": {
													"nativeSrc": "1799:32:12",
													"nodeType": "YulBlock",
													"src": "1799:32:12",
													"statements": [
														{
															"nativeSrc": "1809:16:12",
															"nodeType": "YulAssignment",
															"src": "1809:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1820:5:12",
																"nodeType": "YulIdentifier",
																"src": "1820:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1809:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1809:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1754:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1781:5:12",
														"nodeType": "YulTypedName",
														"src": "1781:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1791:7:12",
														"nodeType": "YulTypedName",
														"src": "1791:7:12",
														"type": ""
													}
												],
												"src": "1754:77:12"
											},
											{
												"body": {
													"nativeSrc": "1880:79:12",
													"nodeType": "YulBlock",
													"src": "1880:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1937:16:12",
																"nodeType": "YulBlock",
																"src": "1937:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1946:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1946:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1949:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1949:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1939:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1939:6:12"
																			},
																			"nativeSrc": "1939:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1939:12:12"
																		},
																		"nativeSrc": "1939:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1939:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1903:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1903:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1928:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1928:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1910:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1910:17:12"
																				},
																				"nativeSrc": "1910:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1910:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1900:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1900:2:12"
																		},
																		"nativeSrc": "1900:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1893:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1893:6:12"
																},
																"nativeSrc": "1893:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1893:43:12"
															},
															"nativeSrc": "1890:63:12",
															"nodeType": "YulIf",
															"src": "1890:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1837:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1873:5:12",
														"nodeType": "YulTypedName",
														"src": "1873:5:12",
														"type": ""
													}
												],
												"src": "1837:122:12"
											},
											{
												"body": {
													"nativeSrc": "2017:87:12",
													"nodeType": "YulBlock",
													"src": "2017:87:12",
													"statements": [
														{
															"nativeSrc": "2027:29:12",
															"nodeType": "YulAssignment",
															"src": "2027:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2049:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2049:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2036:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2036:12:12"
																},
																"nativeSrc": "2036:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2036:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2027:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2027:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2092:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2092:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2065:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2065:26:12"
																},
																"nativeSrc": "2065:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2065:33:12"
															},
															"nativeSrc": "2065:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2065:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1965:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1995:6:12",
														"nodeType": "YulTypedName",
														"src": "1995:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2003:3:12",
														"nodeType": "YulTypedName",
														"src": "2003:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2011:5:12",
														"nodeType": "YulTypedName",
														"src": "2011:5:12",
														"type": ""
													}
												],
												"src": "1965:139:12"
											},
											{
												"body": {
													"nativeSrc": "2152:48:12",
													"nodeType": "YulBlock",
													"src": "2152:48:12",
													"statements": [
														{
															"nativeSrc": "2162:32:12",
															"nodeType": "YulAssignment",
															"src": "2162:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2187:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2180:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2180:6:12"
																		},
																		"nativeSrc": "2180:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2173:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:12"
																},
																"nativeSrc": "2173:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2173:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2162:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2162:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2110:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2134:5:12",
														"nodeType": "YulTypedName",
														"src": "2134:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2144:7:12",
														"nodeType": "YulTypedName",
														"src": "2144:7:12",
														"type": ""
													}
												],
												"src": "2110:90:12"
											},
											{
												"body": {
													"nativeSrc": "2246:76:12",
													"nodeType": "YulBlock",
													"src": "2246:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2300:16:12",
																"nodeType": "YulBlock",
																"src": "2300:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2309:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2309:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2312:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2312:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2302:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2302:6:12"
																			},
																			"nativeSrc": "2302:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2302:12:12"
																		},
																		"nativeSrc": "2302:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2302:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2269:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2269:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2291:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2291:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2276:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "2276:14:12"
																				},
																				"nativeSrc": "2276:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2276:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2266:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2266:2:12"
																		},
																		"nativeSrc": "2266:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2266:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2259:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:12"
																},
																"nativeSrc": "2259:40:12",
																"nodeType": "YulFunctionCall",
																"src": "2259:40:12"
															},
															"nativeSrc": "2256:60:12",
															"nodeType": "YulIf",
															"src": "2256:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2206:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2239:5:12",
														"nodeType": "YulTypedName",
														"src": "2239:5:12",
														"type": ""
													}
												],
												"src": "2206:116:12"
											},
											{
												"body": {
													"nativeSrc": "2377:84:12",
													"nodeType": "YulBlock",
													"src": "2377:84:12",
													"statements": [
														{
															"nativeSrc": "2387:29:12",
															"nodeType": "YulAssignment",
															"src": "2387:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2409:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2409:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2396:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2396:12:12"
																},
																"nativeSrc": "2396:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2396:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2387:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2387:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2449:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2449:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2425:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "2425:23:12"
																},
																"nativeSrc": "2425:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2425:30:12"
															},
															"nativeSrc": "2425:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "2425:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "2328:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2355:6:12",
														"nodeType": "YulTypedName",
														"src": "2355:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2363:3:12",
														"nodeType": "YulTypedName",
														"src": "2363:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2371:5:12",
														"nodeType": "YulTypedName",
														"src": "2371:5:12",
														"type": ""
													}
												],
												"src": "2328:133:12"
											},
											{
												"body": {
													"nativeSrc": "2598:774:12",
													"nodeType": "YulBlock",
													"src": "2598:774:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2645:83:12",
																"nodeType": "YulBlock",
																"src": "2645:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2647:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2647:77:12"
																			},
																			"nativeSrc": "2647:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2647:79:12"
																		},
																		"nativeSrc": "2647:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2647:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2619:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2619:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2628:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2628:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2615:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2615:3:12"
																		},
																		"nativeSrc": "2615:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2615:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2640:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2640:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2611:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2611:3:12"
																},
																"nativeSrc": "2611:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2611:33:12"
															},
															"nativeSrc": "2608:120:12",
															"nodeType": "YulIf",
															"src": "2608:120:12"
														},
														{
															"nativeSrc": "2738:117:12",
															"nodeType": "YulBlock",
															"src": "2738:117:12",
															"statements": [
																{
																	"nativeSrc": "2753:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2753:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2767:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2767:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2757:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2757:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2782:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2782:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2817:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2817:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2828:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2828:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2813:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2813:3:12"
																				},
																				"nativeSrc": "2813:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2813:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2837:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2837:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2792:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2792:20:12"
																		},
																		"nativeSrc": "2792:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2792:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2782:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2782:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2865:118:12",
															"nodeType": "YulBlock",
															"src": "2865:118:12",
															"statements": [
																{
																	"nativeSrc": "2880:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2880:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2894:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2894:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2884:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2884:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2910:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2910:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2945:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2945:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2956:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2956:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2941:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2941:3:12"
																				},
																				"nativeSrc": "2941:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2941:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2965:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2965:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2920:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2920:20:12"
																		},
																		"nativeSrc": "2920:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2920:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2910:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2910:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2993:118:12",
															"nodeType": "YulBlock",
															"src": "2993:118:12",
															"statements": [
																{
																	"nativeSrc": "3008:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3008:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3022:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3022:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3012:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3012:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3038:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3038:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3073:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3073:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3084:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3084:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3069:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3069:3:12"
																				},
																				"nativeSrc": "3069:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3069:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3093:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3093:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3048:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3048:20:12"
																		},
																		"nativeSrc": "3048:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3048:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3038:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3038:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3121:118:12",
															"nodeType": "YulBlock",
															"src": "3121:118:12",
															"statements": [
																{
																	"nativeSrc": "3136:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3136:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3150:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3150:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3140:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3140:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3166:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3166:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3201:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3201:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3212:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3212:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3197:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3197:3:12"
																				},
																				"nativeSrc": "3197:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3197:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3221:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3221:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3176:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3176:20:12"
																		},
																		"nativeSrc": "3176:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3176:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3166:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3166:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3249:116:12",
															"nodeType": "YulBlock",
															"src": "3249:116:12",
															"statements": [
																{
																	"nativeSrc": "3264:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3264:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3278:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3278:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3268:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3268:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3295:60:12",
																	"nodeType": "YulAssignment",
																	"src": "3295:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3327:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3327:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3338:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3338:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3323:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3323:3:12"
																				},
																				"nativeSrc": "3323:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3323:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3347:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3347:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "3305:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3305:17:12"
																		},
																		"nativeSrc": "3305:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3305:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "3295:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3295:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool",
												"nativeSrc": "2467:905:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2536:9:12",
														"nodeType": "YulTypedName",
														"src": "2536:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2547:7:12",
														"nodeType": "YulTypedName",
														"src": "2547:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2559:6:12",
														"nodeType": "YulTypedName",
														"src": "2559:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2567:6:12",
														"nodeType": "YulTypedName",
														"src": "2567:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2575:6:12",
														"nodeType": "YulTypedName",
														"src": "2575:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2583:6:12",
														"nodeType": "YulTypedName",
														"src": "2583:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2591:6:12",
														"nodeType": "YulTypedName",
														"src": "2591:6:12",
														"type": ""
													}
												],
												"src": "2467:905:12"
											},
											{
												"body": {
													"nativeSrc": "3444:263:12",
													"nodeType": "YulBlock",
													"src": "3444:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3490:83:12",
																"nodeType": "YulBlock",
																"src": "3490:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3492:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3492:77:12"
																			},
																			"nativeSrc": "3492:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3492:79:12"
																		},
																		"nativeSrc": "3492:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3492:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3465:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3465:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3474:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3474:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3461:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3461:3:12"
																		},
																		"nativeSrc": "3461:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3461:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3486:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3486:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:12"
																},
																"nativeSrc": "3457:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3457:32:12"
															},
															"nativeSrc": "3454:119:12",
															"nodeType": "YulIf",
															"src": "3454:119:12"
														},
														{
															"nativeSrc": "3583:117:12",
															"nodeType": "YulBlock",
															"src": "3583:117:12",
															"statements": [
																{
																	"nativeSrc": "3598:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3598:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3612:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3602:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3602:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3627:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3627:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3662:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3662:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3673:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3673:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3658:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3658:3:12"
																				},
																				"nativeSrc": "3658:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3658:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3682:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3682:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3637:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3637:20:12"
																		},
																		"nativeSrc": "3637:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3637:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3627:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3627:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3378:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3414:9:12",
														"nodeType": "YulTypedName",
														"src": "3414:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3425:7:12",
														"nodeType": "YulTypedName",
														"src": "3425:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3437:6:12",
														"nodeType": "YulTypedName",
														"src": "3437:6:12",
														"type": ""
													}
												],
												"src": "3378:329:12"
											},
											{
												"body": {
													"nativeSrc": "3772:50:12",
													"nodeType": "YulBlock",
													"src": "3772:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3789:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3789:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3809:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3809:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3794:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "3794:14:12"
																		},
																		"nativeSrc": "3794:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3794:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3782:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3782:6:12"
																},
																"nativeSrc": "3782:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3782:34:12"
															},
															"nativeSrc": "3782:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3782:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3713:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3760:5:12",
														"nodeType": "YulTypedName",
														"src": "3760:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3767:3:12",
														"nodeType": "YulTypedName",
														"src": "3767:3:12",
														"type": ""
													}
												],
												"src": "3713:109:12"
											},
											{
												"body": {
													"nativeSrc": "3920:118:12",
													"nodeType": "YulBlock",
													"src": "3920:118:12",
													"statements": [
														{
															"nativeSrc": "3930:26:12",
															"nodeType": "YulAssignment",
															"src": "3930:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3942:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3942:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3953:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3953:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3938:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3938:3:12"
																},
																"nativeSrc": "3938:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3938:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3930:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3930:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4004:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4004:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4017:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4017:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4028:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4028:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4013:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4013:3:12"
																		},
																		"nativeSrc": "4013:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4013:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3966:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3966:37:12"
																},
																"nativeSrc": "3966:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3966:65:12"
															},
															"nativeSrc": "3966:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3966:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3828:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:12",
														"nodeType": "YulTypedName",
														"src": "3892:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3904:6:12",
														"nodeType": "YulTypedName",
														"src": "3904:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3915:4:12",
														"nodeType": "YulTypedName",
														"src": "3915:4:12",
														"type": ""
													}
												],
												"src": "3828:210:12"
											},
											{
												"body": {
													"nativeSrc": "4110:263:12",
													"nodeType": "YulBlock",
													"src": "4110:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4156:83:12",
																"nodeType": "YulBlock",
																"src": "4156:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4158:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4158:77:12"
																			},
																			"nativeSrc": "4158:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4158:79:12"
																		},
																		"nativeSrc": "4158:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4158:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4131:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4131:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4140:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4140:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4127:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4127:3:12"
																		},
																		"nativeSrc": "4127:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4152:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4152:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4123:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:12"
																},
																"nativeSrc": "4123:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4123:32:12"
															},
															"nativeSrc": "4120:119:12",
															"nodeType": "YulIf",
															"src": "4120:119:12"
														},
														{
															"nativeSrc": "4249:117:12",
															"nodeType": "YulBlock",
															"src": "4249:117:12",
															"statements": [
																{
																	"nativeSrc": "4264:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4264:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4278:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4268:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4268:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4293:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4293:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4328:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4328:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4339:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4339:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4324:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4324:3:12"
																				},
																				"nativeSrc": "4324:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4324:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4348:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4348:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4303:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4303:20:12"
																		},
																		"nativeSrc": "4303:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4303:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4293:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4293:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4044:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:12",
														"nodeType": "YulTypedName",
														"src": "4080:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:12",
														"nodeType": "YulTypedName",
														"src": "4091:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:12",
														"nodeType": "YulTypedName",
														"src": "4103:6:12",
														"type": ""
													}
												],
												"src": "4044:329:12"
											},
											{
												"body": {
													"nativeSrc": "4444:53:12",
													"nodeType": "YulBlock",
													"src": "4444:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4461:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4461:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4484:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4484:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4466:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4466:17:12"
																		},
																		"nativeSrc": "4466:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4454:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:12"
																},
																"nativeSrc": "4454:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4454:37:12"
															},
															"nativeSrc": "4454:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4454:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4379:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4432:5:12",
														"nodeType": "YulTypedName",
														"src": "4432:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4439:3:12",
														"nodeType": "YulTypedName",
														"src": "4439:3:12",
														"type": ""
													}
												],
												"src": "4379:118:12"
											},
											{
												"body": {
													"nativeSrc": "4601:124:12",
													"nodeType": "YulBlock",
													"src": "4601:124:12",
													"statements": [
														{
															"nativeSrc": "4611:26:12",
															"nodeType": "YulAssignment",
															"src": "4611:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4623:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4623:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4634:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4619:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4619:3:12"
																},
																"nativeSrc": "4619:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4619:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4611:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4611:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4691:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4691:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4704:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4704:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4715:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4715:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4700:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4700:3:12"
																		},
																		"nativeSrc": "4700:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4700:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4647:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4647:43:12"
																},
																"nativeSrc": "4647:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4647:71:12"
															},
															"nativeSrc": "4647:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4647:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4503:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4573:9:12",
														"nodeType": "YulTypedName",
														"src": "4573:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4585:6:12",
														"nodeType": "YulTypedName",
														"src": "4585:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4596:4:12",
														"nodeType": "YulTypedName",
														"src": "4596:4:12",
														"type": ""
													}
												],
												"src": "4503:222:12"
											},
											{
												"body": {
													"nativeSrc": "4811:388:12",
													"nodeType": "YulBlock",
													"src": "4811:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4857:83:12",
																"nodeType": "YulBlock",
																"src": "4857:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4859:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4859:77:12"
																			},
																			"nativeSrc": "4859:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4859:79:12"
																		},
																		"nativeSrc": "4859:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4859:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4832:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4832:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4841:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4841:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4828:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4828:3:12"
																		},
																		"nativeSrc": "4828:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4828:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4853:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4853:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4824:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4824:3:12"
																},
																"nativeSrc": "4824:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4824:32:12"
															},
															"nativeSrc": "4821:119:12",
															"nodeType": "YulIf",
															"src": "4821:119:12"
														},
														{
															"nativeSrc": "4950:117:12",
															"nodeType": "YulBlock",
															"src": "4950:117:12",
															"statements": [
																{
																	"nativeSrc": "4965:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4965:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4979:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4979:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4969:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4969:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4994:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4994:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5029:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5029:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5040:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5040:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5025:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5025:3:12"
																				},
																				"nativeSrc": "5025:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5025:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5049:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5049:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5004:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5004:20:12"
																		},
																		"nativeSrc": "5004:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5004:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4994:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4994:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5077:115:12",
															"nodeType": "YulBlock",
															"src": "5077:115:12",
															"statements": [
																{
																	"nativeSrc": "5092:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5092:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5106:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5106:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5096:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5096:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5122:60:12",
																	"nodeType": "YulAssignment",
																	"src": "5122:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5154:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5154:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5165:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5165:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5150:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5150:3:12"
																				},
																				"nativeSrc": "5150:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5150:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5174:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5174:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "5132:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5132:17:12"
																		},
																		"nativeSrc": "5132:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5132:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5122:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5122:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4731:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4773:9:12",
														"nodeType": "YulTypedName",
														"src": "4773:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4784:7:12",
														"nodeType": "YulTypedName",
														"src": "4784:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4796:6:12",
														"nodeType": "YulTypedName",
														"src": "4796:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4804:6:12",
														"nodeType": "YulTypedName",
														"src": "4804:6:12",
														"type": ""
													}
												],
												"src": "4731:468:12"
											},
											{
												"body": {
													"nativeSrc": "5270:53:12",
													"nodeType": "YulBlock",
													"src": "5270:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5287:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5287:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5310:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5310:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5292:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5292:17:12"
																		},
																		"nativeSrc": "5292:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5292:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5280:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5280:6:12"
																},
																"nativeSrc": "5280:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5280:37:12"
															},
															"nativeSrc": "5280:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5280:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5205:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5258:5:12",
														"nodeType": "YulTypedName",
														"src": "5258:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5265:3:12",
														"nodeType": "YulTypedName",
														"src": "5265:3:12",
														"type": ""
													}
												],
												"src": "5205:118:12"
											},
											{
												"body": {
													"nativeSrc": "5427:124:12",
													"nodeType": "YulBlock",
													"src": "5427:124:12",
													"statements": [
														{
															"nativeSrc": "5437:26:12",
															"nodeType": "YulAssignment",
															"src": "5437:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5449:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5449:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5460:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5460:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5445:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5445:3:12"
																},
																"nativeSrc": "5445:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5445:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5437:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5437:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5517:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5517:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5530:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5530:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5541:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5541:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5526:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5526:3:12"
																		},
																		"nativeSrc": "5526:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5473:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5473:43:12"
																},
																"nativeSrc": "5473:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5473:71:12"
															},
															"nativeSrc": "5473:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5473:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5329:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5399:9:12",
														"nodeType": "YulTypedName",
														"src": "5399:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5411:6:12",
														"nodeType": "YulTypedName",
														"src": "5411:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5422:4:12",
														"nodeType": "YulTypedName",
														"src": "5422:4:12",
														"type": ""
													}
												],
												"src": "5329:222:12"
											},
											{
												"body": {
													"nativeSrc": "5811:608:12",
													"nodeType": "YulBlock",
													"src": "5811:608:12",
													"statements": [
														{
															"nativeSrc": "5821:27:12",
															"nodeType": "YulAssignment",
															"src": "5821:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5833:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5833:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5844:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5844:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5829:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5829:3:12"
																},
																"nativeSrc": "5829:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5829:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5821:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5821:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5902:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5902:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5915:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5915:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5926:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5926:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5911:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5911:3:12"
																		},
																		"nativeSrc": "5911:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5911:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5858:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5858:43:12"
																},
																"nativeSrc": "5858:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5858:71:12"
															},
															"nativeSrc": "5858:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5858:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5983:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5983:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5996:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5996:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6007:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6007:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5992:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5992:3:12"
																		},
																		"nativeSrc": "5992:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5992:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5939:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5939:43:12"
																},
																"nativeSrc": "5939:72:12",
																"nodeType": "YulFunctionCall",
																"src": "5939:72:12"
															},
															"nativeSrc": "5939:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "5939:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6065:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6065:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6078:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6078:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6089:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6089:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6074:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6074:3:12"
																		},
																		"nativeSrc": "6074:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6074:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6021:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6021:43:12"
																},
																"nativeSrc": "6021:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6021:72:12"
															},
															"nativeSrc": "6021:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6021:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6147:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6147:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6160:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6160:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6171:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6171:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6156:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6156:3:12"
																		},
																		"nativeSrc": "6156:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6156:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6103:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6103:43:12"
																},
																"nativeSrc": "6103:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6103:72:12"
															},
															"nativeSrc": "6103:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6103:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6229:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6229:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6242:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6242:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6253:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6253:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6238:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6238:3:12"
																		},
																		"nativeSrc": "6238:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6185:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6185:43:12"
																},
																"nativeSrc": "6185:73:12",
																"nodeType": "YulFunctionCall",
																"src": "6185:73:12"
															},
															"nativeSrc": "6185:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "6185:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "6306:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6306:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6319:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6319:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6330:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6330:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6315:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:12"
																		},
																		"nativeSrc": "6315:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6268:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "6268:37:12"
																},
																"nativeSrc": "6268:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6268:67:12"
															},
															"nativeSrc": "6268:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "6268:67:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "6383:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6383:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6396:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6396:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6407:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6407:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6392:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6392:3:12"
																		},
																		"nativeSrc": "6392:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6345:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "6345:37:12"
																},
																"nativeSrc": "6345:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6345:67:12"
															},
															"nativeSrc": "6345:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "6345:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nativeSrc": "5557:862:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5735:9:12",
														"nodeType": "YulTypedName",
														"src": "5735:9:12",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5747:6:12",
														"nodeType": "YulTypedName",
														"src": "5747:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5755:6:12",
														"nodeType": "YulTypedName",
														"src": "5755:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5763:6:12",
														"nodeType": "YulTypedName",
														"src": "5763:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5771:6:12",
														"nodeType": "YulTypedName",
														"src": "5771:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5779:6:12",
														"nodeType": "YulTypedName",
														"src": "5779:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5787:6:12",
														"nodeType": "YulTypedName",
														"src": "5787:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5795:6:12",
														"nodeType": "YulTypedName",
														"src": "5795:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5806:4:12",
														"nodeType": "YulTypedName",
														"src": "5806:4:12",
														"type": ""
													}
												],
												"src": "5557:862:12"
											},
											{
												"body": {
													"nativeSrc": "6521:73:12",
													"nodeType": "YulBlock",
													"src": "6521:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6538:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6538:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6543:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6543:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6531:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6531:6:12"
																},
																"nativeSrc": "6531:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6531:19:12"
															},
															"nativeSrc": "6531:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "6531:19:12"
														},
														{
															"nativeSrc": "6559:29:12",
															"nodeType": "YulAssignment",
															"src": "6559:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6578:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6578:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6583:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6583:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6574:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:12"
																},
																"nativeSrc": "6574:14:12",
																"nodeType": "YulFunctionCall",
																"src": "6574:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6559:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "6559:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6425:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6493:3:12",
														"nodeType": "YulTypedName",
														"src": "6493:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6498:6:12",
														"nodeType": "YulTypedName",
														"src": "6498:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6509:11:12",
														"nodeType": "YulTypedName",
														"src": "6509:11:12",
														"type": ""
													}
												],
												"src": "6425:169:12"
											},
											{
												"body": {
													"nativeSrc": "6706:68:12",
													"nodeType": "YulBlock",
													"src": "6706:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6728:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6728:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6736:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6736:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6724:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6724:3:12"
																		},
																		"nativeSrc": "6724:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6724:14:12"
																	},
																	{
																		"hexValue": "4e465420636f6e7472616374206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "6740:26:12",
																		"nodeType": "YulLiteral",
																		"src": "6740:26:12",
																		"type": "",
																		"value": "NFT contract not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6717:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6717:6:12"
																},
																"nativeSrc": "6717:50:12",
																"nodeType": "YulFunctionCall",
																"src": "6717:50:12"
															},
															"nativeSrc": "6717:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "6717:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49",
												"nativeSrc": "6600:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6698:6:12",
														"nodeType": "YulTypedName",
														"src": "6698:6:12",
														"type": ""
													}
												],
												"src": "6600:174:12"
											},
											{
												"body": {
													"nativeSrc": "6926:220:12",
													"nodeType": "YulBlock",
													"src": "6926:220:12",
													"statements": [
														{
															"nativeSrc": "6936:74:12",
															"nodeType": "YulAssignment",
															"src": "6936:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7002:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7002:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7007:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7007:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6943:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "6943:58:12"
																},
																"nativeSrc": "6943:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6943:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6936:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6936:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7108:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7108:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49",
																	"nativeSrc": "7019:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "7019:88:12"
																},
																"nativeSrc": "7019:93:12",
																"nodeType": "YulFunctionCall",
																"src": "7019:93:12"
															},
															"nativeSrc": "7019:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "7019:93:12"
														},
														{
															"nativeSrc": "7121:19:12",
															"nodeType": "YulAssignment",
															"src": "7121:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7132:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7132:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7137:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7128:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7128:3:12"
																},
																"nativeSrc": "7128:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7128:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7121:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6780:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6914:3:12",
														"nodeType": "YulTypedName",
														"src": "6914:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6922:3:12",
														"nodeType": "YulTypedName",
														"src": "6922:3:12",
														"type": ""
													}
												],
												"src": "6780:366:12"
											},
											{
												"body": {
													"nativeSrc": "7323:248:12",
													"nodeType": "YulBlock",
													"src": "7323:248:12",
													"statements": [
														{
															"nativeSrc": "7333:26:12",
															"nodeType": "YulAssignment",
															"src": "7333:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7345:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7345:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7356:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7356:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7341:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7341:3:12"
																},
																"nativeSrc": "7341:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7341:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7333:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7333:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7380:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7380:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7391:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7391:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7376:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7376:3:12"
																		},
																		"nativeSrc": "7376:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7376:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7399:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7399:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7405:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7405:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7395:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7395:3:12"
																		},
																		"nativeSrc": "7395:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7395:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7369:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7369:6:12"
																},
																"nativeSrc": "7369:47:12",
																"nodeType": "YulFunctionCall",
																"src": "7369:47:12"
															},
															"nativeSrc": "7369:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "7369:47:12"
														},
														{
															"nativeSrc": "7425:139:12",
															"nodeType": "YulAssignment",
															"src": "7425:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7559:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7559:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7433:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "7433:124:12"
																},
																"nativeSrc": "7433:131:12",
																"nodeType": "YulFunctionCall",
																"src": "7433:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7425:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7425:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7152:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7303:9:12",
														"nodeType": "YulTypedName",
														"src": "7303:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7318:4:12",
														"nodeType": "YulTypedName",
														"src": "7318:4:12",
														"type": ""
													}
												],
												"src": "7152:419:12"
											},
											{
												"body": {
													"nativeSrc": "7683:54:12",
													"nodeType": "YulBlock",
													"src": "7683:54:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7705:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7705:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7713:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7713:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7701:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7701:3:12"
																		},
																		"nativeSrc": "7701:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7701:14:12"
																	},
																	{
																		"hexValue": "7072696365207a65726f",
																		"kind": "string",
																		"nativeSrc": "7717:12:12",
																		"nodeType": "YulLiteral",
																		"src": "7717:12:12",
																		"type": "",
																		"value": "price zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7694:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7694:6:12"
																},
																"nativeSrc": "7694:36:12",
																"nodeType": "YulFunctionCall",
																"src": "7694:36:12"
															},
															"nativeSrc": "7694:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "7694:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050",
												"nativeSrc": "7577:160:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7675:6:12",
														"nodeType": "YulTypedName",
														"src": "7675:6:12",
														"type": ""
													}
												],
												"src": "7577:160:12"
											},
											{
												"body": {
													"nativeSrc": "7889:220:12",
													"nodeType": "YulBlock",
													"src": "7889:220:12",
													"statements": [
														{
															"nativeSrc": "7899:74:12",
															"nodeType": "YulAssignment",
															"src": "7899:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7965:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7965:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7970:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7970:2:12",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7906:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "7906:58:12"
																},
																"nativeSrc": "7906:67:12",
																"nodeType": "YulFunctionCall",
																"src": "7906:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7899:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7899:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8071:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8071:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050",
																	"nativeSrc": "7982:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "7982:88:12"
																},
																"nativeSrc": "7982:93:12",
																"nodeType": "YulFunctionCall",
																"src": "7982:93:12"
															},
															"nativeSrc": "7982:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "7982:93:12"
														},
														{
															"nativeSrc": "8084:19:12",
															"nodeType": "YulAssignment",
															"src": "8084:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8095:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8095:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8100:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8100:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8091:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:12"
																},
																"nativeSrc": "8091:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8091:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8084:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8084:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7743:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7877:3:12",
														"nodeType": "YulTypedName",
														"src": "7877:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7885:3:12",
														"nodeType": "YulTypedName",
														"src": "7885:3:12",
														"type": ""
													}
												],
												"src": "7743:366:12"
											},
											{
												"body": {
													"nativeSrc": "8286:248:12",
													"nodeType": "YulBlock",
													"src": "8286:248:12",
													"statements": [
														{
															"nativeSrc": "8296:26:12",
															"nodeType": "YulAssignment",
															"src": "8296:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8308:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8308:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8319:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8319:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8304:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8304:3:12"
																},
																"nativeSrc": "8304:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8304:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8296:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8296:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8343:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8343:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8354:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8354:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8339:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8339:3:12"
																		},
																		"nativeSrc": "8339:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8339:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8362:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8362:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8368:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8368:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8358:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8358:3:12"
																		},
																		"nativeSrc": "8358:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8358:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8332:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8332:6:12"
																},
																"nativeSrc": "8332:47:12",
																"nodeType": "YulFunctionCall",
																"src": "8332:47:12"
															},
															"nativeSrc": "8332:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "8332:47:12"
														},
														{
															"nativeSrc": "8388:139:12",
															"nodeType": "YulAssignment",
															"src": "8388:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8522:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8522:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8396:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "8396:124:12"
																},
																"nativeSrc": "8396:131:12",
																"nodeType": "YulFunctionCall",
																"src": "8396:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8388:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8388:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8115:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8266:9:12",
														"nodeType": "YulTypedName",
														"src": "8266:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8281:4:12",
														"nodeType": "YulTypedName",
														"src": "8281:4:12",
														"type": ""
													}
												],
												"src": "8115:419:12"
											},
											{
												"body": {
													"nativeSrc": "8646:55:12",
													"nodeType": "YulBlock",
													"src": "8646:55:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8668:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8668:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8676:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8676:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8664:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8664:3:12"
																		},
																		"nativeSrc": "8664:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8664:14:12"
																	},
																	{
																		"hexValue": "616d6f756e74207a65726f",
																		"kind": "string",
																		"nativeSrc": "8680:13:12",
																		"nodeType": "YulLiteral",
																		"src": "8680:13:12",
																		"type": "",
																		"value": "amount zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8657:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:12"
																},
																"nativeSrc": "8657:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8657:37:12"
															},
															"nativeSrc": "8657:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8657:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92",
												"nativeSrc": "8540:161:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8638:6:12",
														"nodeType": "YulTypedName",
														"src": "8638:6:12",
														"type": ""
													}
												],
												"src": "8540:161:12"
											},
											{
												"body": {
													"nativeSrc": "8853:220:12",
													"nodeType": "YulBlock",
													"src": "8853:220:12",
													"statements": [
														{
															"nativeSrc": "8863:74:12",
															"nodeType": "YulAssignment",
															"src": "8863:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8929:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8929:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8934:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8934:2:12",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8870:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8870:58:12"
																},
																"nativeSrc": "8870:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8870:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8863:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8863:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9035:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9035:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92",
																	"nativeSrc": "8946:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8946:88:12"
																},
																"nativeSrc": "8946:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8946:93:12"
															},
															"nativeSrc": "8946:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8946:93:12"
														},
														{
															"nativeSrc": "9048:19:12",
															"nodeType": "YulAssignment",
															"src": "9048:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9059:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9059:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9064:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9064:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9055:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9055:3:12"
																},
																"nativeSrc": "9055:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9055:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9048:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9048:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8707:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8841:3:12",
														"nodeType": "YulTypedName",
														"src": "8841:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8849:3:12",
														"nodeType": "YulTypedName",
														"src": "8849:3:12",
														"type": ""
													}
												],
												"src": "8707:366:12"
											},
											{
												"body": {
													"nativeSrc": "9250:248:12",
													"nodeType": "YulBlock",
													"src": "9250:248:12",
													"statements": [
														{
															"nativeSrc": "9260:26:12",
															"nodeType": "YulAssignment",
															"src": "9260:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9272:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9272:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9283:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9283:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9268:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9268:3:12"
																},
																"nativeSrc": "9268:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9268:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9260:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9260:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9307:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9307:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9318:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9318:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9303:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9303:3:12"
																		},
																		"nativeSrc": "9303:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9303:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9326:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9326:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9332:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9332:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9322:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:12"
																		},
																		"nativeSrc": "9322:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9296:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9296:6:12"
																},
																"nativeSrc": "9296:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9296:47:12"
															},
															"nativeSrc": "9296:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9296:47:12"
														},
														{
															"nativeSrc": "9352:139:12",
															"nodeType": "YulAssignment",
															"src": "9352:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9486:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9486:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9360:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9360:124:12"
																},
																"nativeSrc": "9360:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9360:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9352:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9352:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9079:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9230:9:12",
														"nodeType": "YulTypedName",
														"src": "9230:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9245:4:12",
														"nodeType": "YulTypedName",
														"src": "9245:4:12",
														"type": ""
													}
												],
												"src": "9079:419:12"
											},
											{
												"body": {
													"nativeSrc": "9630:206:12",
													"nodeType": "YulBlock",
													"src": "9630:206:12",
													"statements": [
														{
															"nativeSrc": "9640:26:12",
															"nodeType": "YulAssignment",
															"src": "9640:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9652:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9652:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9663:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9663:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9648:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9648:3:12"
																},
																"nativeSrc": "9648:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9648:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9640:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9640:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9720:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9720:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9733:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9733:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9744:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9744:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9729:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9729:3:12"
																		},
																		"nativeSrc": "9729:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9729:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9676:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9676:43:12"
																},
																"nativeSrc": "9676:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9676:71:12"
															},
															"nativeSrc": "9676:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9676:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9801:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9801:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9814:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9814:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9825:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9825:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9810:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9810:3:12"
																		},
																		"nativeSrc": "9810:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9810:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9757:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9757:43:12"
																},
																"nativeSrc": "9757:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9757:72:12"
															},
															"nativeSrc": "9757:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9757:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9504:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9594:9:12",
														"nodeType": "YulTypedName",
														"src": "9594:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9606:6:12",
														"nodeType": "YulTypedName",
														"src": "9606:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9614:6:12",
														"nodeType": "YulTypedName",
														"src": "9614:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9625:4:12",
														"nodeType": "YulTypedName",
														"src": "9625:4:12",
														"type": ""
													}
												],
												"src": "9504:332:12"
											},
											{
												"body": {
													"nativeSrc": "9905:80:12",
													"nodeType": "YulBlock",
													"src": "9905:80:12",
													"statements": [
														{
															"nativeSrc": "9915:22:12",
															"nodeType": "YulAssignment",
															"src": "9915:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9930:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9930:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9924:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9924:5:12"
																},
																"nativeSrc": "9924:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9924:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9915:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "9915:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9973:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9973:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9946:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "9946:26:12"
																},
																"nativeSrc": "9946:33:12",
																"nodeType": "YulFunctionCall",
																"src": "9946:33:12"
															},
															"nativeSrc": "9946:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "9946:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "9842:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9883:6:12",
														"nodeType": "YulTypedName",
														"src": "9883:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9891:3:12",
														"nodeType": "YulTypedName",
														"src": "9891:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9899:5:12",
														"nodeType": "YulTypedName",
														"src": "9899:5:12",
														"type": ""
													}
												],
												"src": "9842:143:12"
											},
											{
												"body": {
													"nativeSrc": "10068:274:12",
													"nodeType": "YulBlock",
													"src": "10068:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10114:83:12",
																"nodeType": "YulBlock",
																"src": "10114:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10116:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10116:77:12"
																			},
																			"nativeSrc": "10116:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10116:79:12"
																		},
																		"nativeSrc": "10116:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10116:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10089:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10089:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10098:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10098:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10085:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10085:3:12"
																		},
																		"nativeSrc": "10085:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10085:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10110:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10110:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10081:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:12"
																},
																"nativeSrc": "10081:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10081:32:12"
															},
															"nativeSrc": "10078:119:12",
															"nodeType": "YulIf",
															"src": "10078:119:12"
														},
														{
															"nativeSrc": "10207:128:12",
															"nodeType": "YulBlock",
															"src": "10207:128:12",
															"statements": [
																{
																	"nativeSrc": "10222:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10222:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10236:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10236:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10226:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10226:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10251:74:12",
																	"nodeType": "YulAssignment",
																	"src": "10251:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10297:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10297:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10308:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10308:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10293:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10293:3:12"
																				},
																				"nativeSrc": "10293:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10293:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10317:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10317:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10261:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "10261:31:12"
																		},
																		"nativeSrc": "10261:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10261:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10251:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10251:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9991:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10038:9:12",
														"nodeType": "YulTypedName",
														"src": "10038:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10049:7:12",
														"nodeType": "YulTypedName",
														"src": "10049:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10061:6:12",
														"nodeType": "YulTypedName",
														"src": "10061:6:12",
														"type": ""
													}
												],
												"src": "9991:351:12"
											},
											{
												"body": {
													"nativeSrc": "10454:64:12",
													"nodeType": "YulBlock",
													"src": "10454:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10476:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10476:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10484:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10484:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10472:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10472:3:12"
																		},
																		"nativeSrc": "10472:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10472:14:12"
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "10488:22:12",
																		"nodeType": "YulLiteral",
																		"src": "10488:22:12",
																		"type": "",
																		"value": "insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10465:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10465:6:12"
																},
																"nativeSrc": "10465:46:12",
																"nodeType": "YulFunctionCall",
																"src": "10465:46:12"
															},
															"nativeSrc": "10465:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "10465:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
												"nativeSrc": "10348:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10446:6:12",
														"nodeType": "YulTypedName",
														"src": "10446:6:12",
														"type": ""
													}
												],
												"src": "10348:170:12"
											},
											{
												"body": {
													"nativeSrc": "10670:220:12",
													"nodeType": "YulBlock",
													"src": "10670:220:12",
													"statements": [
														{
															"nativeSrc": "10680:74:12",
															"nodeType": "YulAssignment",
															"src": "10680:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10746:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10746:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10751:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10751:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10687:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10687:58:12"
																},
																"nativeSrc": "10687:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10687:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10680:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10680:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10852:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10852:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																	"nativeSrc": "10763:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10763:88:12"
																},
																"nativeSrc": "10763:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10763:93:12"
															},
															"nativeSrc": "10763:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10763:93:12"
														},
														{
															"nativeSrc": "10865:19:12",
															"nodeType": "YulAssignment",
															"src": "10865:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10876:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10876:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10881:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10881:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:12"
																},
																"nativeSrc": "10872:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10872:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10865:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10865:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10524:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10658:3:12",
														"nodeType": "YulTypedName",
														"src": "10658:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10666:3:12",
														"nodeType": "YulTypedName",
														"src": "10666:3:12",
														"type": ""
													}
												],
												"src": "10524:366:12"
											},
											{
												"body": {
													"nativeSrc": "11067:248:12",
													"nodeType": "YulBlock",
													"src": "11067:248:12",
													"statements": [
														{
															"nativeSrc": "11077:26:12",
															"nodeType": "YulAssignment",
															"src": "11077:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11089:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11089:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11100:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11100:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11085:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11085:3:12"
																},
																"nativeSrc": "11085:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11085:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11077:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11077:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11124:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11124:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11135:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11135:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11120:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11120:3:12"
																		},
																		"nativeSrc": "11120:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11120:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11143:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11143:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11149:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11149:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11139:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11139:3:12"
																		},
																		"nativeSrc": "11139:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11139:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11113:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11113:6:12"
																},
																"nativeSrc": "11113:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11113:47:12"
															},
															"nativeSrc": "11113:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11113:47:12"
														},
														{
															"nativeSrc": "11169:139:12",
															"nodeType": "YulAssignment",
															"src": "11169:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11303:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11303:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11177:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11177:124:12"
																},
																"nativeSrc": "11177:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11177:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11169:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11169:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10896:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11047:9:12",
														"nodeType": "YulTypedName",
														"src": "11047:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11062:4:12",
														"nodeType": "YulTypedName",
														"src": "11062:4:12",
														"type": ""
													}
												],
												"src": "10896:419:12"
											},
											{
												"body": {
													"nativeSrc": "11447:206:12",
													"nodeType": "YulBlock",
													"src": "11447:206:12",
													"statements": [
														{
															"nativeSrc": "11457:26:12",
															"nodeType": "YulAssignment",
															"src": "11457:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11469:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11469:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11480:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11480:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11465:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11465:3:12"
																},
																"nativeSrc": "11465:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11465:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11457:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11457:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11537:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11537:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11550:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11550:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11561:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11561:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11546:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11546:3:12"
																		},
																		"nativeSrc": "11546:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11546:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11493:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11493:43:12"
																},
																"nativeSrc": "11493:71:12",
																"nodeType": "YulFunctionCall",
																"src": "11493:71:12"
															},
															"nativeSrc": "11493:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "11493:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11618:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11618:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11631:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11631:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11642:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11642:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11627:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11627:3:12"
																		},
																		"nativeSrc": "11627:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11627:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11574:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11574:43:12"
																},
																"nativeSrc": "11574:72:12",
																"nodeType": "YulFunctionCall",
																"src": "11574:72:12"
															},
															"nativeSrc": "11574:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "11574:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "11321:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11411:9:12",
														"nodeType": "YulTypedName",
														"src": "11411:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11423:6:12",
														"nodeType": "YulTypedName",
														"src": "11423:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11431:6:12",
														"nodeType": "YulTypedName",
														"src": "11431:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11442:4:12",
														"nodeType": "YulTypedName",
														"src": "11442:4:12",
														"type": ""
													}
												],
												"src": "11321:332:12"
											},
											{
												"body": {
													"nativeSrc": "11719:77:12",
													"nodeType": "YulBlock",
													"src": "11719:77:12",
													"statements": [
														{
															"nativeSrc": "11729:22:12",
															"nodeType": "YulAssignment",
															"src": "11729:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11744:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11744:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11738:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11738:5:12"
																},
																"nativeSrc": "11738:13:12",
																"nodeType": "YulFunctionCall",
																"src": "11738:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11729:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "11729:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11784:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11784:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11760:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "11760:23:12"
																},
																"nativeSrc": "11760:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11760:30:12"
															},
															"nativeSrc": "11760:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11760:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11659:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11697:6:12",
														"nodeType": "YulTypedName",
														"src": "11697:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11705:3:12",
														"nodeType": "YulTypedName",
														"src": "11705:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11713:5:12",
														"nodeType": "YulTypedName",
														"src": "11713:5:12",
														"type": ""
													}
												],
												"src": "11659:137:12"
											},
											{
												"body": {
													"nativeSrc": "11876:271:12",
													"nodeType": "YulBlock",
													"src": "11876:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11922:83:12",
																"nodeType": "YulBlock",
																"src": "11922:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11924:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11924:77:12"
																			},
																			"nativeSrc": "11924:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11924:79:12"
																		},
																		"nativeSrc": "11924:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11924:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11897:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11897:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11906:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11906:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11893:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11893:3:12"
																		},
																		"nativeSrc": "11893:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11893:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11918:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11918:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11889:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11889:3:12"
																},
																"nativeSrc": "11889:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11889:32:12"
															},
															"nativeSrc": "11886:119:12",
															"nodeType": "YulIf",
															"src": "11886:119:12"
														},
														{
															"nativeSrc": "12015:125:12",
															"nodeType": "YulBlock",
															"src": "12015:125:12",
															"statements": [
																{
																	"nativeSrc": "12030:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12030:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12044:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12044:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12034:6:12",
																			"nodeType": "YulTypedName",
																			"src": "12034:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12059:71:12",
																	"nodeType": "YulAssignment",
																	"src": "12059:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12102:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "12102:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12113:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "12113:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12098:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12098:3:12"
																				},
																				"nativeSrc": "12098:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12098:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12122:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "12122:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12069:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "12069:28:12"
																		},
																		"nativeSrc": "12069:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12069:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12059:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "12059:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11802:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11846:9:12",
														"nodeType": "YulTypedName",
														"src": "11846:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11857:7:12",
														"nodeType": "YulTypedName",
														"src": "11857:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11869:6:12",
														"nodeType": "YulTypedName",
														"src": "11869:6:12",
														"type": ""
													}
												],
												"src": "11802:345:12"
											},
											{
												"body": {
													"nativeSrc": "12259:56:12",
													"nodeType": "YulBlock",
													"src": "12259:56:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12281:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12281:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12289:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12289:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12277:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12277:3:12"
																		},
																		"nativeSrc": "12277:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12277:14:12"
																	},
																	{
																		"hexValue": "6e6f7420617070726f766564",
																		"kind": "string",
																		"nativeSrc": "12293:14:12",
																		"nodeType": "YulLiteral",
																		"src": "12293:14:12",
																		"type": "",
																		"value": "not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12270:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12270:6:12"
																},
																"nativeSrc": "12270:38:12",
																"nodeType": "YulFunctionCall",
																"src": "12270:38:12"
															},
															"nativeSrc": "12270:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "12270:38:12"
														}
													]
												},
												"name": "store_literal_in_memory_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16",
												"nativeSrc": "12153:162:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12251:6:12",
														"nodeType": "YulTypedName",
														"src": "12251:6:12",
														"type": ""
													}
												],
												"src": "12153:162:12"
											},
											{
												"body": {
													"nativeSrc": "12467:220:12",
													"nodeType": "YulBlock",
													"src": "12467:220:12",
													"statements": [
														{
															"nativeSrc": "12477:74:12",
															"nodeType": "YulAssignment",
															"src": "12477:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12543:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12543:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12548:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12548:2:12",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12484:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12484:58:12"
																},
																"nativeSrc": "12484:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12484:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12477:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12477:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12649:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12649:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16",
																	"nativeSrc": "12560:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12560:88:12"
																},
																"nativeSrc": "12560:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12560:93:12"
															},
															"nativeSrc": "12560:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12560:93:12"
														},
														{
															"nativeSrc": "12662:19:12",
															"nodeType": "YulAssignment",
															"src": "12662:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12673:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12673:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12678:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12678:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12669:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12669:3:12"
																},
																"nativeSrc": "12669:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12669:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12662:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12662:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12321:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12455:3:12",
														"nodeType": "YulTypedName",
														"src": "12455:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12463:3:12",
														"nodeType": "YulTypedName",
														"src": "12463:3:12",
														"type": ""
													}
												],
												"src": "12321:366:12"
											},
											{
												"body": {
													"nativeSrc": "12864:248:12",
													"nodeType": "YulBlock",
													"src": "12864:248:12",
													"statements": [
														{
															"nativeSrc": "12874:26:12",
															"nodeType": "YulAssignment",
															"src": "12874:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12886:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12886:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12897:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12897:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12882:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12882:3:12"
																},
																"nativeSrc": "12882:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12882:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12874:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12874:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12921:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12921:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12932:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12932:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12917:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12917:3:12"
																		},
																		"nativeSrc": "12917:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12917:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12940:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12940:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12946:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12946:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12936:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12936:3:12"
																		},
																		"nativeSrc": "12936:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12936:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12910:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12910:6:12"
																},
																"nativeSrc": "12910:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12910:47:12"
															},
															"nativeSrc": "12910:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12910:47:12"
														},
														{
															"nativeSrc": "12966:139:12",
															"nodeType": "YulAssignment",
															"src": "12966:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13100:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13100:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12974:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12974:124:12"
																},
																"nativeSrc": "12974:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12974:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12966:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12966:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12693:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12844:9:12",
														"nodeType": "YulTypedName",
														"src": "12844:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12859:4:12",
														"nodeType": "YulTypedName",
														"src": "12859:4:12",
														"type": ""
													}
												],
												"src": "12693:419:12"
											},
											{
												"body": {
													"nativeSrc": "13224:71:12",
													"nodeType": "YulBlock",
													"src": "13224:71:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13246:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13246:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13254:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13254:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13242:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13242:3:12"
																		},
																		"nativeSrc": "13242:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13242:14:12"
																	},
																	{
																		"hexValue": "616d6f756e74206d757374206265203120666f7220455243373231",
																		"kind": "string",
																		"nativeSrc": "13258:29:12",
																		"nodeType": "YulLiteral",
																		"src": "13258:29:12",
																		"type": "",
																		"value": "amount must be 1 for ERC721"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13235:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13235:6:12"
																},
																"nativeSrc": "13235:53:12",
																"nodeType": "YulFunctionCall",
																"src": "13235:53:12"
															},
															"nativeSrc": "13235:53:12",
															"nodeType": "YulExpressionStatement",
															"src": "13235:53:12"
														}
													]
												},
												"name": "store_literal_in_memory_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862",
												"nativeSrc": "13118:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13216:6:12",
														"nodeType": "YulTypedName",
														"src": "13216:6:12",
														"type": ""
													}
												],
												"src": "13118:177:12"
											},
											{
												"body": {
													"nativeSrc": "13447:220:12",
													"nodeType": "YulBlock",
													"src": "13447:220:12",
													"statements": [
														{
															"nativeSrc": "13457:74:12",
															"nodeType": "YulAssignment",
															"src": "13457:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13523:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13523:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13528:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13528:2:12",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13464:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13464:58:12"
																},
																"nativeSrc": "13464:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13464:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13457:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13629:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13629:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862",
																	"nativeSrc": "13540:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13540:88:12"
																},
																"nativeSrc": "13540:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13540:93:12"
															},
															"nativeSrc": "13540:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13540:93:12"
														},
														{
															"nativeSrc": "13642:19:12",
															"nodeType": "YulAssignment",
															"src": "13642:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13653:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13653:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13658:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13658:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13649:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13649:3:12"
																},
																"nativeSrc": "13649:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13649:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13642:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13642:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13301:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13435:3:12",
														"nodeType": "YulTypedName",
														"src": "13435:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13443:3:12",
														"nodeType": "YulTypedName",
														"src": "13443:3:12",
														"type": ""
													}
												],
												"src": "13301:366:12"
											},
											{
												"body": {
													"nativeSrc": "13844:248:12",
													"nodeType": "YulBlock",
													"src": "13844:248:12",
													"statements": [
														{
															"nativeSrc": "13854:26:12",
															"nodeType": "YulAssignment",
															"src": "13854:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13866:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13866:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13877:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13877:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13862:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13862:3:12"
																},
																"nativeSrc": "13862:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13862:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13854:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13854:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13901:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13901:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13912:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13912:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13897:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13897:3:12"
																		},
																		"nativeSrc": "13897:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13897:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13920:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13920:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13926:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13916:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13916:3:12"
																		},
																		"nativeSrc": "13916:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13916:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13890:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13890:6:12"
																},
																"nativeSrc": "13890:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13890:47:12"
															},
															"nativeSrc": "13890:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13890:47:12"
														},
														{
															"nativeSrc": "13946:139:12",
															"nodeType": "YulAssignment",
															"src": "13946:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14080:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14080:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13954:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13954:124:12"
																},
																"nativeSrc": "13954:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13954:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13946:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13946:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13673:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13824:9:12",
														"nodeType": "YulTypedName",
														"src": "13824:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13839:4:12",
														"nodeType": "YulTypedName",
														"src": "13839:4:12",
														"type": ""
													}
												],
												"src": "13673:419:12"
											},
											{
												"body": {
													"nativeSrc": "14161:80:12",
													"nodeType": "YulBlock",
													"src": "14161:80:12",
													"statements": [
														{
															"nativeSrc": "14171:22:12",
															"nodeType": "YulAssignment",
															"src": "14171:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14186:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14186:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14180:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "14180:5:12"
																},
																"nativeSrc": "14180:13:12",
																"nodeType": "YulFunctionCall",
																"src": "14180:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14171:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "14171:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14229:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "14229:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "14202:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "14202:26:12"
																},
																"nativeSrc": "14202:33:12",
																"nodeType": "YulFunctionCall",
																"src": "14202:33:12"
															},
															"nativeSrc": "14202:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "14202:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "14098:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14139:6:12",
														"nodeType": "YulTypedName",
														"src": "14139:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14147:3:12",
														"nodeType": "YulTypedName",
														"src": "14147:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14155:5:12",
														"nodeType": "YulTypedName",
														"src": "14155:5:12",
														"type": ""
													}
												],
												"src": "14098:143:12"
											},
											{
												"body": {
													"nativeSrc": "14324:274:12",
													"nodeType": "YulBlock",
													"src": "14324:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "14370:83:12",
																"nodeType": "YulBlock",
																"src": "14370:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14372:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "14372:77:12"
																			},
																			"nativeSrc": "14372:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14372:79:12"
																		},
																		"nativeSrc": "14372:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14372:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14345:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14345:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14354:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14354:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14341:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14341:3:12"
																		},
																		"nativeSrc": "14341:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14341:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14366:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14366:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14337:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14337:3:12"
																},
																"nativeSrc": "14337:32:12",
																"nodeType": "YulFunctionCall",
																"src": "14337:32:12"
															},
															"nativeSrc": "14334:119:12",
															"nodeType": "YulIf",
															"src": "14334:119:12"
														},
														{
															"nativeSrc": "14463:128:12",
															"nodeType": "YulBlock",
															"src": "14463:128:12",
															"statements": [
																{
																	"nativeSrc": "14478:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14478:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14492:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14492:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14482:6:12",
																			"nodeType": "YulTypedName",
																			"src": "14482:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14507:74:12",
																	"nodeType": "YulAssignment",
																	"src": "14507:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14553:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "14553:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14564:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "14564:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14549:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "14549:3:12"
																				},
																				"nativeSrc": "14549:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "14549:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14573:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "14573:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "14517:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "14517:31:12"
																		},
																		"nativeSrc": "14517:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14517:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14507:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "14507:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14247:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14294:9:12",
														"nodeType": "YulTypedName",
														"src": "14294:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14305:7:12",
														"nodeType": "YulTypedName",
														"src": "14305:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14317:6:12",
														"nodeType": "YulTypedName",
														"src": "14317:6:12",
														"type": ""
													}
												],
												"src": "14247:351:12"
											},
											{
												"body": {
													"nativeSrc": "14710:53:12",
													"nodeType": "YulBlock",
													"src": "14710:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14732:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14732:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14740:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14740:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14728:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14728:3:12"
																		},
																		"nativeSrc": "14728:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14728:14:12"
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "14744:11:12",
																		"nodeType": "YulLiteral",
																		"src": "14744:11:12",
																		"type": "",
																		"value": "not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14721:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14721:6:12"
																},
																"nativeSrc": "14721:35:12",
																"nodeType": "YulFunctionCall",
																"src": "14721:35:12"
															},
															"nativeSrc": "14721:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "14721:35:12"
														}
													]
												},
												"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
												"nativeSrc": "14604:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14702:6:12",
														"nodeType": "YulTypedName",
														"src": "14702:6:12",
														"type": ""
													}
												],
												"src": "14604:159:12"
											},
											{
												"body": {
													"nativeSrc": "14915:219:12",
													"nodeType": "YulBlock",
													"src": "14915:219:12",
													"statements": [
														{
															"nativeSrc": "14925:73:12",
															"nodeType": "YulAssignment",
															"src": "14925:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14991:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14991:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14996:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14996:1:12",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14932:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14932:58:12"
																},
																"nativeSrc": "14932:66:12",
																"nodeType": "YulFunctionCall",
																"src": "14932:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14925:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14925:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15096:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15096:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																	"nativeSrc": "15007:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15007:88:12"
																},
																"nativeSrc": "15007:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15007:93:12"
															},
															"nativeSrc": "15007:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15007:93:12"
														},
														{
															"nativeSrc": "15109:19:12",
															"nodeType": "YulAssignment",
															"src": "15109:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15120:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15120:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15125:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15125:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15116:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15116:3:12"
																},
																"nativeSrc": "15116:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15116:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15109:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15109:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14769:365:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14903:3:12",
														"nodeType": "YulTypedName",
														"src": "14903:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14911:3:12",
														"nodeType": "YulTypedName",
														"src": "14911:3:12",
														"type": ""
													}
												],
												"src": "14769:365:12"
											},
											{
												"body": {
													"nativeSrc": "15311:248:12",
													"nodeType": "YulBlock",
													"src": "15311:248:12",
													"statements": [
														{
															"nativeSrc": "15321:26:12",
															"nodeType": "YulAssignment",
															"src": "15321:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15333:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15333:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15344:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15344:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15329:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15329:3:12"
																},
																"nativeSrc": "15329:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15329:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15321:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15321:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15368:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15368:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15379:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15379:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15364:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15364:3:12"
																		},
																		"nativeSrc": "15364:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15364:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15387:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15387:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15393:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15393:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15383:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15383:3:12"
																		},
																		"nativeSrc": "15383:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15383:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15357:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15357:6:12"
																},
																"nativeSrc": "15357:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15357:47:12"
															},
															"nativeSrc": "15357:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15357:47:12"
														},
														{
															"nativeSrc": "15413:139:12",
															"nodeType": "YulAssignment",
															"src": "15413:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15547:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15547:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15421:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15421:124:12"
																},
																"nativeSrc": "15421:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15421:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15413:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15413:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15140:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15291:9:12",
														"nodeType": "YulTypedName",
														"src": "15291:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15306:4:12",
														"nodeType": "YulTypedName",
														"src": "15306:4:12",
														"type": ""
													}
												],
												"src": "15140:419:12"
											},
											{
												"body": {
													"nativeSrc": "15593:152:12",
													"nodeType": "YulBlock",
													"src": "15593:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15610:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15610:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15613:77:12",
																		"nodeType": "YulLiteral",
																		"src": "15613:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15603:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15603:6:12"
																},
																"nativeSrc": "15603:88:12",
																"nodeType": "YulFunctionCall",
																"src": "15603:88:12"
															},
															"nativeSrc": "15603:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "15603:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15707:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15707:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15710:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15710:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15700:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15700:6:12"
																},
																"nativeSrc": "15700:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15700:15:12"
															},
															"nativeSrc": "15700:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15700:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15731:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15731:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15734:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15734:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15724:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15724:6:12"
																},
																"nativeSrc": "15724:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15724:15:12"
															},
															"nativeSrc": "15724:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15724:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15565:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "15565:180:12"
											},
											{
												"body": {
													"nativeSrc": "15794:190:12",
													"nodeType": "YulBlock",
													"src": "15794:190:12",
													"statements": [
														{
															"nativeSrc": "15804:33:12",
															"nodeType": "YulAssignment",
															"src": "15804:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15831:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15831:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15813:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15813:17:12"
																},
																"nativeSrc": "15813:24:12",
																"nodeType": "YulFunctionCall",
																"src": "15813:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15804:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "15804:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15927:22:12",
																"nodeType": "YulBlock",
																"src": "15927:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15929:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15929:16:12"
																			},
																			"nativeSrc": "15929:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15929:18:12"
																		},
																		"nativeSrc": "15929:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15929:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15852:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15852:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15859:66:12",
																		"nodeType": "YulLiteral",
																		"src": "15859:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15849:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15849:2:12"
																},
																"nativeSrc": "15849:77:12",
																"nodeType": "YulFunctionCall",
																"src": "15849:77:12"
															},
															"nativeSrc": "15846:103:12",
															"nodeType": "YulIf",
															"src": "15846:103:12"
														},
														{
															"nativeSrc": "15958:20:12",
															"nodeType": "YulAssignment",
															"src": "15958:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15969:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15969:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15976:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15976:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15965:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15965:3:12"
																},
																"nativeSrc": "15965:13:12",
																"nodeType": "YulFunctionCall",
																"src": "15965:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15958:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15958:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "15751:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15780:5:12",
														"nodeType": "YulTypedName",
														"src": "15780:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "15790:3:12",
														"nodeType": "YulTypedName",
														"src": "15790:3:12",
														"type": ""
													}
												],
												"src": "15751:233:12"
											},
											{
												"body": {
													"nativeSrc": "16166:365:12",
													"nodeType": "YulBlock",
													"src": "16166:365:12",
													"statements": [
														{
															"nativeSrc": "16176:27:12",
															"nodeType": "YulAssignment",
															"src": "16176:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16188:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16188:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16199:3:12",
																		"nodeType": "YulLiteral",
																		"src": "16199:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16184:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16184:3:12"
																},
																"nativeSrc": "16184:19:12",
																"nodeType": "YulFunctionCall",
																"src": "16184:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16176:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16176:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16257:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16257:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16270:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16270:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16281:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16281:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16266:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16266:3:12"
																		},
																		"nativeSrc": "16266:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16266:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16213:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16213:43:12"
																},
																"nativeSrc": "16213:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16213:71:12"
															},
															"nativeSrc": "16213:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16213:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16338:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16338:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16351:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16351:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16362:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16362:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16347:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16347:3:12"
																		},
																		"nativeSrc": "16347:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16347:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16294:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16294:43:12"
																},
																"nativeSrc": "16294:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16294:72:12"
															},
															"nativeSrc": "16294:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16294:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16420:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16420:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16433:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16433:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16444:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16444:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16429:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16429:3:12"
																		},
																		"nativeSrc": "16429:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16429:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16376:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16376:43:12"
																},
																"nativeSrc": "16376:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16376:72:12"
															},
															"nativeSrc": "16376:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16376:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16496:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16496:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16509:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16509:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16520:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16520:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16505:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16505:3:12"
																		},
																		"nativeSrc": "16505:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16505:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "16458:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "16458:37:12"
																},
																"nativeSrc": "16458:66:12",
																"nodeType": "YulFunctionCall",
																"src": "16458:66:12"
															},
															"nativeSrc": "16458:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "16458:66:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "15990:541:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16114:9:12",
														"nodeType": "YulTypedName",
														"src": "16114:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16126:6:12",
														"nodeType": "YulTypedName",
														"src": "16126:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16134:6:12",
														"nodeType": "YulTypedName",
														"src": "16134:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16142:6:12",
														"nodeType": "YulTypedName",
														"src": "16142:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16150:6:12",
														"nodeType": "YulTypedName",
														"src": "16150:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16161:4:12",
														"nodeType": "YulTypedName",
														"src": "16161:4:12",
														"type": ""
													}
												],
												"src": "15990:541:12"
											},
											{
												"body": {
													"nativeSrc": "16643:60:12",
													"nodeType": "YulBlock",
													"src": "16643:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16665:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16665:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16673:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16673:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16661:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16661:3:12"
																		},
																		"nativeSrc": "16661:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16661:14:12"
																	},
																	{
																		"hexValue": "6c697374696e6720696e616374697665",
																		"kind": "string",
																		"nativeSrc": "16677:18:12",
																		"nodeType": "YulLiteral",
																		"src": "16677:18:12",
																		"type": "",
																		"value": "listing inactive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16654:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16654:6:12"
																},
																"nativeSrc": "16654:42:12",
																"nodeType": "YulFunctionCall",
																"src": "16654:42:12"
															},
															"nativeSrc": "16654:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "16654:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27",
												"nativeSrc": "16537:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16635:6:12",
														"nodeType": "YulTypedName",
														"src": "16635:6:12",
														"type": ""
													}
												],
												"src": "16537:166:12"
											},
											{
												"body": {
													"nativeSrc": "16855:220:12",
													"nodeType": "YulBlock",
													"src": "16855:220:12",
													"statements": [
														{
															"nativeSrc": "16865:74:12",
															"nodeType": "YulAssignment",
															"src": "16865:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16931:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16931:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16936:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16936:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16872:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16872:58:12"
																},
																"nativeSrc": "16872:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16872:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16865:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16865:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17037:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17037:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27",
																	"nativeSrc": "16948:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16948:88:12"
																},
																"nativeSrc": "16948:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16948:93:12"
															},
															"nativeSrc": "16948:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16948:93:12"
														},
														{
															"nativeSrc": "17050:19:12",
															"nodeType": "YulAssignment",
															"src": "17050:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17061:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17061:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17066:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17066:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17057:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17057:3:12"
																},
																"nativeSrc": "17057:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17057:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17050:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17050:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16709:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16843:3:12",
														"nodeType": "YulTypedName",
														"src": "16843:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16851:3:12",
														"nodeType": "YulTypedName",
														"src": "16851:3:12",
														"type": ""
													}
												],
												"src": "16709:366:12"
											},
											{
												"body": {
													"nativeSrc": "17252:248:12",
													"nodeType": "YulBlock",
													"src": "17252:248:12",
													"statements": [
														{
															"nativeSrc": "17262:26:12",
															"nodeType": "YulAssignment",
															"src": "17262:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17274:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17274:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17285:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17285:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17270:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17270:3:12"
																},
																"nativeSrc": "17270:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17270:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17262:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17262:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17309:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17309:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17320:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17320:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17305:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17305:3:12"
																		},
																		"nativeSrc": "17305:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17305:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17328:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17328:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17334:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17334:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17324:3:12"
																		},
																		"nativeSrc": "17324:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17324:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17298:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17298:6:12"
																},
																"nativeSrc": "17298:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17298:47:12"
															},
															"nativeSrc": "17298:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17298:47:12"
														},
														{
															"nativeSrc": "17354:139:12",
															"nodeType": "YulAssignment",
															"src": "17354:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17488:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17488:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17362:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17362:124:12"
																},
																"nativeSrc": "17362:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17362:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17354:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17354:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17081:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17232:9:12",
														"nodeType": "YulTypedName",
														"src": "17232:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17247:4:12",
														"nodeType": "YulTypedName",
														"src": "17247:4:12",
														"type": ""
													}
												],
												"src": "17081:419:12"
											},
											{
												"body": {
													"nativeSrc": "17554:362:12",
													"nodeType": "YulBlock",
													"src": "17554:362:12",
													"statements": [
														{
															"nativeSrc": "17564:25:12",
															"nodeType": "YulAssignment",
															"src": "17564:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17587:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17587:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17569:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17569:17:12"
																},
																"nativeSrc": "17569:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17569:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17564:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17564:1:12"
																}
															]
														},
														{
															"nativeSrc": "17598:25:12",
															"nodeType": "YulAssignment",
															"src": "17598:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17621:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17621:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17603:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17603:17:12"
																},
																"nativeSrc": "17603:20:12",
																"nodeType": "YulFunctionCall",
																"src": "17603:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17598:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "17598:1:12"
																}
															]
														},
														{
															"nativeSrc": "17632:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "17632:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17655:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17655:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17658:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "17658:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17651:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17651:3:12"
																},
																"nativeSrc": "17651:9:12",
																"nodeType": "YulFunctionCall",
																"src": "17651:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "17636:11:12",
																	"nodeType": "YulTypedName",
																	"src": "17636:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17669:41:12",
															"nodeType": "YulAssignment",
															"src": "17669:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17698:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "17698:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17680:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17680:17:12"
																},
																"nativeSrc": "17680:30:12",
																"nodeType": "YulFunctionCall",
																"src": "17680:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17669:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "17669:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17887:22:12",
																"nodeType": "YulBlock",
																"src": "17887:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17889:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17889:16:12"
																			},
																			"nativeSrc": "17889:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17889:18:12"
																		},
																		"nativeSrc": "17889:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17889:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "17820:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "17820:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17813:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "17813:6:12"
																				},
																				"nativeSrc": "17813:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17813:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "17843:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "17843:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "17850:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "17850:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "17859:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "17859:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "17846:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "17846:3:12"
																						},
																						"nativeSrc": "17846:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "17846:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "17840:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "17840:2:12"
																				},
																				"nativeSrc": "17840:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17840:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17793:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "17793:2:12"
																		},
																		"nativeSrc": "17793:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17793:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17773:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17773:6:12"
																},
																"nativeSrc": "17773:113:12",
																"nodeType": "YulFunctionCall",
																"src": "17773:113:12"
															},
															"nativeSrc": "17770:139:12",
															"nodeType": "YulIf",
															"src": "17770:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "17506:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17537:1:12",
														"nodeType": "YulTypedName",
														"src": "17537:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17540:1:12",
														"nodeType": "YulTypedName",
														"src": "17540:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "17546:7:12",
														"nodeType": "YulTypedName",
														"src": "17546:7:12",
														"type": ""
													}
												],
												"src": "17506:410:12"
											},
											{
												"body": {
													"nativeSrc": "17950:152:12",
													"nodeType": "YulBlock",
													"src": "17950:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17967:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17967:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17970:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17970:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17960:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17960:6:12"
																},
																"nativeSrc": "17960:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17960:88:12"
															},
															"nativeSrc": "17960:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17960:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18064:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18064:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18067:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18067:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18057:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18057:6:12"
																},
																"nativeSrc": "18057:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18057:15:12"
															},
															"nativeSrc": "18057:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18057:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18088:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18088:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18091:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18091:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18081:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18081:6:12"
																},
																"nativeSrc": "18081:15:12",
																"nodeType": "YulFunctionCall",
																"src": "18081:15:12"
															},
															"nativeSrc": "18081:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "18081:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17922:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17922:180:12"
											},
											{
												"body": {
													"nativeSrc": "18150:143:12",
													"nodeType": "YulBlock",
													"src": "18150:143:12",
													"statements": [
														{
															"nativeSrc": "18160:25:12",
															"nodeType": "YulAssignment",
															"src": "18160:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18183:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18183:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18165:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18165:17:12"
																},
																"nativeSrc": "18165:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18165:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18160:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18160:1:12"
																}
															]
														},
														{
															"nativeSrc": "18194:25:12",
															"nodeType": "YulAssignment",
															"src": "18194:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18217:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18217:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18199:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18199:17:12"
																},
																"nativeSrc": "18199:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18199:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18194:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18194:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18241:22:12",
																"nodeType": "YulBlock",
																"src": "18241:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "18243:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "18243:16:12"
																			},
																			"nativeSrc": "18243:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18243:18:12"
																		},
																		"nativeSrc": "18243:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18243:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18238:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18238:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18231:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18231:6:12"
																},
																"nativeSrc": "18231:9:12",
																"nodeType": "YulFunctionCall",
																"src": "18231:9:12"
															},
															"nativeSrc": "18228:35:12",
															"nodeType": "YulIf",
															"src": "18228:35:12"
														},
														{
															"nativeSrc": "18273:14:12",
															"nodeType": "YulAssignment",
															"src": "18273:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18282:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18282:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18285:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18285:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "18278:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18278:3:12"
																},
																"nativeSrc": "18278:9:12",
																"nodeType": "YulFunctionCall",
																"src": "18278:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "18273:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18273:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "18108:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18139:1:12",
														"nodeType": "YulTypedName",
														"src": "18139:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18142:1:12",
														"nodeType": "YulTypedName",
														"src": "18142:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "18148:1:12",
														"nodeType": "YulTypedName",
														"src": "18148:1:12",
														"type": ""
													}
												],
												"src": "18108:185:12"
											},
											{
												"body": {
													"nativeSrc": "18344:149:12",
													"nodeType": "YulBlock",
													"src": "18344:149:12",
													"statements": [
														{
															"nativeSrc": "18354:25:12",
															"nodeType": "YulAssignment",
															"src": "18354:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18377:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18377:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18359:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18359:17:12"
																},
																"nativeSrc": "18359:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18359:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18354:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18354:1:12"
																}
															]
														},
														{
															"nativeSrc": "18388:25:12",
															"nodeType": "YulAssignment",
															"src": "18388:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18411:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18411:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18393:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18393:17:12"
																},
																"nativeSrc": "18393:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18393:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18388:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18388:1:12"
																}
															]
														},
														{
															"nativeSrc": "18422:17:12",
															"nodeType": "YulAssignment",
															"src": "18422:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18434:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18434:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18437:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18437:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18430:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18430:3:12"
																},
																"nativeSrc": "18430:9:12",
																"nodeType": "YulFunctionCall",
																"src": "18430:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18422:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18422:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18464:22:12",
																"nodeType": "YulBlock",
																"src": "18464:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18466:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "18466:16:12"
																			},
																			"nativeSrc": "18466:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "18466:18:12"
																		},
																		"nativeSrc": "18466:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "18466:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18455:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18455:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18461:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18461:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18452:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "18452:2:12"
																},
																"nativeSrc": "18452:11:12",
																"nodeType": "YulFunctionCall",
																"src": "18452:11:12"
															},
															"nativeSrc": "18449:37:12",
															"nodeType": "YulIf",
															"src": "18449:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "18299:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18330:1:12",
														"nodeType": "YulTypedName",
														"src": "18330:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18333:1:12",
														"nodeType": "YulTypedName",
														"src": "18333:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18339:4:12",
														"nodeType": "YulTypedName",
														"src": "18339:4:12",
														"type": ""
													}
												],
												"src": "18299:194:12"
											},
											{
												"body": {
													"nativeSrc": "18594:73:12",
													"nodeType": "YulBlock",
													"src": "18594:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18611:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18611:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18616:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18616:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18604:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18604:6:12"
																},
																"nativeSrc": "18604:19:12",
																"nodeType": "YulFunctionCall",
																"src": "18604:19:12"
															},
															"nativeSrc": "18604:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "18604:19:12"
														},
														{
															"nativeSrc": "18632:29:12",
															"nodeType": "YulAssignment",
															"src": "18632:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18651:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18651:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18656:4:12",
																		"nodeType": "YulLiteral",
																		"src": "18656:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18647:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18647:3:12"
																},
																"nativeSrc": "18647:14:12",
																"nodeType": "YulFunctionCall",
																"src": "18647:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18632:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "18632:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18499:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18566:3:12",
														"nodeType": "YulTypedName",
														"src": "18566:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18571:6:12",
														"nodeType": "YulTypedName",
														"src": "18571:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18582:11:12",
														"nodeType": "YulTypedName",
														"src": "18582:11:12",
														"type": ""
													}
												],
												"src": "18499:168:12"
											},
											{
												"body": {
													"nativeSrc": "18779:8:12",
													"nodeType": "YulBlock",
													"src": "18779:8:12",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "18673:114:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18771:6:12",
														"nodeType": "YulTypedName",
														"src": "18771:6:12",
														"type": ""
													}
												],
												"src": "18673:114:12"
											},
											{
												"body": {
													"nativeSrc": "18938:217:12",
													"nodeType": "YulBlock",
													"src": "18938:217:12",
													"statements": [
														{
															"nativeSrc": "18948:72:12",
															"nodeType": "YulAssignment",
															"src": "18948:72:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19013:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19013:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19018:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19018:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "18955:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "18955:57:12"
																},
																"nativeSrc": "18955:65:12",
																"nodeType": "YulFunctionCall",
																"src": "18955:65:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18948:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18948:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19118:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19118:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "19029:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "19029:88:12"
																},
																"nativeSrc": "19029:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19029:93:12"
															},
															"nativeSrc": "19029:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "19029:93:12"
														},
														{
															"nativeSrc": "19131:18:12",
															"nodeType": "YulAssignment",
															"src": "19131:18:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19142:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19142:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19147:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19147:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19138:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19138:3:12"
																},
																"nativeSrc": "19138:11:12",
																"nodeType": "YulFunctionCall",
																"src": "19138:11:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19131:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19131:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "18793:362:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18926:3:12",
														"nodeType": "YulTypedName",
														"src": "18926:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18934:3:12",
														"nodeType": "YulTypedName",
														"src": "18934:3:12",
														"type": ""
													}
												],
												"src": "18793:362:12"
											},
											{
												"body": {
													"nativeSrc": "19443:577:12",
													"nodeType": "YulBlock",
													"src": "19443:577:12",
													"statements": [
														{
															"nativeSrc": "19453:27:12",
															"nodeType": "YulAssignment",
															"src": "19453:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19465:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19465:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19476:3:12",
																		"nodeType": "YulLiteral",
																		"src": "19476:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19461:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19461:3:12"
																},
																"nativeSrc": "19461:19:12",
																"nodeType": "YulFunctionCall",
																"src": "19461:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19453:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19453:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19534:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19534:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19547:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19547:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19558:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19558:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19543:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19543:3:12"
																		},
																		"nativeSrc": "19543:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19543:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19490:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "19490:43:12"
																},
																"nativeSrc": "19490:71:12",
																"nodeType": "YulFunctionCall",
																"src": "19490:71:12"
															},
															"nativeSrc": "19490:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "19490:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19615:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19615:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19628:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19628:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19639:2:12",
																				"nodeType": "YulLiteral",
																				"src": "19639:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19624:3:12"
																		},
																		"nativeSrc": "19624:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19624:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19571:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "19571:43:12"
																},
																"nativeSrc": "19571:72:12",
																"nodeType": "YulFunctionCall",
																"src": "19571:72:12"
															},
															"nativeSrc": "19571:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "19571:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19697:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19697:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19710:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19710:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19721:2:12",
																				"nodeType": "YulLiteral",
																				"src": "19721:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19706:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19706:3:12"
																		},
																		"nativeSrc": "19706:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19706:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19653:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "19653:43:12"
																},
																"nativeSrc": "19653:72:12",
																"nodeType": "YulFunctionCall",
																"src": "19653:72:12"
															},
															"nativeSrc": "19653:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "19653:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19779:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19779:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19792:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19792:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19803:2:12",
																				"nodeType": "YulLiteral",
																				"src": "19803:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19788:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19788:3:12"
																		},
																		"nativeSrc": "19788:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19788:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19735:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "19735:43:12"
																},
																"nativeSrc": "19735:72:12",
																"nodeType": "YulFunctionCall",
																"src": "19735:72:12"
															},
															"nativeSrc": "19735:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "19735:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19828:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19828:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19839:3:12",
																				"nodeType": "YulLiteral",
																				"src": "19839:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19824:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19824:3:12"
																		},
																		"nativeSrc": "19824:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19824:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19849:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19849:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19855:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19855:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19845:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19845:3:12"
																		},
																		"nativeSrc": "19845:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19845:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19817:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19817:6:12"
																},
																"nativeSrc": "19817:49:12",
																"nodeType": "YulFunctionCall",
																"src": "19817:49:12"
															},
															"nativeSrc": "19817:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "19817:49:12"
														},
														{
															"nativeSrc": "19875:138:12",
															"nodeType": "YulAssignment",
															"src": "19875:138:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20008:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20008:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "19883:123:12",
																	"nodeType": "YulIdentifier",
																	"src": "19883:123:12"
																},
																"nativeSrc": "19883:130:12",
																"nodeType": "YulFunctionCall",
																"src": "19883:130:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19875:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19875:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "19161:859:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19391:9:12",
														"nodeType": "YulTypedName",
														"src": "19391:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "19403:6:12",
														"nodeType": "YulTypedName",
														"src": "19403:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19411:6:12",
														"nodeType": "YulTypedName",
														"src": "19411:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19419:6:12",
														"nodeType": "YulTypedName",
														"src": "19419:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19427:6:12",
														"nodeType": "YulTypedName",
														"src": "19427:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19438:4:12",
														"nodeType": "YulTypedName",
														"src": "19438:4:12",
														"type": ""
													}
												],
												"src": "19161:859:12"
											},
											{
												"body": {
													"nativeSrc": "20180:288:12",
													"nodeType": "YulBlock",
													"src": "20180:288:12",
													"statements": [
														{
															"nativeSrc": "20190:26:12",
															"nodeType": "YulAssignment",
															"src": "20190:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20202:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20202:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20213:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20213:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20198:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20198:3:12"
																},
																"nativeSrc": "20198:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20198:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20190:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20190:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20270:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20270:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20283:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20283:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20294:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20294:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20279:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20279:3:12"
																		},
																		"nativeSrc": "20279:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20279:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20226:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20226:43:12"
																},
																"nativeSrc": "20226:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20226:71:12"
															},
															"nativeSrc": "20226:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20226:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20351:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20351:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20364:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20364:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20375:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20375:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20360:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20360:3:12"
																		},
																		"nativeSrc": "20360:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20360:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20307:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20307:43:12"
																},
																"nativeSrc": "20307:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20307:72:12"
															},
															"nativeSrc": "20307:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20307:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20433:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20433:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20446:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20446:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20457:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20457:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20442:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20442:3:12"
																		},
																		"nativeSrc": "20442:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20442:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20389:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20389:43:12"
																},
																"nativeSrc": "20389:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20389:72:12"
															},
															"nativeSrc": "20389:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20389:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20026:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20136:9:12",
														"nodeType": "YulTypedName",
														"src": "20136:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20148:6:12",
														"nodeType": "YulTypedName",
														"src": "20148:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20156:6:12",
														"nodeType": "YulTypedName",
														"src": "20156:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20164:6:12",
														"nodeType": "YulTypedName",
														"src": "20164:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20175:4:12",
														"nodeType": "YulTypedName",
														"src": "20175:4:12",
														"type": ""
													}
												],
												"src": "20026:442:12"
											},
											{
												"body": {
													"nativeSrc": "20600:206:12",
													"nodeType": "YulBlock",
													"src": "20600:206:12",
													"statements": [
														{
															"nativeSrc": "20610:26:12",
															"nodeType": "YulAssignment",
															"src": "20610:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20622:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20622:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20633:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20633:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20618:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20618:3:12"
																},
																"nativeSrc": "20618:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20618:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20610:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20610:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20690:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20690:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20703:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20703:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20714:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20714:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20699:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20699:3:12"
																		},
																		"nativeSrc": "20699:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20699:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20646:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20646:43:12"
																},
																"nativeSrc": "20646:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20646:71:12"
															},
															"nativeSrc": "20646:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20646:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20771:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20771:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20784:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20784:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20795:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20795:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20780:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20780:3:12"
																		},
																		"nativeSrc": "20780:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20780:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20727:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20727:43:12"
																},
																"nativeSrc": "20727:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20727:72:12"
															},
															"nativeSrc": "20727:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20727:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20474:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20564:9:12",
														"nodeType": "YulTypedName",
														"src": "20564:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20576:6:12",
														"nodeType": "YulTypedName",
														"src": "20576:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20584:6:12",
														"nodeType": "YulTypedName",
														"src": "20584:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20595:4:12",
														"nodeType": "YulTypedName",
														"src": "20595:4:12",
														"type": ""
													}
												],
												"src": "20474:332:12"
											},
											{
												"body": {
													"nativeSrc": "20918:53:12",
													"nodeType": "YulBlock",
													"src": "20918:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20940:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20940:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20948:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20948:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20936:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20936:3:12"
																		},
																		"nativeSrc": "20936:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20936:14:12"
																	},
																	{
																		"hexValue": "7a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "20952:11:12",
																		"nodeType": "YulLiteral",
																		"src": "20952:11:12",
																		"type": "",
																		"value": "zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20929:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20929:6:12"
																},
																"nativeSrc": "20929:35:12",
																"nodeType": "YulFunctionCall",
																"src": "20929:35:12"
															},
															"nativeSrc": "20929:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "20929:35:12"
														}
													]
												},
												"name": "store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
												"nativeSrc": "20812:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20910:6:12",
														"nodeType": "YulTypedName",
														"src": "20910:6:12",
														"type": ""
													}
												],
												"src": "20812:159:12"
											},
											{
												"body": {
													"nativeSrc": "21123:219:12",
													"nodeType": "YulBlock",
													"src": "21123:219:12",
													"statements": [
														{
															"nativeSrc": "21133:73:12",
															"nodeType": "YulAssignment",
															"src": "21133:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21199:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21199:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21204:1:12",
																		"nodeType": "YulLiteral",
																		"src": "21204:1:12",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21140:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "21140:58:12"
																},
																"nativeSrc": "21140:66:12",
																"nodeType": "YulFunctionCall",
																"src": "21140:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21133:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21133:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21304:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21304:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																	"nativeSrc": "21215:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "21215:88:12"
																},
																"nativeSrc": "21215:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21215:93:12"
															},
															"nativeSrc": "21215:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "21215:93:12"
														},
														{
															"nativeSrc": "21317:19:12",
															"nodeType": "YulAssignment",
															"src": "21317:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21328:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21328:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21333:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21333:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21324:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21324:3:12"
																},
																"nativeSrc": "21324:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21324:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21317:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21317:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20977:365:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21111:3:12",
														"nodeType": "YulTypedName",
														"src": "21111:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21119:3:12",
														"nodeType": "YulTypedName",
														"src": "21119:3:12",
														"type": ""
													}
												],
												"src": "20977:365:12"
											},
											{
												"body": {
													"nativeSrc": "21519:248:12",
													"nodeType": "YulBlock",
													"src": "21519:248:12",
													"statements": [
														{
															"nativeSrc": "21529:26:12",
															"nodeType": "YulAssignment",
															"src": "21529:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21541:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21541:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21552:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21552:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21537:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21537:3:12"
																},
																"nativeSrc": "21537:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21537:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21529:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21529:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21576:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21576:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21587:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21587:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21572:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21572:3:12"
																		},
																		"nativeSrc": "21572:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21572:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21595:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21595:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21601:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21601:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21591:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21591:3:12"
																		},
																		"nativeSrc": "21591:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21591:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21565:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21565:6:12"
																},
																"nativeSrc": "21565:47:12",
																"nodeType": "YulFunctionCall",
																"src": "21565:47:12"
															},
															"nativeSrc": "21565:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "21565:47:12"
														},
														{
															"nativeSrc": "21621:139:12",
															"nodeType": "YulAssignment",
															"src": "21621:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21755:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21755:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21629:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "21629:124:12"
																},
																"nativeSrc": "21629:131:12",
																"nodeType": "YulFunctionCall",
																"src": "21629:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21621:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21621:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21348:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21499:9:12",
														"nodeType": "YulTypedName",
														"src": "21499:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21514:4:12",
														"nodeType": "YulTypedName",
														"src": "21514:4:12",
														"type": ""
													}
												],
												"src": "21348:419:12"
											},
											{
												"body": {
													"nativeSrc": "21879:53:12",
													"nodeType": "YulBlock",
													"src": "21879:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21901:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21901:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21909:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21909:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21897:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21897:3:12"
																		},
																		"nativeSrc": "21897:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21897:14:12"
																	},
																	{
																		"hexValue": "6d6178203130303030",
																		"kind": "string",
																		"nativeSrc": "21913:11:12",
																		"nodeType": "YulLiteral",
																		"src": "21913:11:12",
																		"type": "",
																		"value": "max 10000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21890:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21890:6:12"
																},
																"nativeSrc": "21890:35:12",
																"nodeType": "YulFunctionCall",
																"src": "21890:35:12"
															},
															"nativeSrc": "21890:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "21890:35:12"
														}
													]
												},
												"name": "store_literal_in_memory_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc",
												"nativeSrc": "21773:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21871:6:12",
														"nodeType": "YulTypedName",
														"src": "21871:6:12",
														"type": ""
													}
												],
												"src": "21773:159:12"
											},
											{
												"body": {
													"nativeSrc": "22084:219:12",
													"nodeType": "YulBlock",
													"src": "22084:219:12",
													"statements": [
														{
															"nativeSrc": "22094:73:12",
															"nodeType": "YulAssignment",
															"src": "22094:73:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22160:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22160:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22165:1:12",
																		"nodeType": "YulLiteral",
																		"src": "22165:1:12",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22101:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "22101:58:12"
																},
																"nativeSrc": "22101:66:12",
																"nodeType": "YulFunctionCall",
																"src": "22101:66:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22094:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22094:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22265:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22265:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc",
																	"nativeSrc": "22176:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "22176:88:12"
																},
																"nativeSrc": "22176:93:12",
																"nodeType": "YulFunctionCall",
																"src": "22176:93:12"
															},
															"nativeSrc": "22176:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "22176:93:12"
														},
														{
															"nativeSrc": "22278:19:12",
															"nodeType": "YulAssignment",
															"src": "22278:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22289:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22289:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22294:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22294:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22285:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22285:3:12"
																},
																"nativeSrc": "22285:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22285:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22278:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22278:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21938:365:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22072:3:12",
														"nodeType": "YulTypedName",
														"src": "22072:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22080:3:12",
														"nodeType": "YulTypedName",
														"src": "22080:3:12",
														"type": ""
													}
												],
												"src": "21938:365:12"
											},
											{
												"body": {
													"nativeSrc": "22480:248:12",
													"nodeType": "YulBlock",
													"src": "22480:248:12",
													"statements": [
														{
															"nativeSrc": "22490:26:12",
															"nodeType": "YulAssignment",
															"src": "22490:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22502:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22502:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22513:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22513:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22498:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22498:3:12"
																},
																"nativeSrc": "22498:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22498:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22490:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22490:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22537:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22537:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22548:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22548:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22533:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22533:3:12"
																		},
																		"nativeSrc": "22533:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22533:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22556:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22556:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22562:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22562:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22552:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22552:3:12"
																		},
																		"nativeSrc": "22552:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22552:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22526:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22526:6:12"
																},
																"nativeSrc": "22526:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22526:47:12"
															},
															"nativeSrc": "22526:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22526:47:12"
														},
														{
															"nativeSrc": "22582:139:12",
															"nodeType": "YulAssignment",
															"src": "22582:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22716:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22716:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22590:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "22590:124:12"
																},
																"nativeSrc": "22590:131:12",
																"nodeType": "YulFunctionCall",
																"src": "22590:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22582:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22582:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22309:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22460:9:12",
														"nodeType": "YulTypedName",
														"src": "22460:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22475:4:12",
														"nodeType": "YulTypedName",
														"src": "22475:4:12",
														"type": ""
													}
												],
												"src": "22309:419:12"
											},
											{
												"body": {
													"nativeSrc": "22840:54:12",
													"nodeType": "YulBlock",
													"src": "22840:54:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22862:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22862:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22870:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22870:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22858:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22858:3:12"
																		},
																		"nativeSrc": "22858:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22858:14:12"
																	},
																	{
																		"hexValue": "6e6f742073656c6c6572",
																		"kind": "string",
																		"nativeSrc": "22874:12:12",
																		"nodeType": "YulLiteral",
																		"src": "22874:12:12",
																		"type": "",
																		"value": "not seller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22851:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22851:6:12"
																},
																"nativeSrc": "22851:36:12",
																"nodeType": "YulFunctionCall",
																"src": "22851:36:12"
															},
															"nativeSrc": "22851:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "22851:36:12"
														}
													]
												},
												"name": "store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
												"nativeSrc": "22734:160:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22832:6:12",
														"nodeType": "YulTypedName",
														"src": "22832:6:12",
														"type": ""
													}
												],
												"src": "22734:160:12"
											},
											{
												"body": {
													"nativeSrc": "23046:220:12",
													"nodeType": "YulBlock",
													"src": "23046:220:12",
													"statements": [
														{
															"nativeSrc": "23056:74:12",
															"nodeType": "YulAssignment",
															"src": "23056:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23122:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23122:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23127:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23127:2:12",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23063:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "23063:58:12"
																},
																"nativeSrc": "23063:67:12",
																"nodeType": "YulFunctionCall",
																"src": "23063:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23056:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23056:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23228:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23228:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																	"nativeSrc": "23139:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "23139:88:12"
																},
																"nativeSrc": "23139:93:12",
																"nodeType": "YulFunctionCall",
																"src": "23139:93:12"
															},
															"nativeSrc": "23139:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "23139:93:12"
														},
														{
															"nativeSrc": "23241:19:12",
															"nodeType": "YulAssignment",
															"src": "23241:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23252:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23252:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23257:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23257:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23248:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23248:3:12"
																},
																"nativeSrc": "23248:12:12",
																"nodeType": "YulFunctionCall",
																"src": "23248:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23241:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23241:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22900:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23034:3:12",
														"nodeType": "YulTypedName",
														"src": "23034:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23042:3:12",
														"nodeType": "YulTypedName",
														"src": "23042:3:12",
														"type": ""
													}
												],
												"src": "22900:366:12"
											},
											{
												"body": {
													"nativeSrc": "23443:248:12",
													"nodeType": "YulBlock",
													"src": "23443:248:12",
													"statements": [
														{
															"nativeSrc": "23453:26:12",
															"nodeType": "YulAssignment",
															"src": "23453:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23465:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "23465:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23476:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23476:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23461:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23461:3:12"
																},
																"nativeSrc": "23461:18:12",
																"nodeType": "YulFunctionCall",
																"src": "23461:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23453:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23453:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23500:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23500:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23511:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23511:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23496:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23496:3:12"
																		},
																		"nativeSrc": "23496:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23496:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23519:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "23519:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23525:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23525:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23515:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23515:3:12"
																		},
																		"nativeSrc": "23515:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23515:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23489:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23489:6:12"
																},
																"nativeSrc": "23489:47:12",
																"nodeType": "YulFunctionCall",
																"src": "23489:47:12"
															},
															"nativeSrc": "23489:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "23489:47:12"
														},
														{
															"nativeSrc": "23545:139:12",
															"nodeType": "YulAssignment",
															"src": "23545:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23679:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "23679:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23553:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "23553:124:12"
																},
																"nativeSrc": "23553:131:12",
																"nodeType": "YulFunctionCall",
																"src": "23553:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23545:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23545:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23272:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23423:9:12",
														"nodeType": "YulTypedName",
														"src": "23423:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23438:4:12",
														"nodeType": "YulTypedName",
														"src": "23438:4:12",
														"type": ""
													}
												],
												"src": "23272:419:12"
											},
											{
												"body": {
													"nativeSrc": "23803:75:12",
													"nodeType": "YulBlock",
													"src": "23803:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23825:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23825:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23833:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23833:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23821:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23821:3:12"
																		},
																		"nativeSrc": "23821:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23821:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "23837:33:12",
																		"nodeType": "YulLiteral",
																		"src": "23837:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23814:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23814:6:12"
																},
																"nativeSrc": "23814:57:12",
																"nodeType": "YulFunctionCall",
																"src": "23814:57:12"
															},
															"nativeSrc": "23814:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "23814:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "23697:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23795:6:12",
														"nodeType": "YulTypedName",
														"src": "23795:6:12",
														"type": ""
													}
												],
												"src": "23697:181:12"
											},
											{
												"body": {
													"nativeSrc": "24030:220:12",
													"nodeType": "YulBlock",
													"src": "24030:220:12",
													"statements": [
														{
															"nativeSrc": "24040:74:12",
															"nodeType": "YulAssignment",
															"src": "24040:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24106:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24106:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24111:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24111:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24047:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "24047:58:12"
																},
																"nativeSrc": "24047:67:12",
																"nodeType": "YulFunctionCall",
																"src": "24047:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24040:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24040:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24212:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24212:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "24123:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "24123:88:12"
																},
																"nativeSrc": "24123:93:12",
																"nodeType": "YulFunctionCall",
																"src": "24123:93:12"
															},
															"nativeSrc": "24123:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "24123:93:12"
														},
														{
															"nativeSrc": "24225:19:12",
															"nodeType": "YulAssignment",
															"src": "24225:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24236:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24236:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24241:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24241:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24232:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24232:3:12"
																},
																"nativeSrc": "24232:12:12",
																"nodeType": "YulFunctionCall",
																"src": "24232:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24225:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24225:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23884:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24018:3:12",
														"nodeType": "YulTypedName",
														"src": "24018:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24026:3:12",
														"nodeType": "YulTypedName",
														"src": "24026:3:12",
														"type": ""
													}
												],
												"src": "23884:366:12"
											},
											{
												"body": {
													"nativeSrc": "24427:248:12",
													"nodeType": "YulBlock",
													"src": "24427:248:12",
													"statements": [
														{
															"nativeSrc": "24437:26:12",
															"nodeType": "YulAssignment",
															"src": "24437:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24449:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "24449:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24460:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24460:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24445:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24445:3:12"
																},
																"nativeSrc": "24445:18:12",
																"nodeType": "YulFunctionCall",
																"src": "24445:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24437:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24437:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24484:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24484:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24495:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24495:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24480:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24480:3:12"
																		},
																		"nativeSrc": "24480:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24480:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24503:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24503:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24509:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24509:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24499:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24499:3:12"
																		},
																		"nativeSrc": "24499:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24499:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24473:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24473:6:12"
																},
																"nativeSrc": "24473:47:12",
																"nodeType": "YulFunctionCall",
																"src": "24473:47:12"
															},
															"nativeSrc": "24473:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "24473:47:12"
														},
														{
															"nativeSrc": "24529:139:12",
															"nodeType": "YulAssignment",
															"src": "24529:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24663:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24663:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24537:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "24537:124:12"
																},
																"nativeSrc": "24537:131:12",
																"nodeType": "YulFunctionCall",
																"src": "24537:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24529:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24529:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24256:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24407:9:12",
														"nodeType": "YulTypedName",
														"src": "24407:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24422:4:12",
														"nodeType": "YulTypedName",
														"src": "24422:4:12",
														"type": ""
													}
												],
												"src": "24256:419:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$503_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$503_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$503_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$503__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$503_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value6,  add(headStart, 192))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT contract not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050(memPtr) {\n\n        mstore(add(memPtr, 0), \"price zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee(memPtr) {\n\n        mstore(add(memPtr, 0), \"insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16(memPtr) {\n\n        mstore(add(memPtr, 0), \"not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862(memPtr) {\n\n        mstore(add(memPtr, 0), \"amount must be 1 for ERC721\")\n\n    }\n\n    function abi_encode_t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(memPtr) {\n\n        mstore(add(memPtr, 0), \"not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27(memPtr) {\n\n        mstore(add(memPtr, 0), \"listing inactive\")\n\n    }\n\n    function abi_encode_t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15(memPtr) {\n\n        mstore(add(memPtr, 0), \"zero addr\")\n\n    }\n\n    function abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc(memPtr) {\n\n        mstore(add(memPtr, 0), \"max 10000\")\n\n    }\n\n    function abi_encode_t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577(memPtr) {\n\n        mstore(add(memPtr, 0), \"not seller\")\n\n    }\n\n    function abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c806380df50a811610095578063c415b95c11610064578063c415b95c1461026e578063cb917b9c1461028c578063de74e57b146102a8578063f2fde38b146102de576100fe565b806380df50a8146101e85780638da5cb5b14610204578063a42dce8014610222578063c0f6ae971461023e576100fe565b80636a326ab1116100d15780636a326ab114610188578063715018a6146101a45780637ce3489b146101ae5780637fd6f15c146101ca576100fe565b80633013ce29146101025780633ae6064b146101205780634e9b8c5d1461013c57806351ed82881461016c575b5f5ffd5b61010a6102fa565b604051610117919061166b565b60405180910390f35b61013a6004803603810190610135919061172b565b61031f565b005b610156600480360381019061015191906117a2565b610a40565b60405161016391906117dc565b60405180910390f35b610186600480360381019061018191906117f5565b610a92565b005b6101a2600480360381019061019d91906117a2565b610e17565b005b6101ac610ed0565b005b6101c860048036038101906101c391906117f5565b610ee3565b005b6101d2610f3a565b6040516101df919061182f565b60405180910390f35b61020260048036038101906101fd9190611848565b610f40565b005b61020c610fa0565b6040516102199190611895565b60405180910390f35b61023c600480360381019061023791906117a2565b610fc7565b005b610258600480360381019061025391906117a2565b611080565b60405161026591906117dc565b60405180910390f35b61027661109d565b6040516102839190611895565b60405180910390f35b6102a660048036038101906102a191906117f5565b6110c2565b005b6102c260048036038101906102bd91906117f5565b611214565b6040516102d597969594939291906118ae565b60405180910390f35b6102f860048036038101906102f391906117a2565b6112a9565b005b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61032761132d565b60055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790611975565b60405180910390fd5b5f82116103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e9906119dd565b60405180910390fd5b80156105b8575f831161043a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043190611a45565b60405180910390fd5b5f859050838173ffffffffffffffffffffffffffffffffffffffff1662fdd58e33886040518363ffffffff1660e01b8152600401610479929190611a63565b602060405180830381865afa158015610494573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104b89190611a9e565b10156104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f090611b13565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b8152600401610534929190611b31565b602060405180830381865afa15801561054f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105739190611b6c565b6105b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a990611be1565b60405180910390fd5b5061084c565b600183146105fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f290611c49565b60405180910390fd5b5f8590503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e876040518263ffffffff1660e01b815260040161064f919061182f565b602060405180830381865afa15801561066a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068e9190611c7b565b73ffffffffffffffffffffffffffffffffffffffff16146106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90611cf0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b815260040161071f929190611b31565b602060405180830381865afa15801561073a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075e9190611b6c565b8061080b57503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc876040518263ffffffff1660e01b81526004016107b4919061182f565b602060405180830381865afa1580156107cf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107f39190611c7b565b73ffffffffffffffffffffffffffffffffffffffff16145b61084a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084190611be1565b60405180910390fd5b505b5f60065f81548092919061085f90611d3b565b9190505590506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183151581526020016001151581525060075f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015f6101000a81548160ff02191690831515021790555060c08201518160050160016101000a81548160ff0219169083151502179055509050508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827fd1ed8900afb99183d6684ef82e558ec94d3feba62cff25b765b503bd5505e09f88888888604051610a289493929190611d82565b60405180910390a450610a3961137c565b5050505050565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff169050919050565b610a9a61132d565b5f60075f8381526020019081526020015f2090508060050160019054906101000a900460ff16610aff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af690611e0f565b60405180910390fd5b5f816004015490505f61271060045483610b199190611e2d565b610b239190611e9b565b90505f8183610b329190611ecb565b9050610ba433855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611385909392919063ffffffff16565b610c133360035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611385909392919063ffffffff16565b836005015f9054906101000a900460ff1615610ce757836001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633876002015488600301546040518563ffffffff1660e01b8152600401610cb59493929190611f31565b5f604051808303815f87803b158015610ccc575f5ffd5b505af1158015610cde573d5f5f3e3d5ffd5b50505050610d9b565b836001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e855f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387600201546040518463ffffffff1660e01b8152600401610d6d93929190611f87565b5f604051808303815f87803b158015610d84575f5ffd5b505af1158015610d96573d5f5f3e3d5ffd5b505050505b5f8460050160016101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16857f041bfe3082d481c8f62f6ed145f1d8cbec0daebcb4d750ae5c42a51946551d138585604051610e00929190611fbc565b60405180910390a350505050610e1461137c565b50565b610e1f611407565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e849061202d565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610ed8611407565b610ee15f61148e565b565b610eeb611407565b612710811115610f30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2790612095565b60405180910390fd5b8060048190555050565b60045481565b610f48611407565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610fcf611407565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361103d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110349061202d565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6005602052805f5260405f205f915054906101000a900460ff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110ca61132d565b5f60075f8381526020019081526020015f2090508060050160019054906101000a900460ff1661112f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112690611e0f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b6906120fd565b60405180910390fd5b5f8160050160016101000a81548160ff021916908315150217905550817fc0c55a6edead4433d18cb1e287a0a20a2fa003a6f483bc9823d2e504d70d1c6760405160405180910390a25061121161137c565b50565b6007602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015f9054906101000a900460ff16908060050160019054906101000a900460ff16905087565b6112b1611407565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611321575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016113189190611895565b60405180910390fd5b61132a8161148e565b50565b600260015403611372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136990612165565b60405180910390fd5b6002600181905550565b60018081905550565b611401848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016113ba93929190611f87565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061154f565b50505050565b61140f6115ea565b73ffffffffffffffffffffffffffffffffffffffff1661142d610fa0565b73ffffffffffffffffffffffffffffffffffffffff161461148c576114506115ea565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114839190611895565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f60205f8451602086015f885af18061156e576040513d5f823e3d81fd5b3d92505f519150505f82146115875760018114156115a2565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b156115e457836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016115db9190611895565b60405180910390fd5b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61163361162e611629846115f1565b611610565b6115f1565b9050919050565b5f61164482611619565b9050919050565b5f6116558261163a565b9050919050565b6116658161164b565b82525050565b5f60208201905061167e5f83018461165c565b92915050565b5f5ffd5b5f611692826115f1565b9050919050565b6116a281611688565b81146116ac575f5ffd5b50565b5f813590506116bd81611699565b92915050565b5f819050919050565b6116d5816116c3565b81146116df575f5ffd5b50565b5f813590506116f0816116cc565b92915050565b5f8115159050919050565b61170a816116f6565b8114611714575f5ffd5b50565b5f8135905061172581611701565b92915050565b5f5f5f5f5f60a0868803121561174457611743611684565b5b5f611751888289016116af565b9550506020611762888289016116e2565b9450506040611773888289016116e2565b9350506060611784888289016116e2565b925050608061179588828901611717565b9150509295509295909350565b5f602082840312156117b7576117b6611684565b5b5f6117c4848285016116af565b91505092915050565b6117d6816116f6565b82525050565b5f6020820190506117ef5f8301846117cd565b92915050565b5f6020828403121561180a57611809611684565b5b5f611817848285016116e2565b91505092915050565b611829816116c3565b82525050565b5f6020820190506118425f830184611820565b92915050565b5f5f6040838503121561185e5761185d611684565b5b5f61186b858286016116af565b925050602061187c85828601611717565b9150509250929050565b61188f81611688565b82525050565b5f6020820190506118a85f830184611886565b92915050565b5f60e0820190506118c15f83018a611886565b6118ce6020830189611886565b6118db6040830188611820565b6118e86060830187611820565b6118f56080830186611820565b61190260a08301856117cd565b61190f60c08301846117cd565b98975050505050505050565b5f82825260208201905092915050565b7f4e465420636f6e7472616374206e6f7420616c6c6f77656400000000000000005f82015250565b5f61195f60188361191b565b915061196a8261192b565b602082019050919050565b5f6020820190508181035f83015261198c81611953565b9050919050565b7f7072696365207a65726f000000000000000000000000000000000000000000005f82015250565b5f6119c7600a8361191b565b91506119d282611993565b602082019050919050565b5f6020820190508181035f8301526119f4816119bb565b9050919050565b7f616d6f756e74207a65726f0000000000000000000000000000000000000000005f82015250565b5f611a2f600b8361191b565b9150611a3a826119fb565b602082019050919050565b5f6020820190508181035f830152611a5c81611a23565b9050919050565b5f604082019050611a765f830185611886565b611a836020830184611820565b9392505050565b5f81519050611a98816116cc565b92915050565b5f60208284031215611ab357611ab2611684565b5b5f611ac084828501611a8a565b91505092915050565b7f696e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611afd60148361191b565b9150611b0882611ac9565b602082019050919050565b5f6020820190508181035f830152611b2a81611af1565b9050919050565b5f604082019050611b445f830185611886565b611b516020830184611886565b9392505050565b5f81519050611b6681611701565b92915050565b5f60208284031215611b8157611b80611684565b5b5f611b8e84828501611b58565b91505092915050565b7f6e6f7420617070726f76656400000000000000000000000000000000000000005f82015250565b5f611bcb600c8361191b565b9150611bd682611b97565b602082019050919050565b5f6020820190508181035f830152611bf881611bbf565b9050919050565b7f616d6f756e74206d757374206265203120666f722045524337323100000000005f82015250565b5f611c33601b8361191b565b9150611c3e82611bff565b602082019050919050565b5f6020820190508181035f830152611c6081611c27565b9050919050565b5f81519050611c7581611699565b92915050565b5f60208284031215611c9057611c8f611684565b5b5f611c9d84828501611c67565b91505092915050565b7f6e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f611cda60098361191b565b9150611ce582611ca6565b602082019050919050565b5f6020820190508181035f830152611d0781611cce565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d45826116c3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d7757611d76611d0e565b5b600182019050919050565b5f608082019050611d955f830187611820565b611da26020830186611820565b611daf6040830185611820565b611dbc60608301846117cd565b95945050505050565b7f6c697374696e6720696e616374697665000000000000000000000000000000005f82015250565b5f611df960108361191b565b9150611e0482611dc5565b602082019050919050565b5f6020820190508181035f830152611e2681611ded565b9050919050565b5f611e37826116c3565b9150611e42836116c3565b9250828202611e50816116c3565b91508282048414831517611e6757611e66611d0e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611ea5826116c3565b9150611eb0836116c3565b925082611ec057611ebf611e6e565b5b828204905092915050565b5f611ed5826116c3565b9150611ee0836116c3565b9250828203905081811115611ef857611ef7611d0e565b5b92915050565b5f82825260208201905092915050565b50565b5f611f1c5f83611efe565b9150611f2782611f0e565b5f82019050919050565b5f60a082019050611f445f830187611886565b611f516020830186611886565b611f5e6040830185611820565b611f6b6060830184611820565b8181036080830152611f7c81611f11565b905095945050505050565b5f606082019050611f9a5f830186611886565b611fa76020830185611886565b611fb46040830184611820565b949350505050565b5f604082019050611fcf5f830185611820565b611fdc6020830184611820565b9392505050565b7f7a65726f206164647200000000000000000000000000000000000000000000005f82015250565b5f61201760098361191b565b915061202282611fe3565b602082019050919050565b5f6020820190508181035f8301526120448161200b565b9050919050565b7f6d617820313030303000000000000000000000000000000000000000000000005f82015250565b5f61207f60098361191b565b915061208a8261204b565b602082019050919050565b5f6020820190508181035f8301526120ac81612073565b9050919050565b7f6e6f742073656c6c6572000000000000000000000000000000000000000000005f82015250565b5f6120e7600a8361191b565b91506120f2826120b3565b602082019050919050565b5f6020820190508181035f830152612114816120db565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61214f601f8361191b565b915061215a8261211b565b602082019050919050565b5f6020820190508181035f83015261217c81612143565b905091905056fea2646970667358221220eb62d52665b095edbbfe67be3ca40b7a67d8fb9f44cfcc207bf226e7787f3d2864736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80DF50A8 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC415B95C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xCB917B9C EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DE JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x80DF50A8 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA42DCE80 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xC0F6AE97 EQ PUSH2 0x23E JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6A326AB1 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6A326AB1 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x7CE3489B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x7FD6F15C EQ PUSH2 0x1CA JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x3AE6064B EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x4E9B8C5D EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x51ED8288 EQ PUSH2 0x16C JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x166B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH2 0xED0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0xEE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D2 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1848 JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH2 0xFA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0xFC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x109D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x10C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x327 PUSH2 0x132D JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1975 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x3F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E9 SWAP1 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x5B8 JUMPI PUSH0 DUP4 GT PUSH2 0x43A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x431 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 SWAP1 POP DUP4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E CALLER DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x479 SWAP3 SWAP2 SWAP1 PUSH2 0x1A63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x494 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST LT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1B13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x534 SWAP3 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST PUSH2 0x5B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A9 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x84C JUMP JUMPDEST PUSH1 0x1 DUP4 EQ PUSH2 0x5FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F2 SWAP1 PUSH2 0x1C49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP6 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64F SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DB SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x1B31 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x1B6C JUMP JUMPDEST DUP1 PUSH2 0x80B JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x81812FC DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B4 SWAP2 SWAP1 PUSH2 0x182F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1C7B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x84A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x841 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x85F SWAP1 PUSH2 0x1D3B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xD1ED8900AFB99183D6684EF82E558EC94D3FEBA62CFF25B765B503BD5505E09F DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xA28 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0xA39 PUSH2 0x137C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9A PUSH2 0x132D JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF6 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x4 SLOAD DUP4 PUSH2 0xB19 SWAP2 SWAP1 PUSH2 0x1E2D JUMP JUMPDEST PUSH2 0xB23 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0xB32 SWAP2 SWAP1 PUSH2 0x1ECB JUMP JUMPDEST SWAP1 POP PUSH2 0xBA4 CALLER DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1385 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC13 CALLER PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1385 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCE7 JUMPI DUP4 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP8 PUSH1 0x2 ADD SLOAD DUP9 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F31 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCDE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD9B JUMP JUMPDEST DUP4 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP6 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP8 PUSH1 0x2 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD84 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD96 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH0 DUP5 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x41BFE3082D481C8F62F6ED145F1D8CBEC0DAEBCB4D750AE5C42A51946551D13 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE00 SWAP3 SWAP2 SWAP1 PUSH2 0x1FBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0xE14 PUSH2 0x137C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE1F PUSH2 0x1407 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE84 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xED8 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0xEE1 PUSH0 PUSH2 0x148E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xEEB PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF27 SWAP1 PUSH2 0x2095 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF48 PUSH2 0x1407 JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFCF PUSH2 0x1407 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x10CA PUSH2 0x132D JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x112F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1126 SWAP1 PUSH2 0x1E0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B6 SWAP1 PUSH2 0x20FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x5 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0xC0C55A6EDEAD4433D18CB1E287A0A20A2FA003A6F483BC9823D2E504D70D1C67 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1211 PUSH2 0x137C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x5 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x12B1 PUSH2 0x1407 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1321 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x132A DUP2 PUSH2 0x148E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1369 SWAP1 PUSH2 0x2165 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1401 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x13BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x154F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x140F PUSH2 0x15EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x142D PUSH2 0xFA0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148C JUMPI PUSH2 0x1450 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x156E JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1587 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x15A2 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x15E4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DB SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1633 PUSH2 0x162E PUSH2 0x1629 DUP5 PUSH2 0x15F1 JUMP JUMPDEST PUSH2 0x1610 JUMP JUMPDEST PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1644 DUP3 PUSH2 0x1619 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1655 DUP3 PUSH2 0x163A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1665 DUP2 PUSH2 0x164B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x167E PUSH0 DUP4 ADD DUP5 PUSH2 0x165C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1692 DUP3 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A2 DUP2 PUSH2 0x1688 JUMP JUMPDEST DUP2 EQ PUSH2 0x16AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16BD DUP2 PUSH2 0x1699 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D5 DUP2 PUSH2 0x16C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x16DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F0 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x170A DUP2 PUSH2 0x16F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1714 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1725 DUP2 PUSH2 0x1701 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1751 DUP9 DUP3 DUP10 ADD PUSH2 0x16AF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1762 DUP9 DUP3 DUP10 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1773 DUP9 DUP3 DUP10 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1784 DUP9 DUP3 DUP10 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x1795 DUP9 DUP3 DUP10 ADD PUSH2 0x1717 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17B7 JUMPI PUSH2 0x17B6 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17C4 DUP5 DUP3 DUP6 ADD PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17D6 DUP2 PUSH2 0x16F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17EF PUSH0 DUP4 ADD DUP5 PUSH2 0x17CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x180A JUMPI PUSH2 0x1809 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1817 DUP5 DUP3 DUP6 ADD PUSH2 0x16E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1829 DUP2 PUSH2 0x16C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1842 PUSH0 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x185E JUMPI PUSH2 0x185D PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x186B DUP6 DUP3 DUP7 ADD PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x187C DUP6 DUP3 DUP7 ADD PUSH2 0x1717 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x188F DUP2 PUSH2 0x1688 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1886 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x18C1 PUSH0 DUP4 ADD DUP11 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x18CE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x18DB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x18E8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x18F5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1902 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x17CD JUMP JUMPDEST PUSH2 0x190F PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x17CD JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E465420636F6E7472616374206E6F7420616C6C6F7765640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x195F PUSH1 0x18 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x196A DUP3 PUSH2 0x192B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x198C DUP2 PUSH2 0x1953 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7072696365207A65726F00000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19C7 PUSH1 0xA DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x19D2 DUP3 PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F4 DUP2 PUSH2 0x19BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74207A65726F000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A2F PUSH1 0xB DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3A DUP3 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A5C DUP2 PUSH2 0x1A23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A76 PUSH0 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1A83 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A98 DUP2 PUSH2 0x16CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB3 JUMPI PUSH2 0x1AB2 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC0 DUP5 DUP3 DUP6 ADD PUSH2 0x1A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AFD PUSH1 0x14 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B08 DUP3 PUSH2 0x1AC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B2A DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B44 PUSH0 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1B51 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1886 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B66 DUP2 PUSH2 0x1701 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B81 JUMPI PUSH2 0x1B80 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B8E DUP5 DUP3 DUP6 ADD PUSH2 0x1B58 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420617070726F7665640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCB PUSH1 0xC DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD6 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF8 DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616D6F756E74206D757374206265203120666F72204552433732310000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C33 PUSH1 0x1B DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C3E DUP3 PUSH2 0x1BFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C60 DUP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C75 DUP2 PUSH2 0x1699 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C90 JUMPI PUSH2 0x1C8F PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C9D DUP5 DUP3 DUP6 ADD PUSH2 0x1C67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CDA PUSH1 0x9 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1CE5 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D07 DUP2 PUSH2 0x1CCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D45 DUP3 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1D77 JUMPI PUSH2 0x1D76 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D95 PUSH0 DUP4 ADD DUP8 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1DA2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1DAF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1DBC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x17CD JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x6C697374696E6720696E61637469766500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DF9 PUSH1 0x10 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x1E04 DUP3 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E26 DUP2 PUSH2 0x1DED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E37 DUP3 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E42 DUP4 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E50 DUP2 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E67 JUMPI PUSH2 0x1E66 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EA5 DUP3 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB0 DUP4 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EC0 JUMPI PUSH2 0x1EBF PUSH2 0x1E6E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED5 DUP3 PUSH2 0x16C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE0 DUP4 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1D0E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1F1C PUSH0 DUP4 PUSH2 0x1EFE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F27 DUP3 PUSH2 0x1F0E JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1F44 PUSH0 DUP4 ADD DUP8 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1F51 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1F5E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1F6B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1F7C DUP2 PUSH2 0x1F11 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F9A PUSH0 DUP4 ADD DUP7 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1FA7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1886 JUMP JUMPDEST PUSH2 0x1FB4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FCF PUSH0 DUP4 ADD DUP6 PUSH2 0x1820 JUMP JUMPDEST PUSH2 0x1FDC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1820 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x7A65726F20616464720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2017 PUSH1 0x9 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x2022 DUP3 PUSH2 0x1FE3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2044 DUP2 PUSH2 0x200B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D61782031303030300000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x207F PUSH1 0x9 DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x208A DUP3 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20AC DUP2 PUSH2 0x2073 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F742073656C6C657200000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20E7 PUSH1 0xA DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x20F2 DUP3 PUSH2 0x20B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2114 DUP2 PUSH2 0x20DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x214F PUSH1 0x1F DUP4 PUSH2 0x191B JUMP JUMPDEST SWAP2 POP PUSH2 0x215A DUP3 PUSH2 0x211B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x217C DUP2 PUSH2 0x2143 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB PUSH3 0xD52665 0xB0 SWAP6 0xED 0xBB INVALID PUSH8 0xBE3CA40B7A67D8FB SWAP16 PREVRANDAO 0xCF 0xCC KECCAK256 PUSH28 0xF226E7787F3D2864736F6C634300081E003300000000000000000000 ",
							"sourceMap": "420:5300:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:1373;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5590:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4652:880;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2231:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;2593:156:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;624:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2755:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2416:171:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;760:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;567:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4331:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1237:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;517:26:11;;;;;;;;;;;;;:::o;2930:1373::-;2261:21:4;:19;:21::i;:::-;3072:19:11::1;:32;3092:11;3072:32;;;;;;;;;;;;;;;;;;;;;;;;;3064:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3159:1;3151:5;:9;3143:32;;;;;;;;;;;;:::i;:::-;;;;;;;;;3190:9;3186:700;;;3232:1;3223:6;:10;3215:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;3307:16;3335:11;3307:40;;3411:6;3369:7;:17;;;3387:10;3399:7;3369:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;3361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;3464:7;:24;;;3489:10;3509:4;3464:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3456:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;3201:342;3186:700;;;3581:1;3571:6;:11;3563:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3628:14;3653:11;3628:37;;3714:10;3687:37;;:6;:14;;;3702:7;3687:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;;3679:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3760:6;:23;;;3784:10;3804:4;3760:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:98;;;;3853:4;3814:44;;:6;:18;;;3833:7;3814:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;3760:98;3752:123;;;;;;;;;;;;:::i;:::-;;;;;;;;;3549:337;3186:700;3896:17;3916;;:19;;;;;;;;;:::i;:::-;;;;;3896:39;;3967:233;;;;;;;;3997:10;3967:233;;;;;;4034:11;3967:233;;;;;;4068:7;3967:233;;;;4097:6;3967:233;;;;4124:5;3967:233;;;;4154:9;3967:233;;;;;;4185:4;3967:233;;;;::::0;3945:8:::1;:19;3954:9;3945:19;;;;;;;;;;;:255;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4249:11;4216:80;;4237:10;4216:80;;4226:9;4216:80;4262:7;4271:6;4279:5;4286:9;4216:80;;;;;;;;;:::i;:::-;;;;;;;;3054:1249;2303:20:4::0;:18;:20::i;:::-;2930:1373:11;;;;;:::o;5590:128::-;5656:4;5679:19;:32;5699:11;5679:32;;;;;;;;;;;;;;;;;;;;;;;;;5672:39;;5590:128;;;:::o;4652:880::-;2261:21:4;:19;:21::i;:::-;4719:17:11::1;4739:8;:19;4748:9;4739:19;;;;;;;;;;;4719:39;;4776:1;:8;;;;;;;;;;;;4768:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;4816:13;4832:1;:7;;;4816:23;;4849:11;4886:5;4872:10;;4864:5;:18;;;;:::i;:::-;4863:28;;;;:::i;:::-;4849:42;;4901:20;4932:3;4924:5;:11;;;;:::i;:::-;4901:34;;5018:65;5048:10;5060:1;:8;;;;;;;;;;;;5070:12;5018;;;;;;;;;;;:29;;;;:65;;;;;;:::i;:::-;5093:60;5123:10;5135:12;;;;;;;;;;;5149:3;5093:12;;;;;;;;;;;:29;;;;:60;;;;;;:::i;:::-;5213:1;:11;;;;;;;;;;;;5209:232;;;5249:1;:13;;;;;;;;;;;;5240:40;;;5281:1;:8;;;;;;;;;;;;5291:10;5303:1;:9;;;5314:1;:8;;;5240:87;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5209:232;;;5366:1;:13;;;;;;;;;;;;5358:39;;;5398:1;:8;;;;;;;;;;;;5408:10;5420:1;:9;;;5358:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5209:232;5462:5;5451:1;:8;;;:16;;;;;;;;;;;;;;;;;;5502:10;5483:42;;5491:9;5483:42;5514:5;5521:3;5483:42;;;;;;;:::i;:::-;;;;;;;;4709:823;;;;2303:20:4::0;:18;:20::i;:::-;4652:880:11;:::o;2231:179::-;1531:13:0;:11;:13::i;:::-;2341:1:11::1;2316:27;;:13;:27;;::::0;2308:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2389:13;2367:12;;:36;;;;;;;;;;;;;;;;;;2231:179:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2593:156:11:-;1531:13:0;:11;:13::i;:::-;2689:5:11::1;2674:11;:20;;2666:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2731:11;2718:10;:24;;;;2593:156:::0;:::o;624:25::-;;;;:::o;2755:144::-;1531:13:0;:11;:13::i;:::-;2885:7:11::1;2850:19;:32;2870:11;2850:32;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;2755:144:::0;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2416:171:11:-;1531:13:0;:11;:13::i;:::-;2526:1:11::1;2501:27;;:13;:27;;::::0;2493:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2567:13;2552:12;;:28;;;;;;;;;;;;;;;;;;2416:171:::0;:::o;760:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;567:27::-;;;;;;;;;;;;;:::o;4331:283::-;2261:21:4;:19;:21::i;:::-;4401:17:11::1;4421:8;:19;4430:9;4421:19;;;;;;;;;;;4401:39;;4458:1;:8;;;;;;;;;;;;4450:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;4517:10;4505:22;;:1;:8;;;;;;;;;;;;:22;;;4497:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;4564:5;4553:1;:8;;;:16;;;;;;;;;;;;;;;;;;4597:9;4585:22;;;;;;;;;;4391:223;2303:20:4::0;:18;:20::i;:::-;4331:283:11;:::o;1237:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;7:126:12:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1133:117::-;1242:1;1239;1232:12;1379:96;1416:7;1445:24;1463:5;1445:24;:::i;:::-;1434:35;;1379:96;;;:::o;1481:122::-;1554:24;1572:5;1554:24;:::i;:::-;1547:5;1544:35;1534:63;;1593:1;1590;1583:12;1534:63;1481:122;:::o;1609:139::-;1655:5;1693:6;1680:20;1671:29;;1709:33;1736:5;1709:33;:::i;:::-;1609:139;;;;:::o;1754:77::-;1791:7;1820:5;1809:16;;1754:77;;;:::o;1837:122::-;1910:24;1928:5;1910:24;:::i;:::-;1903:5;1900:35;1890:63;;1949:1;1946;1939:12;1890:63;1837:122;:::o;1965:139::-;2011:5;2049:6;2036:20;2027:29;;2065:33;2092:5;2065:33;:::i;:::-;1965:139;;;;:::o;2110:90::-;2144:7;2187:5;2180:13;2173:21;2162:32;;2110:90;;;:::o;2206:116::-;2276:21;2291:5;2276:21;:::i;:::-;2269:5;2266:32;2256:60;;2312:1;2309;2302:12;2256:60;2206:116;:::o;2328:133::-;2371:5;2409:6;2396:20;2387:29;;2425:30;2449:5;2425:30;:::i;:::-;2328:133;;;;:::o;2467:905::-;2559:6;2567;2575;2583;2591;2640:3;2628:9;2619:7;2615:23;2611:33;2608:120;;;2647:79;;:::i;:::-;2608:120;2767:1;2792:53;2837:7;2828:6;2817:9;2813:22;2792:53;:::i;:::-;2782:63;;2738:117;2894:2;2920:53;2965:7;2956:6;2945:9;2941:22;2920:53;:::i;:::-;2910:63;;2865:118;3022:2;3048:53;3093:7;3084:6;3073:9;3069:22;3048:53;:::i;:::-;3038:63;;2993:118;3150:2;3176:53;3221:7;3212:6;3201:9;3197:22;3176:53;:::i;:::-;3166:63;;3121:118;3278:3;3305:50;3347:7;3338:6;3327:9;3323:22;3305:50;:::i;:::-;3295:60;;3249:116;2467:905;;;;;;;;:::o;3378:329::-;3437:6;3486:2;3474:9;3465:7;3461:23;3457:32;3454:119;;;3492:79;;:::i;:::-;3454:119;3612:1;3637:53;3682:7;3673:6;3662:9;3658:22;3637:53;:::i;:::-;3627:63;;3583:117;3378:329;;;;:::o;3713:109::-;3794:21;3809:5;3794:21;:::i;:::-;3789:3;3782:34;3713:109;;:::o;3828:210::-;3915:4;3953:2;3942:9;3938:18;3930:26;;3966:65;4028:1;4017:9;4013:17;4004:6;3966:65;:::i;:::-;3828:210;;;;:::o;4044:329::-;4103:6;4152:2;4140:9;4131:7;4127:23;4123:32;4120:119;;;4158:79;;:::i;:::-;4120:119;4278:1;4303:53;4348:7;4339:6;4328:9;4324:22;4303:53;:::i;:::-;4293:63;;4249:117;4044:329;;;;:::o;4379:118::-;4466:24;4484:5;4466:24;:::i;:::-;4461:3;4454:37;4379:118;;:::o;4503:222::-;4596:4;4634:2;4623:9;4619:18;4611:26;;4647:71;4715:1;4704:9;4700:17;4691:6;4647:71;:::i;:::-;4503:222;;;;:::o;4731:468::-;4796:6;4804;4853:2;4841:9;4832:7;4828:23;4824:32;4821:119;;;4859:79;;:::i;:::-;4821:119;4979:1;5004:53;5049:7;5040:6;5029:9;5025:22;5004:53;:::i;:::-;4994:63;;4950:117;5106:2;5132:50;5174:7;5165:6;5154:9;5150:22;5132:50;:::i;:::-;5122:60;;5077:115;4731:468;;;;;:::o;5205:118::-;5292:24;5310:5;5292:24;:::i;:::-;5287:3;5280:37;5205:118;;:::o;5329:222::-;5422:4;5460:2;5449:9;5445:18;5437:26;;5473:71;5541:1;5530:9;5526:17;5517:6;5473:71;:::i;:::-;5329:222;;;;:::o;5557:862::-;5806:4;5844:3;5833:9;5829:19;5821:27;;5858:71;5926:1;5915:9;5911:17;5902:6;5858:71;:::i;:::-;5939:72;6007:2;5996:9;5992:18;5983:6;5939:72;:::i;:::-;6021;6089:2;6078:9;6074:18;6065:6;6021:72;:::i;:::-;6103;6171:2;6160:9;6156:18;6147:6;6103:72;:::i;:::-;6185:73;6253:3;6242:9;6238:19;6229:6;6185:73;:::i;:::-;6268:67;6330:3;6319:9;6315:19;6306:6;6268:67;:::i;:::-;6345;6407:3;6396:9;6392:19;6383:6;6345:67;:::i;:::-;5557:862;;;;;;;;;;:::o;6425:169::-;6509:11;6543:6;6538:3;6531:19;6583:4;6578:3;6574:14;6559:29;;6425:169;;;;:::o;6600:174::-;6740:26;6736:1;6728:6;6724:14;6717:50;6600:174;:::o;6780:366::-;6922:3;6943:67;7007:2;7002:3;6943:67;:::i;:::-;6936:74;;7019:93;7108:3;7019:93;:::i;:::-;7137:2;7132:3;7128:12;7121:19;;6780:366;;;:::o;7152:419::-;7318:4;7356:2;7345:9;7341:18;7333:26;;7405:9;7399:4;7395:20;7391:1;7380:9;7376:17;7369:47;7433:131;7559:4;7433:131;:::i;:::-;7425:139;;7152:419;;;:::o;7577:160::-;7717:12;7713:1;7705:6;7701:14;7694:36;7577:160;:::o;7743:366::-;7885:3;7906:67;7970:2;7965:3;7906:67;:::i;:::-;7899:74;;7982:93;8071:3;7982:93;:::i;:::-;8100:2;8095:3;8091:12;8084:19;;7743:366;;;:::o;8115:419::-;8281:4;8319:2;8308:9;8304:18;8296:26;;8368:9;8362:4;8358:20;8354:1;8343:9;8339:17;8332:47;8396:131;8522:4;8396:131;:::i;:::-;8388:139;;8115:419;;;:::o;8540:161::-;8680:13;8676:1;8668:6;8664:14;8657:37;8540:161;:::o;8707:366::-;8849:3;8870:67;8934:2;8929:3;8870:67;:::i;:::-;8863:74;;8946:93;9035:3;8946:93;:::i;:::-;9064:2;9059:3;9055:12;9048:19;;8707:366;;;:::o;9079:419::-;9245:4;9283:2;9272:9;9268:18;9260:26;;9332:9;9326:4;9322:20;9318:1;9307:9;9303:17;9296:47;9360:131;9486:4;9360:131;:::i;:::-;9352:139;;9079:419;;;:::o;9504:332::-;9625:4;9663:2;9652:9;9648:18;9640:26;;9676:71;9744:1;9733:9;9729:17;9720:6;9676:71;:::i;:::-;9757:72;9825:2;9814:9;9810:18;9801:6;9757:72;:::i;:::-;9504:332;;;;;:::o;9842:143::-;9899:5;9930:6;9924:13;9915:22;;9946:33;9973:5;9946:33;:::i;:::-;9842:143;;;;:::o;9991:351::-;10061:6;10110:2;10098:9;10089:7;10085:23;10081:32;10078:119;;;10116:79;;:::i;:::-;10078:119;10236:1;10261:64;10317:7;10308:6;10297:9;10293:22;10261:64;:::i;:::-;10251:74;;10207:128;9991:351;;;;:::o;10348:170::-;10488:22;10484:1;10476:6;10472:14;10465:46;10348:170;:::o;10524:366::-;10666:3;10687:67;10751:2;10746:3;10687:67;:::i;:::-;10680:74;;10763:93;10852:3;10763:93;:::i;:::-;10881:2;10876:3;10872:12;10865:19;;10524:366;;;:::o;10896:419::-;11062:4;11100:2;11089:9;11085:18;11077:26;;11149:9;11143:4;11139:20;11135:1;11124:9;11120:17;11113:47;11177:131;11303:4;11177:131;:::i;:::-;11169:139;;10896:419;;;:::o;11321:332::-;11442:4;11480:2;11469:9;11465:18;11457:26;;11493:71;11561:1;11550:9;11546:17;11537:6;11493:71;:::i;:::-;11574:72;11642:2;11631:9;11627:18;11618:6;11574:72;:::i;:::-;11321:332;;;;;:::o;11659:137::-;11713:5;11744:6;11738:13;11729:22;;11760:30;11784:5;11760:30;:::i;:::-;11659:137;;;;:::o;11802:345::-;11869:6;11918:2;11906:9;11897:7;11893:23;11889:32;11886:119;;;11924:79;;:::i;:::-;11886:119;12044:1;12069:61;12122:7;12113:6;12102:9;12098:22;12069:61;:::i;:::-;12059:71;;12015:125;11802:345;;;;:::o;12153:162::-;12293:14;12289:1;12281:6;12277:14;12270:38;12153:162;:::o;12321:366::-;12463:3;12484:67;12548:2;12543:3;12484:67;:::i;:::-;12477:74;;12560:93;12649:3;12560:93;:::i;:::-;12678:2;12673:3;12669:12;12662:19;;12321:366;;;:::o;12693:419::-;12859:4;12897:2;12886:9;12882:18;12874:26;;12946:9;12940:4;12936:20;12932:1;12921:9;12917:17;12910:47;12974:131;13100:4;12974:131;:::i;:::-;12966:139;;12693:419;;;:::o;13118:177::-;13258:29;13254:1;13246:6;13242:14;13235:53;13118:177;:::o;13301:366::-;13443:3;13464:67;13528:2;13523:3;13464:67;:::i;:::-;13457:74;;13540:93;13629:3;13540:93;:::i;:::-;13658:2;13653:3;13649:12;13642:19;;13301:366;;;:::o;13673:419::-;13839:4;13877:2;13866:9;13862:18;13854:26;;13926:9;13920:4;13916:20;13912:1;13901:9;13897:17;13890:47;13954:131;14080:4;13954:131;:::i;:::-;13946:139;;13673:419;;;:::o;14098:143::-;14155:5;14186:6;14180:13;14171:22;;14202:33;14229:5;14202:33;:::i;:::-;14098:143;;;;:::o;14247:351::-;14317:6;14366:2;14354:9;14345:7;14341:23;14337:32;14334:119;;;14372:79;;:::i;:::-;14334:119;14492:1;14517:64;14573:7;14564:6;14553:9;14549:22;14517:64;:::i;:::-;14507:74;;14463:128;14247:351;;;;:::o;14604:159::-;14744:11;14740:1;14732:6;14728:14;14721:35;14604:159;:::o;14769:365::-;14911:3;14932:66;14996:1;14991:3;14932:66;:::i;:::-;14925:73;;15007:93;15096:3;15007:93;:::i;:::-;15125:2;15120:3;15116:12;15109:19;;14769:365;;;:::o;15140:419::-;15306:4;15344:2;15333:9;15329:18;15321:26;;15393:9;15387:4;15383:20;15379:1;15368:9;15364:17;15357:47;15421:131;15547:4;15421:131;:::i;:::-;15413:139;;15140:419;;;:::o;15565:180::-;15613:77;15610:1;15603:88;15710:4;15707:1;15700:15;15734:4;15731:1;15724:15;15751:233;15790:3;15813:24;15831:5;15813:24;:::i;:::-;15804:33;;15859:66;15852:5;15849:77;15846:103;;15929:18;;:::i;:::-;15846:103;15976:1;15969:5;15965:13;15958:20;;15751:233;;;:::o;15990:541::-;16161:4;16199:3;16188:9;16184:19;16176:27;;16213:71;16281:1;16270:9;16266:17;16257:6;16213:71;:::i;:::-;16294:72;16362:2;16351:9;16347:18;16338:6;16294:72;:::i;:::-;16376;16444:2;16433:9;16429:18;16420:6;16376:72;:::i;:::-;16458:66;16520:2;16509:9;16505:18;16496:6;16458:66;:::i;:::-;15990:541;;;;;;;:::o;16537:166::-;16677:18;16673:1;16665:6;16661:14;16654:42;16537:166;:::o;16709:366::-;16851:3;16872:67;16936:2;16931:3;16872:67;:::i;:::-;16865:74;;16948:93;17037:3;16948:93;:::i;:::-;17066:2;17061:3;17057:12;17050:19;;16709:366;;;:::o;17081:419::-;17247:4;17285:2;17274:9;17270:18;17262:26;;17334:9;17328:4;17324:20;17320:1;17309:9;17305:17;17298:47;17362:131;17488:4;17362:131;:::i;:::-;17354:139;;17081:419;;;:::o;17506:410::-;17546:7;17569:20;17587:1;17569:20;:::i;:::-;17564:25;;17603:20;17621:1;17603:20;:::i;:::-;17598:25;;17658:1;17655;17651:9;17680:30;17698:11;17680:30;:::i;:::-;17669:41;;17859:1;17850:7;17846:15;17843:1;17840:22;17820:1;17813:9;17793:83;17770:139;;17889:18;;:::i;:::-;17770:139;17554:362;17506:410;;;;:::o;17922:180::-;17970:77;17967:1;17960:88;18067:4;18064:1;18057:15;18091:4;18088:1;18081:15;18108:185;18148:1;18165:20;18183:1;18165:20;:::i;:::-;18160:25;;18199:20;18217:1;18199:20;:::i;:::-;18194:25;;18238:1;18228:35;;18243:18;;:::i;:::-;18228:35;18285:1;18282;18278:9;18273:14;;18108:185;;;;:::o;18299:194::-;18339:4;18359:20;18377:1;18359:20;:::i;:::-;18354:25;;18393:20;18411:1;18393:20;:::i;:::-;18388:25;;18437:1;18434;18430:9;18422:17;;18461:1;18455:4;18452:11;18449:37;;;18466:18;;:::i;:::-;18449:37;18299:194;;;;:::o;18499:168::-;18582:11;18616:6;18611:3;18604:19;18656:4;18651:3;18647:14;18632:29;;18499:168;;;;:::o;18673:114::-;;:::o;18793:362::-;18934:3;18955:65;19018:1;19013:3;18955:65;:::i;:::-;18948:72;;19029:93;19118:3;19029:93;:::i;:::-;19147:1;19142:3;19138:11;19131:18;;18793:362;;;:::o;19161:859::-;19438:4;19476:3;19465:9;19461:19;19453:27;;19490:71;19558:1;19547:9;19543:17;19534:6;19490:71;:::i;:::-;19571:72;19639:2;19628:9;19624:18;19615:6;19571:72;:::i;:::-;19653;19721:2;19710:9;19706:18;19697:6;19653:72;:::i;:::-;19735;19803:2;19792:9;19788:18;19779:6;19735:72;:::i;:::-;19855:9;19849:4;19845:20;19839:3;19828:9;19824:19;19817:49;19883:130;20008:4;19883:130;:::i;:::-;19875:138;;19161:859;;;;;;;:::o;20026:442::-;20175:4;20213:2;20202:9;20198:18;20190:26;;20226:71;20294:1;20283:9;20279:17;20270:6;20226:71;:::i;:::-;20307:72;20375:2;20364:9;20360:18;20351:6;20307:72;:::i;:::-;20389;20457:2;20446:9;20442:18;20433:6;20389:72;:::i;:::-;20026:442;;;;;;:::o;20474:332::-;20595:4;20633:2;20622:9;20618:18;20610:26;;20646:71;20714:1;20703:9;20699:17;20690:6;20646:71;:::i;:::-;20727:72;20795:2;20784:9;20780:18;20771:6;20727:72;:::i;:::-;20474:332;;;;;:::o;20812:159::-;20952:11;20948:1;20940:6;20936:14;20929:35;20812:159;:::o;20977:365::-;21119:3;21140:66;21204:1;21199:3;21140:66;:::i;:::-;21133:73;;21215:93;21304:3;21215:93;:::i;:::-;21333:2;21328:3;21324:12;21317:19;;20977:365;;;:::o;21348:419::-;21514:4;21552:2;21541:9;21537:18;21529:26;;21601:9;21595:4;21591:20;21587:1;21576:9;21572:17;21565:47;21629:131;21755:4;21629:131;:::i;:::-;21621:139;;21348:419;;;:::o;21773:159::-;21913:11;21909:1;21901:6;21897:14;21890:35;21773:159;:::o;21938:365::-;22080:3;22101:66;22165:1;22160:3;22101:66;:::i;:::-;22094:73;;22176:93;22265:3;22176:93;:::i;:::-;22294:2;22289:3;22285:12;22278:19;;21938:365;;;:::o;22309:419::-;22475:4;22513:2;22502:9;22498:18;22490:26;;22562:9;22556:4;22552:20;22548:1;22537:9;22533:17;22526:47;22590:131;22716:4;22590:131;:::i;:::-;22582:139;;22309:419;;;:::o;22734:160::-;22874:12;22870:1;22862:6;22858:14;22851:36;22734:160;:::o;22900:366::-;23042:3;23063:67;23127:2;23122:3;23063:67;:::i;:::-;23056:74;;23139:93;23228:3;23139:93;:::i;:::-;23257:2;23252:3;23248:12;23241:19;;22900:366;;;:::o;23272:419::-;23438:4;23476:2;23465:9;23461:18;23453:26;;23525:9;23519:4;23515:20;23511:1;23500:9;23496:17;23489:47;23553:131;23679:4;23553:131;:::i;:::-;23545:139;;23272:419;;;:::o;23697:181::-;23837:33;23833:1;23825:6;23821:14;23814:57;23697:181;:::o;23884:366::-;24026:3;24047:67;24111:2;24106:3;24047:67;:::i;:::-;24040:74;;24123:93;24212:3;24123:93;:::i;:::-;24241:2;24236:3;24232:12;24225:19;;23884:366;;;:::o;24256:419::-;24422:4;24460:2;24449:9;24445:18;24437:26;;24509:9;24503:4;24499:20;24495:1;24484:9;24480:17;24473:47;24537:131;24663:4;24537:131;:::i;:::-;24529:139;;24256:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1726600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowedNFTContracts(address)": "2922",
								"buyNFT(uint256)": "infinite",
								"delistNFT(uint256)": "76792",
								"feeCollector()": "2530",
								"feePercent()": "2514",
								"isAllowedNFT(address)": "2938",
								"listNFT(address,uint256,uint256,uint256,bool)": "infinite",
								"listings(uint256)": "infinite",
								"owner()": "2559",
								"paymentToken()": "infinite",
								"renounceOwnership()": "infinite",
								"setAllowedNFTContract(address,bool)": "infinite",
								"setFeeCollector(address)": "infinite",
								"setFeePercent(uint256)": "infinite",
								"setPaymentToken(address)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 420,
									"end": 5720,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1614,
									"end": 2202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1732,
									"end": 1744,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1793,
									"end": 1794,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1795,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1769,
									"end": 1795,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1769,
									"end": 1781,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1769,
									"end": 1795,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1769,
									"end": 1795,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1769,
									"end": 1795,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1761,
									"end": 1810,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1761,
									"end": 1810,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1853,
									"end": 1854,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1828,
									"end": 1855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1828,
									"end": 1855,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1828,
									"end": 1841,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1828,
									"end": 1855,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1828,
									"end": 1855,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1820,
									"end": 1877,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1820,
									"end": 1877,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1920,
									"end": 1921,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1895,
									"end": 1922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1895,
									"end": 1922,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1895,
									"end": 1908,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1895,
									"end": 1922,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1895,
									"end": 1922,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1895,
									"end": 1922,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1887,
									"end": 1944,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1887,
									"end": 1944,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1977,
									"end": 1982,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2710"
								},
								{
									"begin": 1962,
									"end": 1973,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1982,
									"modifierDepth": 1,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1962,
									"end": 1982,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 1954,
									"end": 2007,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1954,
									"end": 2007,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2040,
									"end": 2053,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2030,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 2018,
									"end": 2030,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2018,
									"end": 2054,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2079,
									"end": 2092,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2076,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2064,
									"end": 2076,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2064,
									"end": 2092,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2115,
									"end": 2126,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2102,
									"end": 2112,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 2102,
									"end": 2126,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2102,
									"end": 2126,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2102,
									"end": 2126,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2102,
									"end": 2126,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2178,
									"end": 2179,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 2158,
									"end": 2175,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 2158,
									"end": 2179,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2179,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2179,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 2158,
									"end": 2179,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1614,
									"end": 2202,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1302,
									"end": 1308,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1310,
									"end": 1316,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1375,
									"end": 1378,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1363,
									"end": 1372,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1354,
									"end": 1361,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1350,
									"end": 1373,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1382,
									"end": 1461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1382,
									"end": 1461,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1343,
									"end": 1463,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1502,
									"end": 1503,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 1583,
									"end": 1590,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1574,
									"end": 1580,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1563,
									"end": 1572,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1559,
									"end": 1581,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1527,
									"end": 1591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 1527,
									"end": 1591,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 1517,
									"end": 1591,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1473,
									"end": 1601,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1640,
									"end": 1642,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 1722,
									"end": 1729,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1702,
									"end": 1711,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1698,
									"end": 1720,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1666,
									"end": 1730,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 1666,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1656,
									"end": 1730,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1611,
									"end": 1740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1779,
									"end": 1781,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 1861,
									"end": 1868,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1841,
									"end": 1850,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1805,
									"end": 1869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 1805,
									"end": 1869,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1795,
									"end": 1869,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1750,
									"end": 1879,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1918,
									"end": 1920,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2000,
									"end": 2007,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1991,
									"end": 1997,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1980,
									"end": 1989,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1976,
									"end": 1998,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1944,
									"end": 2008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1944,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1934,
									"end": 2008,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1889,
									"end": 2018,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1205,
									"end": 2025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2136,
									"end": 2141,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2118,
									"end": 2142,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2118,
									"end": 2142,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2113,
									"end": 2116,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2106,
									"end": 2143,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2031,
									"end": 2149,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2031,
									"end": 2149,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2286,
									"end": 2288,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2275,
									"end": 2284,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2271,
									"end": 2289,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2263,
									"end": 2289,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2263,
									"end": 2289,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2367,
									"end": 2368,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2356,
									"end": 2365,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2352,
									"end": 2369,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2343,
									"end": 2349,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 2299,
									"end": 2370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2299,
									"end": 2370,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2155,
									"end": 2377,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2155,
									"end": 2377,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2478,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2507,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2496,
									"end": 2499,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2489,
									"end": 2508,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2541,
									"end": 2545,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2536,
									"end": 2539,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2532,
									"end": 2546,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2517,
									"end": 2546,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2517,
									"end": 2546,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2552,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2383,
									"end": 2552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2718,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2558,
									"end": 2718,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2698,
									"end": 2710,
									"name": "PUSH",
									"source": 12,
									"value": "6F776E6572207A65726F00000000000000000000000000000000000000000000"
								},
								{
									"begin": 2694,
									"end": 2695,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2682,
									"end": 2696,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2675,
									"end": 2711,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2718,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2718,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2724,
									"end": 3090,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 2724,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2866,
									"end": 2869,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2887,
									"end": 2954,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 2951,
									"end": 2953,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 2946,
									"end": 2949,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2887,
									"end": 2954,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2887,
									"end": 2954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2887,
									"end": 2954,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 2887,
									"end": 2954,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2954,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2880,
									"end": 2954,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2963,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3052,
									"end": 3055,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2963,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2963,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2963,
									"end": 3056,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2963,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3081,
									"end": 3083,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3076,
									"end": 3079,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3072,
									"end": 3084,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3065,
									"end": 3084,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3065,
									"end": 3084,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2724,
									"end": 3090,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2724,
									"end": 3090,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2724,
									"end": 3090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2724,
									"end": 3090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3515,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 3096,
									"end": 3515,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3262,
									"end": 3266,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3300,
									"end": 3302,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3289,
									"end": 3298,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3285,
									"end": 3303,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3277,
									"end": 3303,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3277,
									"end": 3303,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3349,
									"end": 3358,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3343,
									"end": 3347,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3339,
									"end": 3359,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3335,
									"end": 3336,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3324,
									"end": 3333,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3320,
									"end": 3337,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3313,
									"end": 3360,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3377,
									"end": 3508,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3503,
									"end": 3507,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3377,
									"end": 3508,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3377,
									"end": 3508,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3377,
									"end": 3508,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 3377,
									"end": 3508,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3369,
									"end": 3508,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3369,
									"end": 3508,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3515,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3515,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3515,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3096,
									"end": 3515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3521,
									"end": 3688,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3521,
									"end": 3688,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3661,
									"end": 3680,
									"name": "PUSH",
									"source": 12,
									"value": "7061796D656E74546F6B656E207A65726F000000000000000000000000000000"
								},
								{
									"begin": 3657,
									"end": 3658,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3649,
									"end": 3655,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3645,
									"end": 3659,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3638,
									"end": 3681,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3521,
									"end": 3688,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3521,
									"end": 3688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3694,
									"end": 4060,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3694,
									"end": 4060,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3836,
									"end": 3839,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3857,
									"end": 3924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3921,
									"end": 3923,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 3916,
									"end": 3919,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3857,
									"end": 3924,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3857,
									"end": 3924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3857,
									"end": 3924,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3857,
									"end": 3924,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3850,
									"end": 3924,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3850,
									"end": 3924,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3933,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 4022,
									"end": 4025,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3933,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3933,
									"end": 4026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3933,
									"end": 4026,
									"name": "tag",
									"source": 12,
									"value": "88"
								},
								{
									"begin": 3933,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4051,
									"end": 4053,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4046,
									"end": 4049,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4042,
									"end": 4054,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4035,
									"end": 4054,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4035,
									"end": 4054,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3694,
									"end": 4060,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3694,
									"end": 4060,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3694,
									"end": 4060,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3694,
									"end": 4060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4066,
									"end": 4485,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4066,
									"end": 4485,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4232,
									"end": 4236,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4270,
									"end": 4272,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4259,
									"end": 4268,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4255,
									"end": 4273,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4273,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4247,
									"end": 4273,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4319,
									"end": 4328,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4313,
									"end": 4317,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4309,
									"end": 4329,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4305,
									"end": 4306,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4294,
									"end": 4303,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4290,
									"end": 4307,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4283,
									"end": 4330,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4347,
									"end": 4478,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4473,
									"end": 4477,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4347,
									"end": 4478,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 4347,
									"end": 4478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4347,
									"end": 4478,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 4347,
									"end": 4478,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4339,
									"end": 4478,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4339,
									"end": 4478,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4066,
									"end": 4485,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4066,
									"end": 4485,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4066,
									"end": 4485,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4066,
									"end": 4485,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4491,
									"end": 4658,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 4491,
									"end": 4658,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 4650,
									"name": "PUSH",
									"source": 12,
									"value": "666565436F6C6C6563746F72207A65726F000000000000000000000000000000"
								},
								{
									"begin": 4627,
									"end": 4628,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4619,
									"end": 4625,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4615,
									"end": 4629,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4608,
									"end": 4651,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4491,
									"end": 4658,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4491,
									"end": 4658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4664,
									"end": 5030,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 4664,
									"end": 5030,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4806,
									"end": 4809,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4827,
									"end": 4894,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4891,
									"end": 4893,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 4886,
									"end": 4889,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4827,
									"end": 4894,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4827,
									"end": 4894,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4827,
									"end": 4894,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 4827,
									"end": 4894,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4894,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4820,
									"end": 4894,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4903,
									"end": 4996,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4992,
									"end": 4995,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4903,
									"end": 4996,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 4903,
									"end": 4996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4903,
									"end": 4996,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 4903,
									"end": 4996,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5021,
									"end": 5023,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5016,
									"end": 5019,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5012,
									"end": 5024,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5005,
									"end": 5024,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5005,
									"end": 5024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4664,
									"end": 5030,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4664,
									"end": 5030,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4664,
									"end": 5030,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4664,
									"end": 5030,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5455,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 5036,
									"end": 5455,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5202,
									"end": 5206,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5240,
									"end": 5242,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5229,
									"end": 5238,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5225,
									"end": 5243,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5217,
									"end": 5243,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5217,
									"end": 5243,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5289,
									"end": 5298,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5283,
									"end": 5287,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5279,
									"end": 5299,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 5275,
									"end": 5276,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5264,
									"end": 5273,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5260,
									"end": 5277,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5253,
									"end": 5300,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5317,
									"end": 5448,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 5443,
									"end": 5447,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5317,
									"end": 5448,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 5317,
									"end": 5448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5317,
									"end": 5448,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 5317,
									"end": 5448,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5309,
									"end": 5448,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5309,
									"end": 5448,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5455,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5455,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5455,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5036,
									"end": 5455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5461,
									"end": 5631,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 5461,
									"end": 5631,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5601,
									"end": 5623,
									"name": "PUSH",
									"source": 12,
									"value": "66656550657263656E74206D6178203130303030000000000000000000000000"
								},
								{
									"begin": 5597,
									"end": 5598,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5589,
									"end": 5595,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5585,
									"end": 5599,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5578,
									"end": 5624,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5461,
									"end": 5631,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5461,
									"end": 5631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5637,
									"end": 6003,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 5637,
									"end": 6003,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5779,
									"end": 5782,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5800,
									"end": 5867,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 5864,
									"end": 5866,
									"name": "PUSH",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 5859,
									"end": 5862,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5800,
									"end": 5867,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 5800,
									"end": 5867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5800,
									"end": 5867,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 5800,
									"end": 5867,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5793,
									"end": 5867,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5793,
									"end": 5867,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5876,
									"end": 5969,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 5965,
									"end": 5968,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5876,
									"end": 5969,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 5876,
									"end": 5969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5876,
									"end": 5969,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 5876,
									"end": 5969,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5994,
									"end": 5996,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5989,
									"end": 5992,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5985,
									"end": 5997,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5978,
									"end": 5997,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5978,
									"end": 5997,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5637,
									"end": 6003,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5637,
									"end": 6003,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5637,
									"end": 6003,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5637,
									"end": 6003,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6009,
									"end": 6428,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 6009,
									"end": 6428,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6175,
									"end": 6179,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6213,
									"end": 6215,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6202,
									"end": 6211,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6198,
									"end": 6216,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6190,
									"end": 6216,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6190,
									"end": 6216,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6262,
									"end": 6271,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6252,
									"end": 6272,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 6248,
									"end": 6249,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6237,
									"end": 6246,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6233,
									"end": 6250,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6226,
									"end": 6273,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6290,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 6416,
									"end": 6420,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6290,
									"end": 6421,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 6290,
									"end": 6421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6290,
									"end": 6421,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 6290,
									"end": 6421,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6421,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6282,
									"end": 6421,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6009,
									"end": 6428,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6009,
									"end": 6428,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6009,
									"end": 6428,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6009,
									"end": 6428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 5720,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb62d52665b095edbbfe67be3ca40b7a67d8fb9f44cfcc207bf226e7787f3d2864736f6c634300081e0033",
									".code": [
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "80DF50A8"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "C415B95C"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "C415B95C"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "CB917B9C"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "DE74E57B"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "80DF50A8"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "A42DCE80"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "C0F6AE97"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "6A326AB1"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "6A326AB1"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "7CE3489B"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "7FD6F15C"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "3013CE29"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "3AE6064B"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "4E9B8C5D"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "51ED8288"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 5720,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 517,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 517,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 2930,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2930,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 5590,
											"end": 5718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 5590,
											"end": 5718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 5590,
											"end": 5718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4652,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4652,
											"end": 5532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2231,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2231,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2593,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2593,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 624,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 624,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2755,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2755,
											"end": 2899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 2416,
											"end": 2587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2416,
											"end": 2587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 760,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 760,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 760,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 567,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 567,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 4331,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4331,
											"end": 4614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1237,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1237,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1237,
											"end": 1280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 517,
											"end": 543,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 517,
											"end": 543,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 517,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3072,
											"end": 3091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3103,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3072,
											"end": 3104,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 3064,
											"end": 3133,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 3064,
											"end": 3133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3159,
											"end": 3160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3156,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3151,
											"end": 3160,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 3143,
											"end": 3175,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 3143,
											"end": 3175,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3190,
											"end": 3199,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3232,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3229,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3223,
											"end": 3233,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3215,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 3215,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3307,
											"end": 3323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3346,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3307,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3307,
											"end": 3347,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3411,
											"end": 3417,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3376,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3386,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FDD58E"
										},
										{
											"begin": 3387,
											"end": 3397,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3399,
											"end": 3406,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 3369,
											"end": 3407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3369,
											"end": 3407,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3369,
											"end": 3407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3417,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3369,
											"end": 3417,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3361,
											"end": 3442,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3361,
											"end": 3442,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3471,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3464,
											"end": 3488,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 3489,
											"end": 3499,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3509,
											"end": 3513,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3464,
											"end": 3515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3464,
											"end": 3515,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3464,
											"end": 3515,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 3456,
											"end": 3532,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3456,
											"end": 3532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3201,
											"end": 3543,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3581,
											"end": 3582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3571,
											"end": 3577,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3582,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3563,
											"end": 3614,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 3563,
											"end": 3614,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3664,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3665,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3628,
											"end": 3665,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 3724,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3724,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3701,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6352211E"
										},
										{
											"begin": 3702,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 3687,
											"end": 3710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3687,
											"end": 3710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3687,
											"end": 3710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3687,
											"end": 3724,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3687,
											"end": 3724,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 3679,
											"end": 3738,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3679,
											"end": 3738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3766,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3760,
											"end": 3783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E985E9C5"
										},
										{
											"begin": 3784,
											"end": 3794,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3804,
											"end": 3808,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3760,
											"end": 3810,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3760,
											"end": 3810,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 3760,
											"end": 3810,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3858,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3858,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3760,
											"end": 3858,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3858,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3853,
											"end": 3857,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3858,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "81812FC"
										},
										{
											"begin": 3833,
											"end": 3840,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 3814,
											"end": 3841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3814,
											"end": 3841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3814,
											"end": 3841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3858,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3814,
											"end": 3858,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3858,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 3760,
											"end": 3858,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 3752,
											"end": 3875,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3752,
											"end": 3875,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3886,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 3186,
											"end": 3886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3916,
											"end": 3933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 3916,
											"end": 3935,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3916,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3997,
											"end": 4007,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4045,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4068,
											"end": 4075,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 4103,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4124,
											"end": 4129,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4163,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4189,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 4200,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3954,
											"end": 3963,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3964,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 4200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4260,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4237,
											"end": 4247,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4226,
											"end": 4235,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D1ED8900AFB99183D6684EF82E558EC94D3FEBA62CFF25B765B503BD5505E09F"
										},
										{
											"begin": 4262,
											"end": 4269,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4271,
											"end": 4277,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4279,
											"end": 4284,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4286,
											"end": 4295,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 4216,
											"end": 4296,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4216,
											"end": 4296,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 11
										},
										{
											"begin": 3054,
											"end": 4303,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2930,
											"end": 4303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5698,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5710,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5679,
											"end": 5711,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5672,
											"end": 5711,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5672,
											"end": 5711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5590,
											"end": 5718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4757,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4758,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4719,
											"end": 4758,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4719,
											"end": 4758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4777,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4776,
											"end": 4784,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 4768,
											"end": 4805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 4768,
											"end": 4805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4833,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4832,
											"end": 4839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4832,
											"end": 4839,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4816,
											"end": 4839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4886,
											"end": 4891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 4872,
											"end": 4882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4872,
											"end": 4882,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 4869,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 4882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4864,
											"end": 4882,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 4882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 4882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 4864,
											"end": 4882,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4864,
											"end": 4882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 4864,
											"end": 4882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4863,
											"end": 4891,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 4863,
											"end": 4891,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 4863,
											"end": 4891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4849,
											"end": 4891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4935,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4929,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 4924,
											"end": 4935,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 4924,
											"end": 4935,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4924,
											"end": 4935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 4924,
											"end": 4935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4901,
											"end": 4935,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5048,
											"end": 5058,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5061,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5060,
											"end": 5068,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5070,
											"end": 5082,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5018,
											"end": 5047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5018,
											"end": 5047,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 5018,
											"end": 5083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5123,
											"end": 5133,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5135,
											"end": 5147,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5152,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5093,
											"end": 5122,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5122,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 5093,
											"end": 5122,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 5093,
											"end": 5153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5213,
											"end": 5224,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5249,
											"end": 5262,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5240,
											"end": 5280,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5280,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "F242432A"
										},
										{
											"begin": 5281,
											"end": 5282,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5281,
											"end": 5289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5301,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5304,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5312,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5303,
											"end": 5312,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5303,
											"end": 5312,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5314,
											"end": 5315,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 5314,
											"end": 5322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5314,
											"end": 5322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5314,
											"end": 5322,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 5240,
											"end": 5327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5327,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5366,
											"end": 5379,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5397,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "42842E0E"
										},
										{
											"begin": 5398,
											"end": 5399,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5398,
											"end": 5406,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5418,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5421,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5420,
											"end": 5429,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5429,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 5358,
											"end": 5430,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5358,
											"end": 5430,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 5209,
											"end": 5441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5462,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5451,
											"end": 5452,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5451,
											"end": 5459,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5451,
											"end": 5467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5502,
											"end": 5512,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5500,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "41BFE3082D481C8F62F6ED145F1D8CBEC0DAEBCB4D750AE5C42A51946551D13"
										},
										{
											"begin": 5514,
											"end": 5519,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5521,
											"end": 5524,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 5483,
											"end": 5525,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5483,
											"end": 5525,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4709,
											"end": 5532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4709,
											"end": 5532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4709,
											"end": 5532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4709,
											"end": 5532,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5532,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4652,
											"end": 5532,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2341,
											"end": 2342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2316,
											"end": 2343,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2316,
											"end": 2343,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2308,
											"end": 2357,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2308,
											"end": 2357,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2389,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2367,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2367,
											"end": 2403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2231,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 2674,
											"end": 2685,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 2694,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2674,
											"end": 2694,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2666,
											"end": 2708,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2666,
											"end": 2708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2742,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2718,
											"end": 2742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2593,
											"end": 2749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 624,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 624,
											"end": 649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2885,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2881,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2850,
											"end": 2892,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2755,
											"end": 2899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2526,
											"end": 2527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2501,
											"end": 2528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2501,
											"end": 2514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2501,
											"end": 2528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2501,
											"end": 2528,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2501,
											"end": 2528,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2493,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2493,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2567,
											"end": 2580,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 2552,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2552,
											"end": 2580,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2416,
											"end": 2587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 760,
											"end": 811,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 760,
											"end": 811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 594,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 567,
											"end": 594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4401,
											"end": 4418,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4439,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4440,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4440,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4401,
											"end": 4440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4459,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4458,
											"end": 4466,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 4450,
											"end": 4487,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 4450,
											"end": 4487,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4517,
											"end": 4527,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4505,
											"end": 4527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4505,
											"end": 4513,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4505,
											"end": 4527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4527,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 4497,
											"end": 4542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 4497,
											"end": 4542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4564,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4553,
											"end": 4554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4553,
											"end": 4561,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4553,
											"end": 4569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4597,
											"end": 4606,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "C0C55A6EDEAD4433D18CB1E287A0A20A2FA003A6F483BC9823D2E504D70D1C67"
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4585,
											"end": 4607,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 4391,
											"end": 4614,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4331,
											"end": 4614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4331,
											"end": 4614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 1133,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1243,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1240,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1416,
											"end": 1423,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 1445,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1445,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1379,
											"end": 1475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1379,
											"end": 1475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 1572,
											"end": 1577,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1554,
											"end": 1578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 1554,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1552,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1544,
											"end": 1579,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1593,
											"end": 1594,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1591,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 1534,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1481,
											"end": 1603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1481,
											"end": 1603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1655,
											"end": 1660,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1680,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1736,
											"end": 1741,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1709,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1709,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1609,
											"end": 1748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1609,
											"end": 1748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1831,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1754,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1825,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1825,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1809,
											"end": 1825,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1831,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1837,
											"end": 1959,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 1837,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 1928,
											"end": 1933,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1910,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 1910,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1903,
											"end": 1908,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1935,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 1890,
											"end": 1953,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1949,
											"end": 1950,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1951,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1953,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 1890,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1837,
											"end": 1959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1837,
											"end": 1959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2011,
											"end": 2016,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2056,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2056,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2092,
											"end": 2097,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 2065,
											"end": 2098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2065,
											"end": 2098,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2065,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 2104,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1965,
											"end": 2104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2110,
											"end": 2200,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2110,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2180,
											"end": 2193,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2173,
											"end": 2194,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2162,
											"end": 2194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2162,
											"end": 2194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2110,
											"end": 2200,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2110,
											"end": 2200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2110,
											"end": 2200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2110,
											"end": 2200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2322,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2206,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2276,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2276,
											"end": 2297,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2276,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2269,
											"end": 2274,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2266,
											"end": 2298,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2310,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2314,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2256,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2328,
											"end": 2461,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2328,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2376,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2415,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2416,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2449,
											"end": 2454,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2425,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2455,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2425,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2328,
											"end": 2461,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2328,
											"end": 2461,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2328,
											"end": 2461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2328,
											"end": 2461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2328,
											"end": 2461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2559,
											"end": 2565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2581,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2589,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2643,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2626,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2615,
											"end": 2638,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2611,
											"end": 2644,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2608,
											"end": 2728,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2608,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 2608,
											"end": 2728,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2647,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 2647,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 2647,
											"end": 2726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2647,
											"end": 2726,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 2647,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2608,
											"end": 2728,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 2608,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 2837,
											"end": 2844,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2828,
											"end": 2834,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2817,
											"end": 2826,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2813,
											"end": 2835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2792,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 2792,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2792,
											"end": 2845,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 2792,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2845,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2782,
											"end": 2845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2738,
											"end": 2855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2894,
											"end": 2896,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2965,
											"end": 2972,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2956,
											"end": 2962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 2963,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2920,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2920,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2920,
											"end": 2973,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2920,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2973,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2910,
											"end": 2973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2865,
											"end": 2983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3022,
											"end": 3024,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3048,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 3093,
											"end": 3100,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3069,
											"end": 3091,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 3048,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3101,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 3048,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3038,
											"end": 3101,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3038,
											"end": 3101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 3111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3150,
											"end": 3152,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 3176,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3278,
											"end": 3281,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3305,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3344,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3345,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3305,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3305,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3305,
											"end": 3355,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 3305,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3295,
											"end": 3355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3365,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2467,
											"end": 3372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3707,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 3378,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3437,
											"end": 3443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3488,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3474,
											"end": 3483,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3472,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3461,
											"end": 3484,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3457,
											"end": 3489,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 3573,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3454,
											"end": 3573,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3492,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 3492,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3571,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3492,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 3573,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3454,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3662,
											"end": 3671,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3658,
											"end": 3680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3637,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 3637,
											"end": 3690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3637,
											"end": 3690,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3637,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3627,
											"end": 3690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3627,
											"end": 3690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3707,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3707,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3713,
											"end": 3822,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 3713,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3809,
											"end": 3814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 3794,
											"end": 3815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3794,
											"end": 3815,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3794,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3789,
											"end": 3792,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3816,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3713,
											"end": 3822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3713,
											"end": 3822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3713,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4038,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 3828,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 3919,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3955,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3942,
											"end": 3951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3938,
											"end": 3956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 3956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 3956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4026,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4030,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4004,
											"end": 4010,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 3966,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3966,
											"end": 4031,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 3966,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4038,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4038,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3828,
											"end": 4038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4373,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 4044,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4152,
											"end": 4154,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4140,
											"end": 4149,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4138,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4127,
											"end": 4150,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4123,
											"end": 4155,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4239,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 4120,
											"end": 4239,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 4158,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 4158,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4237,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 4158,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4120,
											"end": 4239,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 4120,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4278,
											"end": 4279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 4348,
											"end": 4355,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4339,
											"end": 4345,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4328,
											"end": 4337,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4324,
											"end": 4346,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 4303,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4303,
											"end": 4356,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 4303,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4293,
											"end": 4356,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4293,
											"end": 4356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4249,
											"end": 4366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4373,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4373,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4497,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 4379,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4484,
											"end": 4489,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4490,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 4466,
											"end": 4490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4490,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4466,
											"end": 4490,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4464,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4454,
											"end": 4491,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4497,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4379,
											"end": 4497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4725,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 4503,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4596,
											"end": 4600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4637,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4637,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4611,
											"end": 4637,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4647,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4715,
											"end": 4716,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4713,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4700,
											"end": 4717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4691,
											"end": 4697,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4647,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 4647,
											"end": 4718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4647,
											"end": 4718,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4647,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4725,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4725,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 5199,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 4731,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4796,
											"end": 4802,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4853,
											"end": 4855,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4850,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4839,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4828,
											"end": 4851,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4824,
											"end": 4856,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4940,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 4821,
											"end": 4940,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 4859,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 4859,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4859,
											"end": 4938,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 4859,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4940,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 4821,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4979,
											"end": 4980,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5049,
											"end": 5056,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5040,
											"end": 5046,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5029,
											"end": 5038,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5025,
											"end": 5047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 5004,
											"end": 5057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5057,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5004,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4994,
											"end": 5057,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4994,
											"end": 5057,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 5067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5106,
											"end": 5108,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5132,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 5174,
											"end": 5181,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5165,
											"end": 5171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5163,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5150,
											"end": 5172,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5132,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 5132,
											"end": 5182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5132,
											"end": 5182,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 5132,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5122,
											"end": 5182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5077,
											"end": 5192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 5199,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 5199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 5199,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 5199,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 5199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5323,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5205,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5292,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 5310,
											"end": 5315,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5292,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 5292,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5292,
											"end": 5316,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 5292,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5287,
											"end": 5290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5280,
											"end": 5317,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5323,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5323,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5551,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 5329,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5422,
											"end": 5426,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5449,
											"end": 5458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5445,
											"end": 5463,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5473,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 5541,
											"end": 5542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5530,
											"end": 5539,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5517,
											"end": 5523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5473,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5473,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5473,
											"end": 5544,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 5473,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5551,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5551,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5806,
											"end": 5810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5847,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5833,
											"end": 5842,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5829,
											"end": 5848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5821,
											"end": 5848,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5858,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 5926,
											"end": 5927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5924,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 5928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5902,
											"end": 5908,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 5858,
											"end": 5929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5858,
											"end": 5929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5858,
											"end": 5929,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 5858,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 6007,
											"end": 6009,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5996,
											"end": 6005,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5992,
											"end": 6010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5983,
											"end": 5989,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5939,
											"end": 6011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 6011,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 5939,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6089,
											"end": 6091,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6078,
											"end": 6087,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6074,
											"end": 6092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6065,
											"end": 6071,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6021,
											"end": 6093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6021,
											"end": 6093,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 6021,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 6171,
											"end": 6173,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6160,
											"end": 6169,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6156,
											"end": 6174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6153,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6103,
											"end": 6175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6175,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 6103,
											"end": 6175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 6253,
											"end": 6256,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6242,
											"end": 6251,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6238,
											"end": 6257,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6229,
											"end": 6235,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6185,
											"end": 6258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6185,
											"end": 6258,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 6185,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6268,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6319,
											"end": 6328,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6315,
											"end": 6334,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6306,
											"end": 6312,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6268,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 6268,
											"end": 6335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6268,
											"end": 6335,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 6268,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 6407,
											"end": 6410,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 6396,
											"end": 6405,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6389,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 6345,
											"end": 6412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6412,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 6345,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6594,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 6425,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6520,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6549,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6531,
											"end": 6550,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6583,
											"end": 6587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6578,
											"end": 6581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6574,
											"end": 6588,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6559,
											"end": 6588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6559,
											"end": 6588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6594,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6594,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6425,
											"end": 6594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6600,
											"end": 6774,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 6600,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6740,
											"end": 6766,
											"name": "PUSH",
											"source": 12,
											"value": "4E465420636F6E7472616374206E6F7420616C6C6F7765640000000000000000"
										},
										{
											"begin": 6736,
											"end": 6737,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6724,
											"end": 6738,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6717,
											"end": 6767,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6600,
											"end": 6774,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6600,
											"end": 6774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 7146,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 6780,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6922,
											"end": 6925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 7007,
											"end": 7009,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 7002,
											"end": 7005,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 6943,
											"end": 7010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6943,
											"end": 7010,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 6943,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 7010,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6936,
											"end": 7010,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7019,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 7108,
											"end": 7111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7019,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 7019,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7019,
											"end": 7112,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 7019,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7132,
											"end": 7135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7128,
											"end": 7140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7121,
											"end": 7140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7121,
											"end": 7140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 7146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 7146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 7146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 7146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7571,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 7152,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7318,
											"end": 7322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7345,
											"end": 7354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7341,
											"end": 7359,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7333,
											"end": 7359,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7333,
											"end": 7359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7405,
											"end": 7414,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7403,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7395,
											"end": 7415,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7391,
											"end": 7392,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7389,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7376,
											"end": 7393,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7416,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7559,
											"end": 7563,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 7433,
											"end": 7564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7564,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7433,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7425,
											"end": 7564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7425,
											"end": 7564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7571,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7571,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7152,
											"end": 7571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7737,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 7577,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7717,
											"end": 7729,
											"name": "PUSH",
											"source": 12,
											"value": "7072696365207A65726F00000000000000000000000000000000000000000000"
										},
										{
											"begin": 7713,
											"end": 7714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7705,
											"end": 7711,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7701,
											"end": 7715,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7694,
											"end": 7730,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7577,
											"end": 7737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 8109,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 7743,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7885,
											"end": 7888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 7970,
											"end": 7972,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 7965,
											"end": 7968,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 7906,
											"end": 7973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7906,
											"end": 7973,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 7906,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7899,
											"end": 7973,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7899,
											"end": 7973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7982,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 8071,
											"end": 8074,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7982,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 7982,
											"end": 8075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7982,
											"end": 8075,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 7982,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8100,
											"end": 8102,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8091,
											"end": 8103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 8109,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 8109,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 8109,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7743,
											"end": 8109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8115,
											"end": 8534,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 8115,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8281,
											"end": 8285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8319,
											"end": 8321,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8308,
											"end": 8317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8296,
											"end": 8322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8368,
											"end": 8377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8362,
											"end": 8366,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8358,
											"end": 8378,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8354,
											"end": 8355,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8343,
											"end": 8352,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8356,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8332,
											"end": 8379,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8396,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8396,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 8396,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8396,
											"end": 8527,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 8396,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8527,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8115,
											"end": 8534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8115,
											"end": 8534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8115,
											"end": 8534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8115,
											"end": 8534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8540,
											"end": 8701,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 8540,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8680,
											"end": 8693,
											"name": "PUSH",
											"source": 12,
											"value": "616D6F756E74207A65726F000000000000000000000000000000000000000000"
										},
										{
											"begin": 8676,
											"end": 8677,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8674,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8657,
											"end": 8694,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8540,
											"end": 8701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8540,
											"end": 8701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8849,
											"end": 8852,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 8934,
											"end": 8936,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 8929,
											"end": 8932,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8870,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 8870,
											"end": 8937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8870,
											"end": 8937,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 8870,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8863,
											"end": 8937,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8863,
											"end": 8937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8946,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 9035,
											"end": 9038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8946,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 8946,
											"end": 9039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8946,
											"end": 9039,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8946,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9066,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9059,
											"end": 9062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9048,
											"end": 9067,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9048,
											"end": 9067,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8707,
											"end": 9073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9283,
											"end": 9285,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9260,
											"end": 9286,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9260,
											"end": 9286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9341,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9322,
											"end": 9342,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9318,
											"end": 9319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9316,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9303,
											"end": 9320,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9296,
											"end": 9343,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9360,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 9486,
											"end": 9490,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9360,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 9360,
											"end": 9491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9360,
											"end": 9491,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 9360,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9491,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9352,
											"end": 9491,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9079,
											"end": 9498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9629,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9663,
											"end": 9665,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9652,
											"end": 9661,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9648,
											"end": 9666,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9640,
											"end": 9666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9640,
											"end": 9666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 9744,
											"end": 9745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9729,
											"end": 9746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9720,
											"end": 9726,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 9676,
											"end": 9747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 9676,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 9825,
											"end": 9827,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 9823,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9810,
											"end": 9828,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9801,
											"end": 9807,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 9757,
											"end": 9829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 9757,
											"end": 9829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9504,
											"end": 9836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9842,
											"end": 9985,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9842,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9899,
											"end": 9904,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9930,
											"end": 9936,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9937,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9937,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9946,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9973,
											"end": 9978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9946,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 9946,
											"end": 9979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9946,
											"end": 9979,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 9946,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9842,
											"end": 9985,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9842,
											"end": 9985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9842,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9842,
											"end": 9985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9842,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10342,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9991,
											"end": 10342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10112,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10098,
											"end": 10107,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10089,
											"end": 10096,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10085,
											"end": 10108,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10081,
											"end": 10113,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10078,
											"end": 10197,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10078,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 10078,
											"end": 10197,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 10116,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 10116,
											"end": 10195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10116,
											"end": 10195,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 10116,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10078,
											"end": 10197,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 10078,
											"end": 10197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10236,
											"end": 10237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10261,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 10317,
											"end": 10324,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10308,
											"end": 10314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10297,
											"end": 10306,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10293,
											"end": 10315,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 10261,
											"end": 10325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10325,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 10261,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10325,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10325,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10207,
											"end": 10335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10342,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10342,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9991,
											"end": 10342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10348,
											"end": 10518,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 10348,
											"end": 10518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10488,
											"end": 10510,
											"name": "PUSH",
											"source": 12,
											"value": "696E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10476,
											"end": 10482,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10472,
											"end": 10486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10465,
											"end": 10511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10348,
											"end": 10518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10348,
											"end": 10518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10890,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 10524,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10666,
											"end": 10669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10687,
											"end": 10754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 10751,
											"end": 10753,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 10746,
											"end": 10749,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10687,
											"end": 10754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 10687,
											"end": 10754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10687,
											"end": 10754,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 10687,
											"end": 10754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10754,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10754,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 10852,
											"end": 10855,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 10763,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10856,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 10763,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10881,
											"end": 10883,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10879,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10872,
											"end": 10884,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10865,
											"end": 10884,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10865,
											"end": 10884,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10890,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10890,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10524,
											"end": 10890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10896,
											"end": 11315,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 10896,
											"end": 11315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11062,
											"end": 11066,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11100,
											"end": 11102,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11089,
											"end": 11098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11085,
											"end": 11103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11077,
											"end": 11103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11149,
											"end": 11158,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11143,
											"end": 11147,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11139,
											"end": 11159,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11135,
											"end": 11136,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11133,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11120,
											"end": 11137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11113,
											"end": 11160,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11177,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 11303,
											"end": 11307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11177,
											"end": 11308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 11177,
											"end": 11308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11177,
											"end": 11308,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 11177,
											"end": 11308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11169,
											"end": 11308,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11169,
											"end": 11308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10896,
											"end": 11315,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10896,
											"end": 11315,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10896,
											"end": 11315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10896,
											"end": 11315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11321,
											"end": 11653,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 11321,
											"end": 11653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11442,
											"end": 11446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11482,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11469,
											"end": 11478,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11465,
											"end": 11483,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11457,
											"end": 11483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11457,
											"end": 11483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 11561,
											"end": 11562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11550,
											"end": 11559,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11546,
											"end": 11563,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11537,
											"end": 11543,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 11493,
											"end": 11564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11564,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 11493,
											"end": 11564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11574,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 11642,
											"end": 11644,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11627,
											"end": 11645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11618,
											"end": 11624,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11574,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 11574,
											"end": 11646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11574,
											"end": 11646,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 11574,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11321,
											"end": 11653,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 11321,
											"end": 11653,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11321,
											"end": 11653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11321,
											"end": 11653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11321,
											"end": 11653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11321,
											"end": 11653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11796,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 11659,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11713,
											"end": 11718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11750,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11738,
											"end": 11751,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11729,
											"end": 11751,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11729,
											"end": 11751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11760,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 11784,
											"end": 11789,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11760,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 11760,
											"end": 11790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11760,
											"end": 11790,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 11760,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11796,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11796,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11659,
											"end": 11796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 12147,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 11802,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11869,
											"end": 11875,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11918,
											"end": 11920,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11906,
											"end": 11915,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 11904,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 11916,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11889,
											"end": 11921,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 12005,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11886,
											"end": 12005,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11924,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 11924,
											"end": 12003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 11924,
											"end": 12003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11924,
											"end": 12003,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 11924,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11886,
											"end": 12005,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 11886,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12044,
											"end": 12045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12069,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 12122,
											"end": 12129,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12113,
											"end": 12119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12102,
											"end": 12111,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12069,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 12069,
											"end": 12130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12069,
											"end": 12130,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 12069,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12059,
											"end": 12130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12059,
											"end": 12130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12015,
											"end": 12140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 12147,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 12147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 12147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 12147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 12147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12315,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 12153,
											"end": 12315,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12293,
											"end": 12307,
											"name": "PUSH",
											"source": 12,
											"value": "6E6F7420617070726F7665640000000000000000000000000000000000000000"
										},
										{
											"begin": 12289,
											"end": 12290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12281,
											"end": 12287,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12277,
											"end": 12291,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12270,
											"end": 12308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12315,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12153,
											"end": 12315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12687,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 12321,
											"end": 12687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12463,
											"end": 12466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12484,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 12548,
											"end": 12550,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 12543,
											"end": 12546,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12484,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 12484,
											"end": 12551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12484,
											"end": 12551,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 12484,
											"end": 12551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12477,
											"end": 12551,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12477,
											"end": 12551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 12649,
											"end": 12652,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 12560,
											"end": 12653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12653,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 12560,
											"end": 12653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12678,
											"end": 12680,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12673,
											"end": 12676,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12669,
											"end": 12681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12662,
											"end": 12681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12662,
											"end": 12681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12687,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12687,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12687,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12321,
											"end": 12687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12693,
											"end": 13112,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 12693,
											"end": 13112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 12899,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12886,
											"end": 12895,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12882,
											"end": 12900,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12874,
											"end": 12900,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12874,
											"end": 12900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12946,
											"end": 12955,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12940,
											"end": 12944,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12936,
											"end": 12956,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12932,
											"end": 12933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12921,
											"end": 12930,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12917,
											"end": 12934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12910,
											"end": 12957,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12974,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 13100,
											"end": 13104,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12974,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 12974,
											"end": 13105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12974,
											"end": 13105,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 12974,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 13105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12693,
											"end": 13112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12693,
											"end": 13112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12693,
											"end": 13112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12693,
											"end": 13112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13118,
											"end": 13295,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 13118,
											"end": 13295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13258,
											"end": 13287,
											"name": "PUSH",
											"source": 12,
											"value": "616D6F756E74206D757374206265203120666F72204552433732310000000000"
										},
										{
											"begin": 13254,
											"end": 13255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13246,
											"end": 13252,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13242,
											"end": 13256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13235,
											"end": 13288,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13118,
											"end": 13295,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13118,
											"end": 13295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13301,
											"end": 13667,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 13301,
											"end": 13667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13443,
											"end": 13446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13464,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 13528,
											"end": 13530,
											"name": "PUSH",
											"source": 12,
											"value": "1B"
										},
										{
											"begin": 13523,
											"end": 13526,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 13464,
											"end": 13531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13531,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 13464,
											"end": 13531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13457,
											"end": 13531,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13457,
											"end": 13531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 13629,
											"end": 13632,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 13540,
											"end": 13633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13633,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 13540,
											"end": 13633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13658,
											"end": 13660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13653,
											"end": 13656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13649,
											"end": 13661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13642,
											"end": 13661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13642,
											"end": 13661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13301,
											"end": 13667,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13301,
											"end": 13667,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13301,
											"end": 13667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13301,
											"end": 13667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13673,
											"end": 14092,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 13673,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13839,
											"end": 13843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13877,
											"end": 13879,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13866,
											"end": 13875,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13862,
											"end": 13880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13854,
											"end": 13880,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13854,
											"end": 13880,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13926,
											"end": 13935,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13920,
											"end": 13924,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13916,
											"end": 13936,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13912,
											"end": 13913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13910,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13897,
											"end": 13914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13890,
											"end": 13937,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13954,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 14080,
											"end": 14084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13954,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 13954,
											"end": 14085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13954,
											"end": 14085,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 13954,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13946,
											"end": 14085,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13946,
											"end": 14085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13673,
											"end": 14092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13673,
											"end": 14092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13673,
											"end": 14092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13673,
											"end": 14092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14241,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 14098,
											"end": 14241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14155,
											"end": 14160,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14186,
											"end": 14192,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14180,
											"end": 14193,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14171,
											"end": 14193,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14171,
											"end": 14193,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 14229,
											"end": 14234,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 14202,
											"end": 14235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14235,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 14202,
											"end": 14235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14241,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14098,
											"end": 14241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14598,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 14247,
											"end": 14598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14317,
											"end": 14323,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14366,
											"end": 14368,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14354,
											"end": 14363,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14345,
											"end": 14352,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14341,
											"end": 14364,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14337,
											"end": 14369,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 14334,
											"end": 14453,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14334,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 14334,
											"end": 14453,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14372,
											"end": 14451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 14372,
											"end": 14451,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 14372,
											"end": 14451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14372,
											"end": 14451,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 14372,
											"end": 14451,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14334,
											"end": 14453,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 14334,
											"end": 14453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14492,
											"end": 14493,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14517,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 14573,
											"end": 14580,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14564,
											"end": 14570,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14553,
											"end": 14562,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14549,
											"end": 14571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14517,
											"end": 14581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 14517,
											"end": 14581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14517,
											"end": 14581,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 14517,
											"end": 14581,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14507,
											"end": 14581,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14507,
											"end": 14581,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14463,
											"end": 14591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14598,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14598,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14247,
											"end": 14598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14604,
											"end": 14763,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 14604,
											"end": 14763,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14744,
											"end": 14755,
											"name": "PUSH",
											"source": 12,
											"value": "6E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14740,
											"end": 14741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14732,
											"end": 14738,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14728,
											"end": 14742,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14721,
											"end": 14756,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14604,
											"end": 14763,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14604,
											"end": 14763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 15134,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 14769,
											"end": 15134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14911,
											"end": 14914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14932,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 14996,
											"end": 14997,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 14991,
											"end": 14994,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14932,
											"end": 14998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 14932,
											"end": 14998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14932,
											"end": 14998,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 14932,
											"end": 14998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 14998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 14998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 15096,
											"end": 15099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15100,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 15007,
											"end": 15100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15100,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 15007,
											"end": 15100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15125,
											"end": 15127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15120,
											"end": 15123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15116,
											"end": 15128,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15109,
											"end": 15128,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15109,
											"end": 15128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 15134,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 15134,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 15134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 15134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15306,
											"end": 15310,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15344,
											"end": 15346,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15333,
											"end": 15342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15329,
											"end": 15347,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15347,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15321,
											"end": 15347,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15393,
											"end": 15402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15387,
											"end": 15391,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15383,
											"end": 15403,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15379,
											"end": 15380,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15368,
											"end": 15377,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15364,
											"end": 15381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15357,
											"end": 15404,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 15547,
											"end": 15551,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 15421,
											"end": 15552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15421,
											"end": 15552,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 15421,
											"end": 15552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15413,
											"end": 15552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15413,
											"end": 15552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15140,
											"end": 15559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15745,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 15565,
											"end": 15745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15613,
											"end": 15690,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15610,
											"end": 15611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15691,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15710,
											"end": 15714,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 15707,
											"end": 15708,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15700,
											"end": 15715,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15738,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15731,
											"end": 15732,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15724,
											"end": 15739,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15984,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 15751,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15790,
											"end": 15793,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 15831,
											"end": 15836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15813,
											"end": 15837,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 15813,
											"end": 15837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15813,
											"end": 15837,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 15813,
											"end": 15837,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15804,
											"end": 15837,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15804,
											"end": 15837,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15859,
											"end": 15925,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15852,
											"end": 15857,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15849,
											"end": 15926,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15846,
											"end": 15949,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 15846,
											"end": 15949,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15929,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 15929,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 15929,
											"end": 15947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15929,
											"end": 15947,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 15929,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15846,
											"end": 15949,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 15846,
											"end": 15949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 15977,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15969,
											"end": 15974,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15965,
											"end": 15978,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15958,
											"end": 15978,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15958,
											"end": 15978,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15984,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15984,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16161,
											"end": 16165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16199,
											"end": 16202,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 16188,
											"end": 16197,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16184,
											"end": 16203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16176,
											"end": 16203,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16176,
											"end": 16203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16213,
											"end": 16284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 16281,
											"end": 16282,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16270,
											"end": 16279,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16266,
											"end": 16283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16257,
											"end": 16263,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16213,
											"end": 16284,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 16213,
											"end": 16284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16213,
											"end": 16284,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 16213,
											"end": 16284,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16294,
											"end": 16366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 16362,
											"end": 16364,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16351,
											"end": 16360,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16347,
											"end": 16365,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16338,
											"end": 16344,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16294,
											"end": 16366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 16294,
											"end": 16366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16294,
											"end": 16366,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 16294,
											"end": 16366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16376,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 16444,
											"end": 16446,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16433,
											"end": 16442,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16429,
											"end": 16447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16420,
											"end": 16426,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16376,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 16376,
											"end": 16448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16376,
											"end": 16448,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 16376,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16458,
											"end": 16524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 16520,
											"end": 16522,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16509,
											"end": 16518,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16505,
											"end": 16523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16496,
											"end": 16502,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16458,
											"end": 16524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 16458,
											"end": 16524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16458,
											"end": 16524,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 16458,
											"end": 16524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15990,
											"end": 16531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16537,
											"end": 16703,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 16537,
											"end": 16703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "PUSH",
											"source": 12,
											"value": "6C697374696E6720696E61637469766500000000000000000000000000000000"
										},
										{
											"begin": 16673,
											"end": 16674,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16665,
											"end": 16671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16661,
											"end": 16675,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16654,
											"end": 16696,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16537,
											"end": 16703,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16537,
											"end": 16703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 17075,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 16709,
											"end": 17075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16851,
											"end": 16854,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16872,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 16936,
											"end": 16938,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 16931,
											"end": 16934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16872,
											"end": 16939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 16872,
											"end": 16939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16872,
											"end": 16939,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 16872,
											"end": 16939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16865,
											"end": 16939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16865,
											"end": 16939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16948,
											"end": 17041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 17037,
											"end": 17040,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16948,
											"end": 17041,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 16948,
											"end": 17041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16948,
											"end": 17041,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 16948,
											"end": 17041,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17066,
											"end": 17068,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17061,
											"end": 17064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17057,
											"end": 17069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17050,
											"end": 17069,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17050,
											"end": 17069,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 17075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 17075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 17075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16709,
											"end": 17075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17500,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 17081,
											"end": 17500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17247,
											"end": 17251,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17285,
											"end": 17287,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17274,
											"end": 17283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17270,
											"end": 17288,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17262,
											"end": 17288,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17262,
											"end": 17288,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17334,
											"end": 17343,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17328,
											"end": 17332,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17324,
											"end": 17344,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17320,
											"end": 17321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17309,
											"end": 17318,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17305,
											"end": 17322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17298,
											"end": 17345,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17362,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 17488,
											"end": 17492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17362,
											"end": 17493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 17362,
											"end": 17493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17362,
											"end": 17493,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 17362,
											"end": 17493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17354,
											"end": 17493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17354,
											"end": 17493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17500,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17500,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17081,
											"end": 17500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17506,
											"end": 17916,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 17506,
											"end": 17916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17546,
											"end": 17553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17569,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 17587,
											"end": 17588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17569,
											"end": 17589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 17569,
											"end": 17589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17569,
											"end": 17589,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 17569,
											"end": 17589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17564,
											"end": 17589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17564,
											"end": 17589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17603,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 17621,
											"end": 17622,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17603,
											"end": 17623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 17603,
											"end": 17623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17603,
											"end": 17623,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 17603,
											"end": 17623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17598,
											"end": 17623,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17598,
											"end": 17623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17658,
											"end": 17659,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17655,
											"end": 17656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17651,
											"end": 17660,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 17680,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 17698,
											"end": 17709,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17680,
											"end": 17710,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 17680,
											"end": 17710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17680,
											"end": 17710,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 17680,
											"end": 17710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17669,
											"end": 17710,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17669,
											"end": 17710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17859,
											"end": 17860,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17850,
											"end": 17857,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17846,
											"end": 17861,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 17843,
											"end": 17844,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17840,
											"end": 17862,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17820,
											"end": 17821,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17813,
											"end": 17822,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17793,
											"end": 17876,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 17770,
											"end": 17909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 17770,
											"end": 17909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17889,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 17889,
											"end": 17907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 17889,
											"end": 17907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17889,
											"end": 17907,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 17889,
											"end": 17907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17770,
											"end": 17909,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 17770,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17554,
											"end": 17916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17506,
											"end": 17916,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17506,
											"end": 17916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17506,
											"end": 17916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17506,
											"end": 17916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17506,
											"end": 17916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17922,
											"end": 18102,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 17922,
											"end": 18102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17970,
											"end": 18047,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17967,
											"end": 17968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17960,
											"end": 18048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18067,
											"end": 18071,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 18064,
											"end": 18065,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 18057,
											"end": 18072,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18091,
											"end": 18095,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 18088,
											"end": 18089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18081,
											"end": 18096,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18293,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 18108,
											"end": 18293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18148,
											"end": 18149,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18165,
											"end": 18185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 18183,
											"end": 18184,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18165,
											"end": 18185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 18165,
											"end": 18185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18165,
											"end": 18185,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 18165,
											"end": 18185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18160,
											"end": 18185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18199,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 18217,
											"end": 18218,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18199,
											"end": 18219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 18199,
											"end": 18219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18199,
											"end": 18219,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 18199,
											"end": 18219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18194,
											"end": 18219,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18194,
											"end": 18219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18238,
											"end": 18239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18228,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 18228,
											"end": 18263,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18243,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 18243,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 18243,
											"end": 18261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18243,
											"end": 18261,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 18243,
											"end": 18261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18228,
											"end": 18263,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 18228,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18285,
											"end": 18286,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18282,
											"end": 18283,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18278,
											"end": 18287,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18287,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18273,
											"end": 18287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18293,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18108,
											"end": 18293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18493,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 18299,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18339,
											"end": 18343,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18359,
											"end": 18379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 18377,
											"end": 18378,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18359,
											"end": 18379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 18359,
											"end": 18379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18359,
											"end": 18379,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 18359,
											"end": 18379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18354,
											"end": 18379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18354,
											"end": 18379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18393,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 18411,
											"end": 18412,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18393,
											"end": 18413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 18393,
											"end": 18413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18393,
											"end": 18413,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 18393,
											"end": 18413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18388,
											"end": 18413,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18388,
											"end": 18413,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18437,
											"end": 18438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18434,
											"end": 18435,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18430,
											"end": 18439,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18422,
											"end": 18439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18422,
											"end": 18439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18461,
											"end": 18462,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18455,
											"end": 18459,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18452,
											"end": 18463,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 18449,
											"end": 18486,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 18449,
											"end": 18486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 18449,
											"end": 18486,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 18466,
											"end": 18484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 18466,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18449,
											"end": 18486,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 18449,
											"end": 18486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18493,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18493,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18499,
											"end": 18667,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 18499,
											"end": 18667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18582,
											"end": 18593,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18611,
											"end": 18614,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18604,
											"end": 18623,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18656,
											"end": 18660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18651,
											"end": 18654,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18647,
											"end": 18661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18632,
											"end": 18661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18632,
											"end": 18661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18499,
											"end": 18667,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18499,
											"end": 18667,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18499,
											"end": 18667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18499,
											"end": 18667,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18499,
											"end": 18667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 18787,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 18673,
											"end": 18787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 18787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18673,
											"end": 18787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18793,
											"end": 19155,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 18793,
											"end": 19155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18934,
											"end": 18937,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18955,
											"end": 19020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 19018,
											"end": 19019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19013,
											"end": 19016,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18955,
											"end": 19020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 18955,
											"end": 19020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18955,
											"end": 19020,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 18955,
											"end": 19020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18948,
											"end": 19020,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18948,
											"end": 19020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19029,
											"end": 19122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 19118,
											"end": 19121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19029,
											"end": 19122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 19029,
											"end": 19122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19029,
											"end": 19122,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 19029,
											"end": 19122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19147,
											"end": 19148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19142,
											"end": 19145,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19138,
											"end": 19149,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19131,
											"end": 19149,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19131,
											"end": 19149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18793,
											"end": 19155,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18793,
											"end": 19155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18793,
											"end": 19155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18793,
											"end": 19155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19438,
											"end": 19442,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19476,
											"end": 19479,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 19465,
											"end": 19474,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19461,
											"end": 19480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19453,
											"end": 19480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19453,
											"end": 19480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19490,
											"end": 19561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 19558,
											"end": 19559,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19547,
											"end": 19556,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19543,
											"end": 19560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19534,
											"end": 19540,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 19490,
											"end": 19561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 19490,
											"end": 19561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19490,
											"end": 19561,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 19490,
											"end": 19561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19571,
											"end": 19643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 19639,
											"end": 19641,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19628,
											"end": 19637,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19624,
											"end": 19642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19615,
											"end": 19621,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 19571,
											"end": 19643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 19571,
											"end": 19643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19571,
											"end": 19643,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 19571,
											"end": 19643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 19725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 19721,
											"end": 19723,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 19710,
											"end": 19719,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19706,
											"end": 19724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19697,
											"end": 19703,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 19725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 19653,
											"end": 19725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19653,
											"end": 19725,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 19653,
											"end": 19725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19735,
											"end": 19807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 19803,
											"end": 19805,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 19792,
											"end": 19801,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19788,
											"end": 19806,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19779,
											"end": 19785,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19735,
											"end": 19807,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 19735,
											"end": 19807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19735,
											"end": 19807,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 19735,
											"end": 19807,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19855,
											"end": 19864,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19849,
											"end": 19853,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19845,
											"end": 19865,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19839,
											"end": 19842,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 19828,
											"end": 19837,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19824,
											"end": 19843,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19817,
											"end": 19866,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19883,
											"end": 20013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 20008,
											"end": 20012,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19883,
											"end": 20013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 19883,
											"end": 20013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19883,
											"end": 20013,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 19883,
											"end": 20013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19875,
											"end": 20013,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19875,
											"end": 20013,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19161,
											"end": 20020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20468,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 20026,
											"end": 20468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20175,
											"end": 20179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20213,
											"end": 20215,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 20202,
											"end": 20211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20198,
											"end": 20216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20190,
											"end": 20216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20190,
											"end": 20216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20226,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 20294,
											"end": 20295,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20283,
											"end": 20292,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20279,
											"end": 20296,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20270,
											"end": 20276,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 20226,
											"end": 20297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 20226,
											"end": 20297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20226,
											"end": 20297,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 20226,
											"end": 20297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20307,
											"end": 20379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 20375,
											"end": 20377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20364,
											"end": 20373,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20360,
											"end": 20378,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20351,
											"end": 20357,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20307,
											"end": 20379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 20307,
											"end": 20379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20307,
											"end": 20379,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 20307,
											"end": 20379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20389,
											"end": 20461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 20457,
											"end": 20459,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20446,
											"end": 20455,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20442,
											"end": 20460,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20433,
											"end": 20439,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20389,
											"end": 20461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 20389,
											"end": 20461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20389,
											"end": 20461,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 20389,
											"end": 20461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20468,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20468,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20026,
											"end": 20468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20806,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 20474,
											"end": 20806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20595,
											"end": 20599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20633,
											"end": 20635,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20622,
											"end": 20631,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20618,
											"end": 20636,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20610,
											"end": 20636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20610,
											"end": 20636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20646,
											"end": 20717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 20714,
											"end": 20715,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20703,
											"end": 20712,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20699,
											"end": 20716,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20690,
											"end": 20696,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20646,
											"end": 20717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 20646,
											"end": 20717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20646,
											"end": 20717,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 20646,
											"end": 20717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20727,
											"end": 20799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 20795,
											"end": 20797,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20784,
											"end": 20793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20780,
											"end": 20798,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20771,
											"end": 20777,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20727,
											"end": 20799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 20727,
											"end": 20799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20727,
											"end": 20799,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 20727,
											"end": 20799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20806,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20806,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20806,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20474,
											"end": 20806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20812,
											"end": 20971,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 20812,
											"end": 20971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20952,
											"end": 20963,
											"name": "PUSH",
											"source": 12,
											"value": "7A65726F20616464720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20948,
											"end": 20949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20940,
											"end": 20946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20936,
											"end": 20950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20929,
											"end": 20964,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20812,
											"end": 20971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20812,
											"end": 20971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 21342,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 20977,
											"end": 21342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21119,
											"end": 21122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21140,
											"end": 21206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 21204,
											"end": 21205,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 21199,
											"end": 21202,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21140,
											"end": 21206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 21140,
											"end": 21206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21140,
											"end": 21206,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 21140,
											"end": 21206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21133,
											"end": 21206,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21133,
											"end": 21206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21215,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 21304,
											"end": 21307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21215,
											"end": 21308,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 21215,
											"end": 21308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21215,
											"end": 21308,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 21215,
											"end": 21308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21333,
											"end": 21335,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21328,
											"end": 21331,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21324,
											"end": 21336,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21317,
											"end": 21336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21317,
											"end": 21336,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 21342,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 21342,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 21342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20977,
											"end": 21342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21767,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 21348,
											"end": 21767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21514,
											"end": 21518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21552,
											"end": 21554,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21541,
											"end": 21550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21537,
											"end": 21555,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21529,
											"end": 21555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21529,
											"end": 21555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21601,
											"end": 21610,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21595,
											"end": 21599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21591,
											"end": 21611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21587,
											"end": 21588,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21576,
											"end": 21585,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21572,
											"end": 21589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21565,
											"end": 21612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21629,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 21755,
											"end": 21759,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21629,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 21629,
											"end": 21760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21629,
											"end": 21760,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 21629,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21621,
											"end": 21760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21621,
											"end": 21760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21767,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21767,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21348,
											"end": 21767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21773,
											"end": 21932,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 21773,
											"end": 21932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21913,
											"end": 21924,
											"name": "PUSH",
											"source": 12,
											"value": "6D61782031303030300000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21909,
											"end": 21910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21901,
											"end": 21907,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21897,
											"end": 21911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21890,
											"end": 21925,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21773,
											"end": 21932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21773,
											"end": 21932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21938,
											"end": 22303,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 21938,
											"end": 22303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22080,
											"end": 22083,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22101,
											"end": 22167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 22165,
											"end": 22166,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 22160,
											"end": 22163,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22167,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 22101,
											"end": 22167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22101,
											"end": 22167,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 22101,
											"end": 22167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22094,
											"end": 22167,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22094,
											"end": 22167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22176,
											"end": 22269,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 22265,
											"end": 22268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22176,
											"end": 22269,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 22176,
											"end": 22269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22176,
											"end": 22269,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 22176,
											"end": 22269,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22294,
											"end": 22296,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22289,
											"end": 22292,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22285,
											"end": 22297,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22278,
											"end": 22297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21938,
											"end": 22303,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21938,
											"end": 22303,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21938,
											"end": 22303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21938,
											"end": 22303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22309,
											"end": 22728,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 22309,
											"end": 22728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22475,
											"end": 22479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22513,
											"end": 22515,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22502,
											"end": 22511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22498,
											"end": 22516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22490,
											"end": 22516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22490,
											"end": 22516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22562,
											"end": 22571,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22556,
											"end": 22560,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22552,
											"end": 22572,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22548,
											"end": 22549,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22537,
											"end": 22546,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22533,
											"end": 22550,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22526,
											"end": 22573,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22590,
											"end": 22721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 22716,
											"end": 22720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22590,
											"end": 22721,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 22590,
											"end": 22721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22590,
											"end": 22721,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 22590,
											"end": 22721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22582,
											"end": 22721,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22582,
											"end": 22721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22309,
											"end": 22728,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22309,
											"end": 22728,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22309,
											"end": 22728,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22309,
											"end": 22728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22734,
											"end": 22894,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 22734,
											"end": 22894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22874,
											"end": 22886,
											"name": "PUSH",
											"source": 12,
											"value": "6E6F742073656C6C657200000000000000000000000000000000000000000000"
										},
										{
											"begin": 22870,
											"end": 22871,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22862,
											"end": 22868,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22858,
											"end": 22872,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22851,
											"end": 22887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22734,
											"end": 22894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22734,
											"end": 22894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23042,
											"end": 23045,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23063,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 23127,
											"end": 23129,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 23122,
											"end": 23125,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23063,
											"end": 23130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 23063,
											"end": 23130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23063,
											"end": 23130,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 23063,
											"end": 23130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23056,
											"end": 23130,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23056,
											"end": 23130,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23139,
											"end": 23232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 23228,
											"end": 23231,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23139,
											"end": 23232,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 23139,
											"end": 23232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23139,
											"end": 23232,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 23139,
											"end": 23232,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23257,
											"end": 23259,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23252,
											"end": 23255,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23248,
											"end": 23260,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23241,
											"end": 23260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23241,
											"end": 23260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22900,
											"end": 23266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22900,
											"end": 23266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23438,
											"end": 23442,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23476,
											"end": 23478,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23465,
											"end": 23474,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23461,
											"end": 23479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23453,
											"end": 23479,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23453,
											"end": 23479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23525,
											"end": 23534,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23519,
											"end": 23523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23515,
											"end": 23535,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23511,
											"end": 23512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23500,
											"end": 23509,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23496,
											"end": 23513,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23489,
											"end": 23536,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23553,
											"end": 23684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 23679,
											"end": 23683,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 23553,
											"end": 23684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 23553,
											"end": 23684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23553,
											"end": 23684,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 23553,
											"end": 23684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23545,
											"end": 23684,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23545,
											"end": 23684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23272,
											"end": 23691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23272,
											"end": 23691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23697,
											"end": 23878,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 23697,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23837,
											"end": 23870,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 23833,
											"end": 23834,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23825,
											"end": 23831,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23821,
											"end": 23835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23814,
											"end": 23871,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23697,
											"end": 23878,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23697,
											"end": 23878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23884,
											"end": 24250,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 23884,
											"end": 24250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24026,
											"end": 24029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24047,
											"end": 24114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 24111,
											"end": 24113,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 24106,
											"end": 24109,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24047,
											"end": 24114,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 24047,
											"end": 24114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24047,
											"end": 24114,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 24047,
											"end": 24114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24040,
											"end": 24114,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24040,
											"end": 24114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24123,
											"end": 24216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 24212,
											"end": 24215,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24123,
											"end": 24216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 24123,
											"end": 24216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24123,
											"end": 24216,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 24123,
											"end": 24216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24241,
											"end": 24243,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24236,
											"end": 24239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24232,
											"end": 24244,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24225,
											"end": 24244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24225,
											"end": 24244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23884,
											"end": 24250,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23884,
											"end": 24250,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23884,
											"end": 24250,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23884,
											"end": 24250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24256,
											"end": 24675,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 24256,
											"end": 24675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24422,
											"end": 24426,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24460,
											"end": 24462,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24449,
											"end": 24458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24445,
											"end": 24463,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24437,
											"end": 24463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24437,
											"end": 24463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24509,
											"end": 24518,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24503,
											"end": 24507,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24499,
											"end": 24519,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24495,
											"end": 24496,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24484,
											"end": 24493,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24480,
											"end": 24497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24473,
											"end": 24520,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24537,
											"end": 24668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 24663,
											"end": 24667,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24537,
											"end": 24668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 24537,
											"end": 24668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24537,
											"end": 24668,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 24537,
											"end": 24668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24529,
											"end": 24668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24529,
											"end": 24668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24256,
											"end": 24675,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24256,
											"end": 24675,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24256,
											"end": 24675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24256,
											"end": 24675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Marketplace_NFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowedNFTContracts(address)": "c0f6ae97",
							"buyNFT(uint256)": "51ed8288",
							"delistNFT(uint256)": "cb917b9c",
							"feeCollector()": "c415b95c",
							"feePercent()": "7fd6f15c",
							"isAllowedNFT(address)": "4e9b8c5d",
							"listNFT(address,uint256,uint256,uint256,bool)": "3ae6064b",
							"listings(uint256)": "de74e57b",
							"owner()": "8da5cb5b",
							"paymentToken()": "3013ce29",
							"renounceOwnership()": "715018a6",
							"setAllowedNFTContract(address,bool)": "80df50a8",
							"setFeeCollector(address)": "a42dce80",
							"setFeePercent(uint256)": "7ce3489b",
							"setPaymentToken(address)": "6a326ab1",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"NFTDelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"}],\"name\":\"NFTListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"NFTSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedNFTContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"buyNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"delistNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"}],\"name\":\"isAllowedNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"}],\"name\":\"listNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"setAllowedNFTContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"setFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Marketplace_NFT.sol\":\"SavePointMarketplace\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"Marketplace_NFT.sol\":{\"keccak256\":\"0x38d1f8fb3a46dd6e0a3b3df724ee141566b4298810b71f938274d07a55d77e06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f49a2b874423b494db69210071f27097904d39850cb1578e71360d33ce240556\",\"dweb:/ipfs/QmeuFd8Cd3uGGDBhWXTJksxPYJGiqT5xdLX3Zf5t1bhemy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Marketplace_NFT.sol:SavePointMarketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "Marketplace_NFT.sol:SavePointMarketplace",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1145,
								"contract": "Marketplace_NFT.sol:SavePointMarketplace",
								"label": "paymentToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)503"
							},
							{
								"astId": 1147,
								"contract": "Marketplace_NFT.sol:SavePointMarketplace",
								"label": "feeCollector",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1149,
								"contract": "Marketplace_NFT.sol:SavePointMarketplace",
								"label": "feePercent",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1153,
								"contract": "Marketplace_NFT.sol:SavePointMarketplace",
								"label": "allowedNFTContracts",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1170,
								"contract": "Marketplace_NFT.sol:SavePointMarketplace",
								"label": "_listingIdCounter",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1175,
								"contract": "Marketplace_NFT.sol:SavePointMarketplace",
								"label": "listings",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Listing)1168_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)503": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(Listing)1168_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SavePointMarketplace.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)1168_storage"
							},
							"t_struct(Listing)1168_storage": {
								"encoding": "inplace",
								"label": "struct SavePointMarketplace.Listing",
								"members": [
									{
										"astId": 1155,
										"contract": "Marketplace_NFT.sol:SavePointMarketplace",
										"label": "seller",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1157,
										"contract": "Marketplace_NFT.sol:SavePointMarketplace",
										"label": "nftContract",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1159,
										"contract": "Marketplace_NFT.sol:SavePointMarketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1161,
										"contract": "Marketplace_NFT.sol:SavePointMarketplace",
										"label": "amount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1163,
										"contract": "Marketplace_NFT.sol:SavePointMarketplace",
										"label": "price",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1165,
										"contract": "Marketplace_NFT.sol:SavePointMarketplace",
										"label": "isERC1155",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 1167,
										"contract": "Marketplace_NFT.sol:SavePointMarketplace",
										"label": "active",
										"offset": 1,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1114
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1115,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1114,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1114,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1114
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1096,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1126
						],
						"IERC20": [
							503
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 503,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1126,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 503,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1126,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1126,
								503
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								437,
								446
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1126
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1127,
							"src": "133:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1126,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							503
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 504,
							"src": "132:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 503,
										"src": "140:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							425
						],
						"IERC165": [
							1126
						]
					},
					"id": 426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 426,
							"sourceUnit": 1127,
							"src": "136:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 305,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1126,
										"src": "144:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 308,
										"name": "IERC165",
										"nameLocations": [
											"359:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1126,
										"src": "359:7:5"
									},
									"id": 309,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:5"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 307,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:5",
								"text": " @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."
							},
							"fullyImplemented": false,
							"id": 425,
							"linearizedBaseContracts": [
								425,
								1126
							],
							"name": "IERC1155",
							"nameLocation": "347:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "373:125:5",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 322,
									"name": "TransferSingle",
									"nameLocation": "509:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "540:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "524:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "566:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "550:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "588:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "572:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "600:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "592:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "604:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:95:5"
									},
									"src": "503:116:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "625:144:5",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 337,
									"name": "TransferBatch",
									"nameLocation": "780:13:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "819:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "803:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "853:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "837:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "867:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "905:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "895:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 330,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 331,
													"nodeType": "ArrayTypeName",
													"src": "895:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "928:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "918:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 333,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "918:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 334,
													"nodeType": "ArrayTypeName",
													"src": "918:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:147:5"
									},
									"src": "774:167:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "947:147:5",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 346,
									"name": "ApprovalForAll",
									"nameLocation": "1105:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1120:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1161:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1145:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1176:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1171:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:66:5"
									},
									"src": "1099:87:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1192:343:5",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 353,
									"name": "URI",
									"nameLocation": "1546:3:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1557:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1550:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1580:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1564:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:34:5"
									},
									"src": "1540:44:5"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "1590:90:5",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`."
									},
									"functionSelector": "00fdd58e",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1694:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1712:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1704:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1729:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1721:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:29:5"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1756:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:9:5"
									},
									"scope": 425,
									"src": "1685:80:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1771:188:5",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1973:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2016:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1997:27:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 365,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1997:7:5",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 366,
													"nodeType": "ArrayTypeName",
													"src": "1997:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2053:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2034:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 368,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2034:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 369,
													"nodeType": "ArrayTypeName",
													"src": "2034:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:75:5"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "2086:16:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 372,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2086:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 373,
													"nodeType": "ArrayTypeName",
													"src": "2086:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:18:5"
									},
									"scope": 425,
									"src": "1964:140:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "2110:254:5",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"functionSelector": "a22cb465",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2378:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2404:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2396:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2419:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "2414:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2414:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:33:5"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:5"
									},
									"scope": 425,
									"src": "2369:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "2444:135:5",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2593:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2618:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2610:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2627:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:35:5"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2668:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2668:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:6:5"
									},
									"scope": 425,
									"src": "2584:90:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2680:927:5",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3621:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3646:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "3638:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3638:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3660:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "3652:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3672:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "3664:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3664:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3684:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "3676:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3706:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "3691:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3691:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3637:74:5"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3720:0:5"
									},
									"scope": 425,
									"src": "3612:109:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "3727:831:5",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4572:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4611:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4603:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4633:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4625:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4664:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4645:22:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 414,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4645:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 415,
													"nodeType": "ArrayTypeName",
													"src": "4645:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4696:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4677:25:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 417,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4677:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 418,
													"nodeType": "ArrayTypeName",
													"src": "4677:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4727:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4712:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4712:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4593:144:5"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4746:0:5"
									},
									"scope": 425,
									"src": "4563:184:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 426,
							"src": "337:4412:5",
							"usedErrors": [],
							"usedEvents": [
								322,
								337,
								346,
								353
							]
						}
					],
					"src": "110:4640:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							503
						]
					},
					"id": 504,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 427,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 428,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 503,
							"linearizedBaseContracts": [
								503
							],
							"name": "IERC20",
							"nameLocation": "215:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 437,
									"name": "Transfer",
									"nameLocation": "397:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "406:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "428:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "448:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:6"
									},
									"src": "391:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 446,
									"name": "Approval",
									"nameLocation": "628:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "637:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "660:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "685:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:6"
									},
									"src": "622:78:6"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:6"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "822:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:6"
									},
									"scope": 503,
									"src": "776:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "932:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:6"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:6"
									},
									"scope": 503,
									"src": "913:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1223:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1235:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:6"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "1268:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:6"
									},
									"scope": 503,
									"src": "1205:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1568:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1583:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:6"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1623:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:6"
									},
									"scope": 503,
									"src": "1549:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2327:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:6"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:6"
									},
									"scope": 503,
									"src": "2310:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2713:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2727:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2739:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:6"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "2772:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:6"
									},
									"scope": 503,
									"src": "2691:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 504,
							"src": "205:2575:6",
							"usedErrors": [],
							"usedEvents": [
								437,
								446
							]
						}
					],
					"src": "106:2675:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							503
						],
						"SafeERC20": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 507,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 504,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 506,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 503,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 230,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 508,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 510,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 515,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 524,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 536,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 539,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$503",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 470,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 541,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 542,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 543,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 537,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 535,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 527,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 526,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 503,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 967,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 562,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 565,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$503",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 502,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 567,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 554,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 568,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 556,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 569,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 570,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 563,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 561,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 551,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 550,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 503,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 967,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "2033:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "2074:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "2096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$503",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 470,
																	"src": "2096:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 594,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "2113:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 595,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 583,
																			"src": "2117:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 596,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 590,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2050:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 587,
												"id": 599,
												"nodeType": "Return",
												"src": "2043:82:7"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1968:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 577,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "1968:6:7"
													},
													"referencedDeclaration": 503,
													"src": "1968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1982:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:7"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "2027:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:7"
									},
									"scope": 967,
									"src": "1943:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "2381:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "2422:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 620,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "2444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$503",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 502,
																	"src": "2444:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 622,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 607,
																			"src": "2465:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 623,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "2471:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 624,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "2475:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 625,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2398:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 615,
												"id": 628,
												"nodeType": "Return",
												"src": "2391:92:7"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 603,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "2302:6:7"
													},
													"referencedDeclaration": 503,
													"src": "2302:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:7"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 613,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 967,
									"src": "2273:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3232:139:7",
										"statements": [
											{
												"assignments": [
													642
												],
												"declarations": [
													{
														"constant": false,
														"id": 642,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3242:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 651,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 647,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$967",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$967",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 643,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 480,
														"src": "3265:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 653,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3327:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 654,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "3334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 655,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "3343:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 656,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "3358:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 652,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "3314:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:7"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3177:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 633,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 632,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "3177:6:7"
													},
													"referencedDeclaration": 503,
													"src": "3177:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3208:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:7"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:7"
									},
									"scope": 967,
									"src": "3146:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "4137:370:7",
										"statements": [
											{
												"id": 702,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:7",
												"statements": [
													{
														"assignments": [
															673
														],
														"declarations": [
															{
																"constant": false,
																"id": 673,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 702,
																"src": "4171:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 682,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 678,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$967",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$967",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 676,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 680,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "4229:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 674,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "4198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$503",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 480,
																"src": "4198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 683,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "4255:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 684,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "4274:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 693,
														"nodeType": "IfStatement",
														"src": "4251:160:7",
														"trueBody": {
															"id": 692,
															"nodeType": "Block",
															"src": "4293:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 687,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 667,
																				"src": "4351:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 688,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 673,
																				"src": "4360:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 689,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "4378:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 686,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 524,
																			"src": "4318:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 691,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 695,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "4437:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$503",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 696,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "4444:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 697,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 673,
																		"src": "4453:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 698,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "4472:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$503",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 694,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 751,
																"src": "4424:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 701,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "4070:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 664,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 663,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "4070:6:7"
													},
													"referencedDeclaration": 503,
													"src": "4070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "4084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "4101:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:7"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:7"
									},
									"scope": 967,
									"src": "4039:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "5161:303:7",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 750,
														"src": "5171:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 715,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 719,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$503",
																	"typeString": "contract IERC20"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 490,
															"src": "5214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 721,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "5230:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "5239:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 723,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 717,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 718,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:7"
											},
											{
												"condition": {
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 727,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "5286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$503",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 728,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "5293:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$503",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 726,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "5262:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 749,
												"nodeType": "IfStatement",
												"src": "5257:201:7",
												"trueBody": {
													"id": 748,
													"nodeType": "Block",
													"src": "5308:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 732,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "5342:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$503",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 735,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 708,
																					"src": "5364:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$503",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 736,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 490,
																				"src": "5364:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 737,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 710,
																						"src": "5380:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 738,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 739,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 733,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$503",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 731,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "5322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 742,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 744,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "5427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$503",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 745,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 716,
																		"src": "5434:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$503",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 743,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "5407:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 747,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5106:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 707,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 706,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "5106:6:7"
													},
													"referencedDeclaration": 503,
													"src": "5106:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "5137:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:7"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 967,
									"src": "5084:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "5911:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 764,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "5925:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 778,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "6034:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 779,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "6038:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 780,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "6045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 776,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6012:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"nodeType": "IfStatement",
													"src": "6007:117:7",
													"trueBody": {
														"id": 790,
														"nodeType": "Block",
														"src": "6052:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 786,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "6106:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 784,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 783,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "6073:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 789,
																"nodeType": "RevertStatement",
																"src": "6066:47:7"
															}
														]
													}
												},
												"id": 792,
												"nodeType": "IfStatement",
												"src": "5921:203:7",
												"trueBody": {
													"id": 775,
													"nodeType": "Block",
													"src": "5946:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 770,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "5973:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 771,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 757,
																		"src": "5980:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 772,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "5984:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 769,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "5960:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 774,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "5840:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 754,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 753,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:7"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "5856:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "5868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "5883:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 760,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:7"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:7"
									},
									"scope": 967,
									"src": "5808:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "6649:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 809,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "6663:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 824,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "6786:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 825,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "6792:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 826,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "6796:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 827,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 806,
																	"src": "6803:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 822,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "6760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 838,
													"nodeType": "IfStatement",
													"src": "6755:127:7",
													"trueBody": {
														"id": 837,
														"nodeType": "Block",
														"src": "6810:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 833,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "6864:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 832,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 831,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 830,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "6831:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 836,
																"nodeType": "RevertStatement",
																"src": "6824:47:7"
															}
														]
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "6659:223:7",
												"trueBody": {
													"id": 821,
													"nodeType": "Block",
													"src": "6684:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 815,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "6715:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 816,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 800,
																		"src": "6722:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 817,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "6728:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 818,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "6732:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 814,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "6698:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 820,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6527:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 797,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 796,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:7"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6573:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:7"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:7"
									},
									"scope": 967,
									"src": "6482:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "7655:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 854,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "7669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 868,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "7777:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 869,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "7781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 870,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "7788:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 866,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "7756:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 881,
													"nodeType": "IfStatement",
													"src": "7751:116:7",
													"trueBody": {
														"id": 880,
														"nodeType": "Block",
														"src": "7795:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 876,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 845,
																					"src": "7849:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 874,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 873,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "7816:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 879,
																"nodeType": "RevertStatement",
																"src": "7809:47:7"
															}
														]
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "7665:202:7",
												"trueBody": {
													"id": 865,
													"nodeType": "Block",
													"src": "7690:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 860,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 845,
																		"src": "7717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 861,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 847,
																		"src": "7724:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 862,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "7728:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 859,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "7704:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 864,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "7584:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 844,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 843,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:7"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "7600:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "7612:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "7627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:7"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:7"
									},
									"scope": 967,
									"src": "7553:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "8440:650:7",
										"statements": [
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "8450:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 895,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:7"
											},
											{
												"assignments": [
													897
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 924,
														"src": "8478:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 898,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:7"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:7",
													"nodeType": "YulBlock",
													"src": "8532:396:7",
													"statements": [
														{
															"nativeSrc": "8546:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:7"
																		},
																		"nativeSrc": "8566:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:7"
																		},
																		"nativeSrc": "8583:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:7"
																		},
																		"nativeSrc": "8600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:7"
																},
																"nativeSrc": "8561:60:7",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:7",
																"nodeType": "YulBlock",
																"src": "8682:157:7",
																"statements": [
																	{
																		"nativeSrc": "8700:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:7"
																			},
																			"nativeSrc": "8711:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:7"
																					},
																					"nativeSrc": "8762:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:7"
																			},
																			"nativeSrc": "8739:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:7"
																		},
																		"nativeSrc": "8739:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:7"
																					},
																					"nativeSrc": "8808:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:7"
																			},
																			"nativeSrc": "8796:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:7"
																		},
																		"nativeSrc": "8796:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:7"
																},
																"nativeSrc": "8666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:7"
															},
															"nativeSrc": "8663:176:7",
															"nodeType": "YulIf",
															"src": "8663:176:7"
														},
														{
															"nativeSrc": "8852:30:7",
															"nodeType": "YulAssignment",
															"src": "8852:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:7"
																},
																"nativeSrc": "8866:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:7"
																}
															]
														},
														{
															"nativeSrc": "8895:23:7",
															"nodeType": "YulAssignment",
															"src": "8895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:7"
																},
																"nativeSrc": "8910:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 890,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:7",
														"valueSize": 1
													},
													{
														"declaration": 890,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:7",
														"valueSize": 1
													},
													{
														"declaration": 894,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:7",
														"valueSize": 1
													},
													{
														"declaration": 897,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:7",
														"valueSize": 1
													},
													{
														"declaration": 888,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 899,
												"nodeType": "InlineAssembly",
												"src": "8507:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 900,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "8942:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 911,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "8994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 905,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 888,
																			"src": "8968:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$503",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$503",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 903,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 923,
												"nodeType": "IfStatement",
												"src": "8938:146:7",
												"trueBody": {
													"id": 922,
													"nodeType": "Block",
													"src": "9012:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 918,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "9066:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$503",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$503",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 916,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 915,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "9033:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 921,
															"nodeType": "RevertStatement",
															"src": "9026:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "8399:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 887,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 886,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "8399:6:7"
													},
													"referencedDeclaration": 503,
													"src": "8399:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "8413:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:7"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:7"
									},
									"scope": 967,
									"src": "8370:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "9681:391:7",
										"statements": [
											{
												"assignments": [
													937
												],
												"declarations": [
													{
														"constant": false,
														"id": 937,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "9691:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 936,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:7"
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "9713:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:7"
											},
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "9741:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 942,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:7",
													"nodeType": "YulBlock",
													"src": "9795:174:7",
													"statements": [
														{
															"nativeSrc": "9809:71:7",
															"nodeType": "YulAssignment",
															"src": "9809:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:7"
																		},
																		"nativeSrc": "9825:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:7"
																		},
																		"nativeSrc": "9842:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:7"
																		},
																		"nativeSrc": "9859:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:7"
																},
																"nativeSrc": "9820:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:7"
																}
															]
														},
														{
															"nativeSrc": "9893:30:7",
															"nodeType": "YulAssignment",
															"src": "9893:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:7"
																},
																"nativeSrc": "9907:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:7"
																}
															]
														},
														{
															"nativeSrc": "9936:23:7",
															"nodeType": "YulAssignment",
															"src": "9936:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:7"
																},
																"nativeSrc": "9951:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 931,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:7",
														"valueSize": 1
													},
													{
														"declaration": 931,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:7",
														"valueSize": 1
													},
													{
														"declaration": 940,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:7",
														"valueSize": 1
													},
													{
														"declaration": 943,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:7",
														"valueSize": 1
													},
													{
														"declaration": 937,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:7",
														"valueSize": 1
													},
													{
														"declaration": 929,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 945,
												"nodeType": "InlineAssembly",
												"src": "9770:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 946,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "9985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 947,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "9997:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 958,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "10048:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 952,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 929,
																						"src": "10023:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$503",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$503",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 951,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 950,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 953,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 962,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 935,
												"id": 964,
												"nodeType": "Return",
												"src": "9978:87:7"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "9625:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$503",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 928,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 927,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "9625:6:7"
													},
													"referencedDeclaration": 503,
													"src": "9625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "9639:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 930,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:7"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "9675:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:7"
									},
									"scope": 967,
									"src": "9592:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 968,
							"src": "698:9376:7",
							"usedErrors": [
								515,
								524
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1126
						],
						"IERC721": [
							1084
						]
					},
					"id": 1085,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1085,
							"sourceUnit": 1127,
							"src": "134:62:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 970,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1126,
										"src": "142:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 973,
										"name": "IERC165",
										"nameLocations": [
											"288:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1126,
										"src": "288:7:8"
									},
									"id": 974,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:8"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 972,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:8",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1084,
							"linearizedBaseContracts": [
								1084,
								1126
							],
							"name": "IERC721",
							"nameLocation": "277:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:8",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 983,
									"name": "Transfer",
									"nameLocation": "401:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "410:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "432:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "452:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:8"
									},
									"src": "395:82:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:8",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 992,
									"name": "Approval",
									"nameLocation": "588:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "597:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "620:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "646:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:8"
									},
									"src": "582:89:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:8",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1001,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "820:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "843:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "869:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:8"
									},
									"src": "799:85:8"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:8",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "990:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:8"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1028:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:8"
									},
									"scope": 1084,
									"src": "971:74:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:8",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1204:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:8"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1244:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:8"
									},
									"scope": 1084,
									"src": "1187:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1029,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1861:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1875:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1887:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1904:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:8"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:8"
									},
									"scope": 1084,
									"src": "1835:99:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:8",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1039,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2677:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2691:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "2703:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:8"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:8"
									},
									"scope": 1084,
									"src": "2651:78:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:8",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "3495:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "3509:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "3521:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:8"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:8"
									},
									"scope": 1084,
									"src": "3473:74:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:8",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "4027:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "4039:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:8"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:8"
									},
									"scope": 1084,
									"src": "4010:55:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:8",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "4418:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "4436:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1061,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:8"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:8"
									},
									"scope": 1084,
									"src": "4391:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:8",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "4631:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:8"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "4671:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:8"
									},
									"scope": 1084,
									"src": "4610:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:8",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4864:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4879:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:8"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "4920:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:8"
									},
									"scope": 1084,
									"src": "4838:88:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1085,
							"src": "267:4661:8",
							"usedErrors": [],
							"usedEvents": [
								983,
								992,
								1001
							]
						}
					],
					"src": "108:4821:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1114
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1086,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1087,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1114,
							"linearizedBaseContracts": [
								1114
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1092,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1091,
												"id": 1094,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1114,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1101,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1100,
												"id": 1103,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1114,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1109,
												"id": 1111,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1114,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1115,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1126
						]
					},
					"id": 1127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1116,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1117,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1126,
							"linearizedBaseContracts": [
								1126
							],
							"name": "IERC165",
							"nameLocation": "433:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "819:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:10"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "862:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:10"
									},
									"scope": 1126,
									"src": "792:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1127,
							"src": "423:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:10"
				},
				"id": 10
			},
			"Marketplace_NFT.sol": {
				"ast": {
					"absolutePath": "Marketplace_NFT.sol",
					"exportedSymbols": {
						"Context": [
							1114
						],
						"IERC1155": [
							425
						],
						"IERC1363": [
							229
						],
						"IERC165": [
							1126
						],
						"IERC20": [
							503
						],
						"IERC721": [
							1084
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							967
						],
						"SavePointMarketplace": [
							1669
						]
					},
					"id": 1670,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1670,
							"sourceUnit": 504,
							"src": "58:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1670,
							"sourceUnit": 968,
							"src": "115:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1670,
							"sourceUnit": 1085,
							"src": "182:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1670,
							"sourceUnit": 426,
							"src": "241:60:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1670,
							"sourceUnit": 303,
							"src": "303:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1670,
							"sourceUnit": 148,
							"src": "366:52:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1135,
										"name": "Ownable",
										"nameLocations": [
											"453:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "453:7:11"
									},
									"id": 1136,
									"nodeType": "InheritanceSpecifier",
									"src": "453:7:11"
								},
								{
									"baseName": {
										"id": 1137,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"462:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "462:15:11"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "462:15:11"
								}
							],
							"canonicalName": "SavePointMarketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1669,
							"linearizedBaseContracts": [
								1669,
								302,
								147,
								1114
							],
							"name": "SavePointMarketplace",
							"nameLocation": "429:20:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1142,
									"libraryName": {
										"id": 1139,
										"name": "SafeERC20",
										"nameLocations": [
											"490:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "490:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "484:27:11",
									"typeName": {
										"id": 1141,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1140,
											"name": "IERC20",
											"nameLocations": [
												"504:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 503,
											"src": "504:6:11"
										},
										"referencedDeclaration": 503,
										"src": "504:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$503",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 1145,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "531:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1669,
									"src": "517:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$503",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1144,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1143,
											"name": "IERC20",
											"nameLocations": [
												"517:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 503,
											"src": "517:6:11"
										},
										"referencedDeclaration": 503,
										"src": "517:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$503",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c415b95c",
									"id": 1147,
									"mutability": "mutable",
									"name": "feeCollector",
									"nameLocation": "582:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1669,
									"src": "567:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1146,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "567:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7fd6f15c",
									"id": 1149,
									"mutability": "mutable",
									"name": "feePercent",
									"nameLocation": "639:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1669,
									"src": "624:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1148,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c0f6ae97",
									"id": 1153,
									"mutability": "mutable",
									"name": "allowedNFTContracts",
									"nameLocation": "792:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1669,
									"src": "760:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1152,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "768:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "760:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1151,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "779:4:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SavePointMarketplace.Listing",
									"id": 1168,
									"members": [
										{
											"constant": false,
											"id": 1155,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "888:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "880:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1154,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "880:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1157,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "912:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "904:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1156,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "904:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1159,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "941:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "933:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1158,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "933:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1161,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "966:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "958:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1160,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "958:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1163,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1009:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "1001:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1001:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1165,
											"mutability": "mutable",
											"name": "isERC1155",
											"nameLocation": "1080:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "1075:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1164,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1075:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1167,
											"mutability": "mutable",
											"name": "active",
											"nameLocation": "1118:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "1113:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1166,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1113:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "862:7:11",
									"nodeType": "StructDefinition",
									"scope": 1669,
									"src": "855:276:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1170,
									"mutability": "mutable",
									"name": "_listingIdCounter",
									"nameLocation": "1185:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 1669,
									"src": "1169:33:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1169,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1169:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "de74e57b",
									"id": 1175,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "1272:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1669,
									"src": "1237:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1168_storage_$",
										"typeString": "mapping(uint256 => struct SavePointMarketplace.Listing)"
									},
									"typeName": {
										"id": 1174,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1171,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1245:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1237:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1168_storage_$",
											"typeString": "mapping(uint256 => struct SavePointMarketplace.Listing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1173,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1172,
												"name": "Listing",
												"nameLocations": [
													"1256:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1168,
												"src": "1256:7:11"
											},
											"referencedDeclaration": 1168,
											"src": "1256:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
												"typeString": "struct SavePointMarketplace.Listing"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d1ed8900afb99183d6684ef82e558ec94d3feba62cff25b765b503bd5505e09f",
									"id": 1191,
									"name": "NFTListed",
									"nameLocation": "1307:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"indexed": true,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "1333:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1317:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1317:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "1360:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1344:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1344:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1384:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1368:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1405:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1397:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1422:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1414:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1438:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1430:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "isERC1155",
												"nameLocation": "1450:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1445:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1188,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1445:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:144:11"
									},
									"src": "1301:160:11"
								},
								{
									"anonymous": false,
									"eventSelector": "041bfe3082d481c8f62f6ed145f1d8cbec0daebcb4d750ae5c42a51946551d13",
									"id": 1201,
									"name": "NFTSale",
									"nameLocation": "1472:7:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"indexed": true,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "1496:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1480:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1523:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1507:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1507:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1538:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1530:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1530:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1553:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1545:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:78:11"
									},
									"src": "1466:92:11"
								},
								{
									"anonymous": false,
									"eventSelector": "c0c55a6edead4433d18cb1e287a0a20a2fa003a6f483bc9823d2e504d70d1c67",
									"id": 1205,
									"name": "NFTDelisted",
									"nameLocation": "1569:11:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"indexed": true,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "1597:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1581:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1580:27:11"
									},
									"src": "1563:45:11"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "1751:451:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1220,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "1769:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1793:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1785:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1221,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1785:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1785:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1769:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f776e6572207a65726f",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1797:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945",
																"typeString": "literal_string \"owner zero\""
															},
															"value": "owner zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a9a9dc987ace21c107e214c82f65c57817086e014e642e3b028a5d3ffe3d945",
																"typeString": "literal_string \"owner zero\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1761:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "1761:49:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1230,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "1828:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1853:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1845:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1231,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1845:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1845:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1828:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7061796d656e74546f6b656e207a65726f",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1857:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc",
																"typeString": "literal_string \"paymentToken zero\""
															},
															"value": "paymentToken zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_138dc99d5029c82dc596dc33d86de30ca621f1dfc28e356ccac251e9065dc2dc",
																"typeString": "literal_string \"paymentToken zero\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1820:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1820:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "1820:57:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1240,
																"name": "_feeCollector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "1895:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1920:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1912:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1912:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1912:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1895:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "666565436f6c6c6563746f72207a65726f",
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1924:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff",
																"typeString": "literal_string \"feeCollector zero\""
															},
															"value": "feeCollector zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_31f93ed870a33cce70ffca5f4a61e6d3d1aef089a87ad04323e3c6a4ccb3f4ff",
																"typeString": "literal_string \"feeCollector zero\""
															}
														],
														"id": 1239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1887:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1887:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "1887:57:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1250,
																"name": "_feePercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "1962:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1977:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "1962:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "66656550657263656e74206d6178203130303030",
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1984:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62",
																"typeString": "literal_string \"feePercent max 10000\""
															},
															"value": "feePercent max 10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab00b15ac40fc5d1b7a20e301ed953dbeafb49b2c9fc14235e8e12fd10600a62",
																"typeString": "literal_string \"feePercent max 10000\""
															}
														],
														"id": 1249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1954:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1954:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "1954:53:11"
											},
											{
												"expression": {
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "2018:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$503",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1258,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "2040:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1257,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2033:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$503_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2033:21:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$503",
															"typeString": "contract IERC20"
														}
													},
													"src": "2018:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "2018:36:11"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2064:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1263,
														"name": "_feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "2079:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2064:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "2064:28:11"
											},
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1266,
														"name": "feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "2102:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1267,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2115:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2102:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "2102:24:11"
											},
											{
												"expression": {
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1270,
														"name": "_listingIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "2158:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2158:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "2158:21:11"
											}
										]
									},
									"id": 1275,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1216,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1207,
													"src": "1732:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1217,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1215,
												"name": "Ownable",
												"nameLocations": [
													"1724:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1724:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1724:21:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1634:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1626:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1626:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "1656:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1648:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "_feeCollector",
												"nameLocation": "1679:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1671:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "1702:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "1694:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1625:89:11"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1751:0:11"
									},
									"scope": 1669,
									"src": "1614:588:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1298,
										"nodeType": "Block",
										"src": "2298:112:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1283,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "2316:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2341:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2333:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1284,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2333:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2333:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2316:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2061646472",
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2345:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															},
															"value": "zero addr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "2308:49:11"
											},
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1292,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "2367:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$503",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1294,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "2389:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1293,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "2382:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$503_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2382:21:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$503",
															"typeString": "contract IERC20"
														}
													},
													"src": "2367:36:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$503",
														"typeString": "contract IERC20"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "2367:36:11"
											}
										]
									},
									"functionSelector": "6a326ab1",
									"id": 1299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1280,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1279,
												"name": "onlyOwner",
												"nameLocations": [
													"2288:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2288:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2288:9:11"
										}
									],
									"name": "setPaymentToken",
									"nameLocation": "2240:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "2264:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "2256:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:23:11"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:0:11"
									},
									"scope": 1669,
									"src": "2231:179:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "2483:104:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1307,
																"name": "_feeCollector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1301,
																"src": "2501:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2526:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2518:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1308,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2518:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2518:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2501:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2061646472",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2530:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															},
															"value": "zero addr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															}
														],
														"id": 1306,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "2493:49:11"
											},
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1316,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2552:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1317,
														"name": "_feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1301,
														"src": "2567:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2552:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "2552:28:11"
											}
										]
									},
									"functionSelector": "a42dce80",
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1303,
												"name": "onlyOwner",
												"nameLocations": [
													"2473:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2473:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2473:9:11"
										}
									],
									"name": "setFeeCollector",
									"nameLocation": "2425:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "_feeCollector",
												"nameLocation": "2449:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "2441:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:23:11"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:11"
									},
									"scope": 1669,
									"src": "2416:171:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "2656:93:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1329,
																"name": "_feePercent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1323,
																"src": "2674:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2689:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "2674:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6d6178203130303030",
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2696:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc",
																"typeString": "literal_string \"max 10000\""
															},
															"value": "max 10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0910e0709308dde1b2e08563104cff0554c15ba0727147c5eb35c7e0e7150efc",
																"typeString": "literal_string \"max 10000\""
															}
														],
														"id": 1328,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2666:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2666:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "ExpressionStatement",
												"src": "2666:42:11"
											},
											{
												"expression": {
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1335,
														"name": "feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "2718:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1336,
														"name": "_feePercent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "2731:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2718:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "2718:24:11"
											}
										]
									},
									"functionSelector": "7ce3489b",
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1326,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1325,
												"name": "onlyOwner",
												"nameLocations": [
													"2646:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2646:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2646:9:11"
										}
									],
									"name": "setFeePercent",
									"nameLocation": "2602:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "_feePercent",
												"nameLocation": "2624:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2616:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2616:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2615:21:11"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:0:11"
									},
									"scope": 1669,
									"src": "2593:156:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "2840:59:11",
										"statements": [
											{
												"expression": {
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1349,
															"name": "allowedNFTContracts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "2850:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1351,
														"indexExpression": {
															"id": 1350,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "2870:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2850:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1352,
														"name": "allowed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "2885:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2850:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "2850:42:11"
											}
										]
									},
									"functionSelector": "80df50a8",
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "onlyOwner",
												"nameLocations": [
													"2830:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2830:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2830:9:11"
										}
									],
									"name": "setAllowedNFTContract",
									"nameLocation": "2764:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "2794:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2786:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "allowed",
												"nameLocation": "2812:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "2807:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2807:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2785:35:11"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2840:0:11"
									},
									"scope": 1669,
									"src": "2755:144:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "3054:1249:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1372,
																"name": "allowedNFTContracts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "3072:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1374,
															"indexExpression": {
																"id": 1373,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "3092:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3072:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e465420636f6e7472616374206e6f7420616c6c6f776564",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3106:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49",
																"typeString": "literal_string \"NFT contract not allowed\""
															},
															"value": "NFT contract not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f54b97689da22e136270605ea61fd852fd4706b64b09328bc6f6c2710233e49",
																"typeString": "literal_string \"NFT contract not allowed\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3064:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3064:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "3064:69:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1379,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "3151:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3159:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3151:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7072696365207a65726f",
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3162:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050",
																"typeString": "literal_string \"price zero\""
															},
															"value": "price zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1d123b858be11a27c4c4d6e9d2e76be49669945ac1a15d2ef4c0566a9953050",
																"typeString": "literal_string \"price zero\""
															}
														],
														"id": 1378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3143:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3143:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "3143:32:11"
											},
											{
												"condition": {
													"id": 1385,
													"name": "isERC1155",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1366,
													"src": "3190:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "3549:337:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1427,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "3571:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3581:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3571:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "616d6f756e74206d757374206265203120666f7220455243373231",
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3584:29:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862",
																			"typeString": "literal_string \"amount must be 1 for ERC721\""
																		},
																		"value": "amount must be 1 for ERC721"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3d6ee869a8c1d78d89c462bfd55883cf7f5af0476897c470004024b620e56862",
																			"typeString": "literal_string \"amount must be 1 for ERC721\""
																		}
																	],
																	"id": 1426,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3563:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3563:51:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "3563:51:11"
														},
														{
															"assignments": [
																1435
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1435,
																	"mutability": "mutable",
																	"name": "erc721",
																	"nameLocation": "3636:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1474,
																	"src": "3628:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$1084",
																		"typeString": "contract IERC721"
																	},
																	"typeName": {
																		"id": 1434,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1433,
																			"name": "IERC721",
																			"nameLocations": [
																				"3628:7:11"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1084,
																			"src": "3628:7:11"
																		},
																		"referencedDeclaration": 1084,
																		"src": "3628:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1084",
																			"typeString": "contract IERC721"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1439,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1437,
																		"name": "nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "3653:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1436,
																	"name": "IERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1084,
																	"src": "3645:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC721_$1084_$",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3645:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC721_$1084",
																	"typeString": "contract IERC721"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3628:37:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1443,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1360,
																					"src": "3702:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1441,
																					"name": "erc721",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1435,
																					"src": "3687:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721_$1084",
																						"typeString": "contract IERC721"
																					}
																				},
																				"id": 1442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3694:7:11",
																				"memberName": "ownerOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1017,
																				"src": "3687:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																					"typeString": "function (uint256) view external returns (address)"
																				}
																			},
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3687:23:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1445,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3714:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3718:6:11",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3714:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3687:37:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6e6f74206f776e6572",
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3726:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																			"typeString": "literal_string \"not owner\""
																		},
																		"value": "not owner"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f2881edc58d5a08d0243d7f8afdab31d949d85825e628e4b88558657a031f74e",
																			"typeString": "literal_string \"not owner\""
																		}
																	],
																	"id": 1440,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3679:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3679:59:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1450,
															"nodeType": "ExpressionStatement",
															"src": "3679:59:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1454,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3784:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3788:6:11",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3784:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1458,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "3804:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SavePointMarketplace_$1669",
																								"typeString": "contract SavePointMarketplace"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SavePointMarketplace_$1669",
																								"typeString": "contract SavePointMarketplace"
																							}
																						],
																						"id": 1457,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3796:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1456,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "3796:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1459,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3796:13:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1452,
																					"name": "erc721",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1435,
																					"src": "3760:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721_$1084",
																						"typeString": "contract IERC721"
																					}
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3767:16:11",
																				"memberName": "isApprovedForAll",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1083,
																				"src": "3760:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																					"typeString": "function (address,address) view external returns (bool)"
																				}
																			},
																			"id": 1460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3760:50:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1463,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1360,
																						"src": "3833:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1461,
																						"name": "erc721",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1435,
																						"src": "3814:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC721_$1084",
																							"typeString": "contract IERC721"
																						}
																					},
																					"id": 1462,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3821:11:11",
																					"memberName": "getApproved",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1073,
																					"src": "3814:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																						"typeString": "function (uint256) view external returns (address)"
																					}
																				},
																				"id": 1464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3814:27:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 1467,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "3853:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SavePointMarketplace_$1669",
																							"typeString": "contract SavePointMarketplace"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SavePointMarketplace_$1669",
																							"typeString": "contract SavePointMarketplace"
																						}
																					],
																					"id": 1466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3845:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1465,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3845:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3845:13:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "3814:44:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3760:98:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6e6f7420617070726f766564",
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3860:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16",
																			"typeString": "literal_string \"not approved\""
																		},
																		"value": "not approved"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16",
																			"typeString": "literal_string \"not approved\""
																		}
																	],
																	"id": 1451,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3752:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3752:123:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "3752:123:11"
														}
													]
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "3186:700:11",
												"trueBody": {
													"id": 1425,
													"nodeType": "Block",
													"src": "3201:342:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1387,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "3223:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3232:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3223:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "616d6f756e74207a65726f",
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3235:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92",
																			"typeString": "literal_string \"amount zero\""
																		},
																		"value": "amount zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_7a4b27aca3817e208aeec5219b8023ae68f7f4a75daa22a4be89e1a2b2c69b92",
																			"typeString": "literal_string \"amount zero\""
																		}
																	],
																	"id": 1386,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3215:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3215:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1392,
															"nodeType": "ExpressionStatement",
															"src": "3215:34:11"
														},
														{
															"assignments": [
																1395
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1395,
																	"mutability": "mutable",
																	"name": "erc1155",
																	"nameLocation": "3316:7:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1425,
																	"src": "3307:16:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1155_$425",
																		"typeString": "contract IERC1155"
																	},
																	"typeName": {
																		"id": 1394,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1393,
																			"name": "IERC1155",
																			"nameLocations": [
																				"3307:8:11"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 425,
																			"src": "3307:8:11"
																		},
																		"referencedDeclaration": 425,
																		"src": "3307:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155_$425",
																			"typeString": "contract IERC1155"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1399,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1397,
																		"name": "nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1358,
																		"src": "3335:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1396,
																	"name": "IERC1155",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "3326:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC1155_$425_$",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3326:21:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC1155_$425",
																	"typeString": "contract IERC1155"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3307:40:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1403,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "3387:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1404,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3391:6:11",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "3387:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1405,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1360,
																					"src": "3399:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1401,
																					"name": "erc1155",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1395,
																					"src": "3369:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1155_$425",
																						"typeString": "contract IERC1155"
																					}
																				},
																				"id": 1402,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3377:9:11",
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 363,
																				"src": "3369:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,uint256) view external returns (uint256)"
																				}
																			},
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3369:38:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1407,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "3411:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3369:48:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "696e73756666696369656e742062616c616e6365",
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3419:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																			"typeString": "literal_string \"insufficient balance\""
																		},
																		"value": "insufficient balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a6d1ff1db3d0b9b8c60e12ccab5ce7431be9a2cd0518ac362f1c5c1e0b1cefee",
																			"typeString": "literal_string \"insufficient balance\""
																		}
																	],
																	"id": 1400,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3361:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3361:81:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1411,
															"nodeType": "ExpressionStatement",
															"src": "3361:81:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1415,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "3489:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3493:6:11",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "3489:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 1419,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "3509:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_SavePointMarketplace_$1669",
																							"typeString": "contract SavePointMarketplace"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_SavePointMarketplace_$1669",
																							"typeString": "contract SavePointMarketplace"
																						}
																					],
																					"id": 1418,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3501:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1417,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "3501:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3501:13:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1413,
																				"name": "erc1155",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1395,
																				"src": "3464:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC1155_$425",
																					"typeString": "contract IERC1155"
																				}
																			},
																			"id": 1414,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3472:16:11",
																			"memberName": "isApprovedForAll",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 394,
																			"src": "3464:24:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view external returns (bool)"
																			}
																		},
																		"id": 1421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3464:51:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "6e6f7420617070726f766564",
																		"id": 1422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3517:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16",
																			"typeString": "literal_string \"not approved\""
																		},
																		"value": "not approved"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_ccb5aa6956d790f378a48c06e43b63310aa5e35ad9c335136accb569cf503c16",
																			"typeString": "literal_string \"not approved\""
																		}
																	],
																	"id": 1412,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3456:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3456:76:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1424,
															"nodeType": "ExpressionStatement",
															"src": "3456:76:11"
														}
													]
												}
											},
											{
												"assignments": [
													1477
												],
												"declarations": [
													{
														"constant": false,
														"id": 1477,
														"mutability": "mutable",
														"name": "listingId",
														"nameLocation": "3904:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "3896:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1476,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3896:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1480,
												"initialValue": {
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3916:19:11",
													"subExpression": {
														"id": 1478,
														"name": "_listingIdCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "3916:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3896:39:11"
											},
											{
												"expression": {
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1481,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "3945:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1168_storage_$",
																"typeString": "mapping(uint256 => struct SavePointMarketplace.Listing storage ref)"
															}
														},
														"id": 1483,
														"indexExpression": {
															"id": 1482,
															"name": "listingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "3954:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3945:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1168_storage",
															"typeString": "struct SavePointMarketplace.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1485,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3997:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4001:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3997:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1487,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1358,
																"src": "4034:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1488,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "4068:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1489,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1362,
																"src": "4097:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1490,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1364,
																"src": "4124:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1491,
																"name": "isERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1366,
																"src": "4154:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4185:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1484,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "3967:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$1168_storage_ptr_$",
																"typeString": "type(struct SavePointMarketplace.Listing storage pointer)"
															}
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3989:6:11",
															"4021:11:11",
															"4059:7:11",
															"4089:6:11",
															"4117:5:11",
															"4143:9:11",
															"4177:6:11"
														],
														"names": [
															"seller",
															"nftContract",
															"tokenId",
															"amount",
															"price",
															"isERC1155",
															"active"
														],
														"nodeType": "FunctionCall",
														"src": "3967:233:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1168_memory_ptr",
															"typeString": "struct SavePointMarketplace.Listing memory"
														}
													},
													"src": "3945:255:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1168_storage",
														"typeString": "struct SavePointMarketplace.Listing storage ref"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "3945:255:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1497,
															"name": "listingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "4226:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1498,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4237:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4241:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4237:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1500,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "4249:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1501,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1360,
															"src": "4262:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1502,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "4271:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1503,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "4279:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1504,
															"name": "isERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1366,
															"src": "4286:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1496,
														"name": "NFTListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "4216:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,uint256,bool)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4216:80:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "EmitStatement",
												"src": "4211:85:11"
											}
										]
									},
									"functionSelector": "3ae6064b",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1368,
												"name": "nonReentrant",
												"nameLocations": [
													"3041:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3041:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3041:12:11"
										}
									],
									"name": "listNFT",
									"nameLocation": "2939:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "2955:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "2947:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2976:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "2968:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2968:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2993:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "2985:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "3009:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "3001:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3001:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "isERC1155",
												"nameLocation": "3021:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "3016:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1365,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2946:85:11"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3054:0:11"
									},
									"scope": 1669,
									"src": "2930:1373:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "4391:223:11",
										"statements": [
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "4417:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1547,
														"src": "4401:17:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
															"typeString": "struct SavePointMarketplace.Listing"
														},
														"typeName": {
															"id": 1516,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1515,
																"name": "Listing",
																"nameLocations": [
																	"4401:7:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1168,
																"src": "4401:7:11"
															},
															"referencedDeclaration": 1168,
															"src": "4401:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																"typeString": "struct SavePointMarketplace.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"initialValue": {
													"baseExpression": {
														"id": 1518,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "4421:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1168_storage_$",
															"typeString": "mapping(uint256 => struct SavePointMarketplace.Listing storage ref)"
														}
													},
													"id": 1520,
													"indexExpression": {
														"id": 1519,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "4430:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4421:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1168_storage",
														"typeString": "struct SavePointMarketplace.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4401:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1523,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "4458:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																	"typeString": "struct SavePointMarketplace.Listing storage pointer"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4460:6:11",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1167,
															"src": "4458:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c697374696e6720696e616374697665",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4468:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27",
																"typeString": "literal_string \"listing inactive\""
															},
															"value": "listing inactive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27",
																"typeString": "literal_string \"listing inactive\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4450:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4450:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "4450:37:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1529,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "4505:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																		"typeString": "struct SavePointMarketplace.Listing storage pointer"
																	}
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4507:6:11",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1155,
																"src": "4505:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1531,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4517:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4521:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4517:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4505:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073656c6c6572",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4529:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															},
															"value": "not seller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e77c4a3978235c31fbb1be138ac60a8db876003712c1b04acc56e7b9ab046577",
																"typeString": "literal_string \"not seller\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4497:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4497:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "4497:45:11"
											},
											{
												"expression": {
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1537,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "4553:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																"typeString": "struct SavePointMarketplace.Listing storage pointer"
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4555:6:11",
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1167,
														"src": "4553:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4564:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4553:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "4553:16:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1544,
															"name": "listingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "4597:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1543,
														"name": "NFTDelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1205,
														"src": "4585:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4585:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "EmitStatement",
												"src": "4580:27:11"
											}
										]
									},
									"functionSelector": "cb917b9c",
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1513,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1512,
												"name": "nonReentrant",
												"nameLocations": [
													"4378:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4378:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4378:12:11"
										}
									],
									"name": "delistNFT",
									"nameLocation": "4340:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "4358:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "4350:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4349:19:11"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4391:0:11"
									},
									"scope": 1669,
									"src": "4331:283:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "4709:823:11",
										"statements": [
											{
												"assignments": [
													1557
												],
												"declarations": [
													{
														"constant": false,
														"id": 1557,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "4735:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "4719:17:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
															"typeString": "struct SavePointMarketplace.Listing"
														},
														"typeName": {
															"id": 1556,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1555,
																"name": "Listing",
																"nameLocations": [
																	"4719:7:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1168,
																"src": "4719:7:11"
															},
															"referencedDeclaration": 1168,
															"src": "4719:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																"typeString": "struct SavePointMarketplace.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"baseExpression": {
														"id": 1558,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "4739:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1168_storage_$",
															"typeString": "mapping(uint256 => struct SavePointMarketplace.Listing storage ref)"
														}
													},
													"id": 1560,
													"indexExpression": {
														"id": 1559,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1550,
														"src": "4748:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4739:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1168_storage",
														"typeString": "struct SavePointMarketplace.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4719:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1563,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "4776:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																	"typeString": "struct SavePointMarketplace.Listing storage pointer"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4778:6:11",
															"memberName": "active",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1167,
															"src": "4776:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c697374696e6720696e616374697665",
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27",
																"typeString": "literal_string \"listing inactive\""
															},
															"value": "listing inactive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3140a5a935866cd79b54f34810dc288992d4ae8bf4302cebe977c5262ff08c27",
																"typeString": "literal_string \"listing inactive\""
															}
														],
														"id": 1562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4768:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4768:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "4768:37:11"
											},
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "4824:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "4816:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4816:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1572,
												"initialValue": {
													"expression": {
														"id": 1570,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "4832:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
															"typeString": "struct SavePointMarketplace.Listing storage pointer"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4834:5:11",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1163,
													"src": "4832:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4816:23:11"
											},
											{
												"assignments": [
													1574
												],
												"declarations": [
													{
														"constant": false,
														"id": 1574,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4857:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "4849:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1573,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4849:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1581,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "4864:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1576,
																	"name": "feePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "4872:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4864:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1578,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4863:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4886:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "4863:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4849:42:11"
											},
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "sellerAmount",
														"nameLocation": "4909:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "4901:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1582,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4901:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1587,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1584,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "4924:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1585,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "4932:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4924:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4901:34:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1591,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5048:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5052:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5048:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1593,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1557,
																"src": "5060:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																	"typeString": "struct SavePointMarketplace.Listing storage pointer"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5062:6:11",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1155,
															"src": "5060:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1595,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "5070:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1588,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "5018:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5031:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 575,
														"src": "5018:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$503_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5018:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "5018:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1601,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5123:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5127:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5123:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1603,
															"name": "feeCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "5135:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1604,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "5149:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1598,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "5093:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$503",
																"typeString": "contract IERC20"
															}
														},
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5106:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 575,
														"src": "5093:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$503_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$503_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5093:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "5093:60:11"
											},
											{
												"condition": {
													"expression": {
														"id": 1607,
														"name": "l",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "5213:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
															"typeString": "struct SavePointMarketplace.Listing storage pointer"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5215:9:11",
													"memberName": "isERC1155",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1165,
													"src": "5213:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1639,
													"nodeType": "Block",
													"src": "5344:97:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1631,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "5398:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																				"typeString": "struct SavePointMarketplace.Listing storage pointer"
																			}
																		},
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5400:6:11",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1155,
																		"src": "5398:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1633,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5408:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5412:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5408:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1635,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "5420:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																				"typeString": "struct SavePointMarketplace.Listing storage pointer"
																			}
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5422:7:11",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1159,
																		"src": "5420:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1627,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "5366:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																						"typeString": "struct SavePointMarketplace.Listing storage pointer"
																					}
																				},
																				"id": 1628,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5368:11:11",
																				"memberName": "nftContract",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1157,
																				"src": "5366:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1626,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "5358:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1084_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5358:22:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1084",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5381:16:11",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1039,
																	"src": "5358:39:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) external"
																	}
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5358:72:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1638,
															"nodeType": "ExpressionStatement",
															"src": "5358:72:11"
														}
													]
												},
												"id": 1640,
												"nodeType": "IfStatement",
												"src": "5209:232:11",
												"trueBody": {
													"id": 1625,
													"nodeType": "Block",
													"src": "5226:112:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1614,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "5281:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																				"typeString": "struct SavePointMarketplace.Listing storage pointer"
																			}
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5283:6:11",
																		"memberName": "seller",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1155,
																		"src": "5281:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1616,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5291:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5295:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5291:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1618,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "5303:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																				"typeString": "struct SavePointMarketplace.Listing storage pointer"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5305:7:11",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1159,
																		"src": "5303:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1620,
																			"name": "l",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1557,
																			"src": "5314:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																				"typeString": "struct SavePointMarketplace.Listing storage pointer"
																			}
																		},
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5316:6:11",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1161,
																		"src": "5314:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5324:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1610,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "5249:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																						"typeString": "struct SavePointMarketplace.Listing storage pointer"
																					}
																				},
																				"id": 1611,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5251:11:11",
																				"memberName": "nftContract",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1157,
																				"src": "5249:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1609,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 425,
																			"src": "5240:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$425_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5240:23:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155_$425",
																			"typeString": "contract IERC1155"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5264:16:11",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 408,
																	"src": "5240:40:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5240:87:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1624,
															"nodeType": "ExpressionStatement",
															"src": "5240:87:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1641,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "5451:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1168_storage_ptr",
																"typeString": "struct SavePointMarketplace.Listing storage pointer"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5453:6:11",
														"memberName": "active",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1167,
														"src": "5451:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5462:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5451:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "5451:16:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1648,
															"name": "listingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "5491:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1649,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5502:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5506:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5502:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1651,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "5514:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1652,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "5521:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1647,
														"name": "NFTSale",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "5483:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5483:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "EmitStatement",
												"src": "5478:47:11"
											}
										]
									},
									"functionSelector": "51ed8288",
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1553,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1552,
												"name": "nonReentrant",
												"nameLocations": [
													"4696:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4696:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4696:12:11"
										}
									],
									"name": "buyNFT",
									"nameLocation": "4661:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "4676:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1656,
												"src": "4668:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:19:11"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4709:0:11"
									},
									"scope": 1669,
									"src": "4652:880:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1667,
										"nodeType": "Block",
										"src": "5662:56:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1663,
														"name": "allowedNFTContracts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "5679:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1665,
													"indexExpression": {
														"id": 1664,
														"name": "nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1658,
														"src": "5699:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5679:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1666,
												"nodeType": "Return",
												"src": "5672:39:11"
											}
										]
									},
									"functionSelector": "4e9b8c5d",
									"id": 1668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAllowedNFT",
									"nameLocation": "5599:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "5620:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "5612:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5612:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5611:21:11"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1668,
												"src": "5656:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5656:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:6:11"
									},
									"scope": 1669,
									"src": "5590:128:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1670,
							"src": "420:5300:11",
							"usedErrors": [
								13,
								18,
								515
							],
							"usedEvents": [
								24,
								1191,
								1201,
								1205
							]
						}
					],
					"src": "32:5689:11"
				},
				"id": 11
			}
		}
	}
}