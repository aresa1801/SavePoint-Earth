{
	"id": "dcb295064e74618a7ef80798a58a23c5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Game_Logic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\n\ncontract SavePointGameLogic is Ownable, Pausable, ReentrancyGuard {\n    IERC721 public avatarNFT;\n    IERC1155 public itemNFT;\n\n    address public treasuryWallet;\n    address public rewardSigner;\n\n    mapping(address => uint256) public userLevel;\n    mapping(address => mapping(uint256 => uint256)) public questProgress;\n    mapping(address => mapping(uint256 => bool)) public rewardClaimed;\n\n    event LevelUpdated(address indexed user, uint256 newLevel);\n    event QuestProgressUpdated(address indexed user, uint256 questId, uint256 progress);\n    event RewardClaimed(address indexed user, uint256 rewardId);\n\n    constructor(\n        address initialOwner,\n        address _avatarNFT,\n        address _itemNFT,\n        address _treasuryWallet,\n        address _rewardSigner\n    ) Ownable(initialOwner) {\n        require(_avatarNFT != address(0), \"avatarNFT zero\");\n        require(_itemNFT != address(0), \"itemNFT zero\");\n        require(_treasuryWallet != address(0), \"treasury zero\");\n        require(_rewardSigner != address(0), \"signer zero\");\n\n        avatarNFT = IERC721(_avatarNFT);\n        itemNFT = IERC1155(_itemNFT);\n        treasuryWallet = _treasuryWallet;\n        rewardSigner = _rewardSigner;\n    }\n\n    function setAvatarNFT(address _avatarNFT) external onlyOwner {\n        require(_avatarNFT != address(0), \"zero addr\");\n        avatarNFT = IERC721(_avatarNFT);\n    }\n\n    function setItemNFT(address _itemNFT) external onlyOwner {\n        require(_itemNFT != address(0), \"zero addr\");\n        itemNFT = IERC1155(_itemNFT);\n    }\n\n    function setTreasuryWallet(address _wallet) external onlyOwner {\n        require(_wallet != address(0), \"zero addr\");\n        treasuryWallet = _wallet;\n    }\n\n    function setRewardSigner(address _signer) external onlyOwner {\n        require(_signer != address(0), \"zero addr\");\n        rewardSigner = _signer;\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function updateLevel(address user, uint256 newLevel) external onlyOwner {\n        require(user != address(0), \"zero user\");\n        userLevel[user] = newLevel;\n        emit LevelUpdated(user, newLevel);\n    }\n\n    function updateQuestProgress(address user, uint256 questId, uint256 progress) external onlyOwner {\n        require(user != address(0), \"zero user\");\n        questProgress[user][questId] = progress;\n        emit QuestProgressUpdated(user, questId, progress);\n    }\n\n    /// @notice Internal function to recreate EIP-191 prefixed message hash\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is length of hash in bytes\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    function claimReward(\n        uint256 rewardId,\n        uint256 amount,\n        bytes calldata signature\n    ) external whenNotPaused nonReentrant {\n        require(!rewardClaimed[msg.sender][rewardId], \"already claimed\");\n\n        bytes32 messageHash = keccak256(abi.encodePacked(msg.sender, rewardId, amount));\n        bytes32 ethSignedMessageHash = toEthSignedMessageHash(messageHash);\n\n        address recoveredSigner = ECDSA.recover(ethSignedMessageHash, signature);\n        require(recoveredSigner == rewardSigner, \"invalid signature\");\n\n        rewardClaimed[msg.sender][rewardId] = true;\n\n        // Add reward logic here, e.g. mint or transfer tokens/items\n\n        emit RewardClaimed(msg.sender, rewardId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 266,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":344:7814  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204487116465f2ff257c3290f18df5d99609b03221dcfef803a6c4f6b0627d97e864736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204487116465f2ff257c3290f18df5d99609b03221dcfef803a6c4f6b0627d97e864736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO DUP8 GT PUSH5 0x65F2FF257C ORIGIN SWAP1 CALL DUP14 CREATE2 0xD9 SWAP7 MULMOD 0xB0 ORIGIN 0x21 0xDC INVALID EXTCALL SUB 0xA6 0xC4 0xF6 0xB0 PUSH3 0x7D97E8 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "344:7470:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204487116465f2ff257c3290f18df5d99609b03221dcfef803a6c4f6b0627d97e864736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO DUP8 GT PUSH5 0x65F2FF257C ORIGIN SWAP1 CALL DUP14 CREATE2 0xD9 SWAP7 MULMOD 0xB0 ORIGIN 0x21 0xDC INVALID EXTCALL SUB 0xA6 0xC4 0xF6 0xB0 PUSH3 0x7D97E8 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "344:7470:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 344,
									"end": 7814,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204487116465f2ff257c3290f18df5d99609b03221dcfef803a6c4f6b0627d97e864736f6c634300081e0033",
									".code": [
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7814,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Game_Logic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Game_Logic.sol": {
				"SavePointGameLogic": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_avatarNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_itemNFT",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasuryWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardSigner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newLevel",
									"type": "uint256"
								}
							],
							"name": "LevelUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "questId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "progress",
									"type": "uint256"
								}
							],
							"name": "QuestProgressUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardId",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "avatarNFT",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "itemNFT",
							"outputs": [
								{
									"internalType": "contract IERC1155",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "questProgress",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "rewardClaimed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardSigner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_avatarNFT",
									"type": "address"
								}
							],
							"name": "setAvatarNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_itemNFT",
									"type": "address"
								}
							],
							"name": "setItemNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								}
							],
							"name": "setRewardSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_wallet",
									"type": "address"
								}
							],
							"name": "setTreasuryWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "newLevel",
									"type": "uint256"
								}
							],
							"name": "updateLevel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "questId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "progress",
									"type": "uint256"
								}
							],
							"name": "updateQuestProgress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLevel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Game_Logic.sol\":414:3929  contract SavePointGameLogic is Ownable, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Game_Logic.sol\":1030:1629  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Game_Logic.sol\":1204:1216  initialOwner */\n  dup5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x00\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Game_Logic.sol\":1258:1259  0 */\n  0x00\n    /* \"Game_Logic.sol\":1236:1260  _avatarNFT != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Game_Logic.sol\":1236:1246  _avatarNFT */\n  dup5\n    /* \"Game_Logic.sol\":1236:1260  _avatarNFT != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Game_Logic.sol\":1228:1279  require(_avatarNFT != address(0), \"avatarNFT zero\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"Game_Logic.sol\":1317:1318  0 */\n  0x00\n    /* \"Game_Logic.sol\":1297:1319  _itemNFT != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Game_Logic.sol\":1297:1305  _itemNFT */\n  dup4\n    /* \"Game_Logic.sol\":1297:1319  _itemNFT != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Game_Logic.sol\":1289:1336  require(_itemNFT != address(0), \"itemNFT zero\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"Game_Logic.sol\":1381:1382  0 */\n  0x00\n    /* \"Game_Logic.sol\":1354:1383  _treasuryWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Game_Logic.sol\":1354:1369  _treasuryWallet */\n  dup3\n    /* \"Game_Logic.sol\":1354:1383  _treasuryWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Game_Logic.sol\":1346:1401  require(_treasuryWallet != address(0), \"treasury zero\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"Game_Logic.sol\":1444:1445  0 */\n  0x00\n    /* \"Game_Logic.sol\":1419:1446  _rewardSigner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Game_Logic.sol\":1419:1432  _rewardSigner */\n  dup2\n    /* \"Game_Logic.sol\":1419:1446  _rewardSigner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Game_Logic.sol\":1411:1462  require(_rewardSigner != address(0), \"signer zero\") */\n  tag_26\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_26:\n    /* \"Game_Logic.sol\":1493:1503  _avatarNFT */\n  dup4\n    /* \"Game_Logic.sol\":1473:1482  avatarNFT */\n  0x02\n  0x00\n    /* \"Game_Logic.sol\":1473:1504  avatarNFT = IERC721(_avatarNFT) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Game_Logic.sol\":1533:1541  _itemNFT */\n  dup3\n    /* \"Game_Logic.sol\":1514:1521  itemNFT */\n  0x03\n  0x00\n    /* \"Game_Logic.sol\":1514:1542  itemNFT = IERC1155(_itemNFT) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Game_Logic.sol\":1569:1584  _treasuryWallet */\n  dup2\n    /* \"Game_Logic.sol\":1552:1566  treasuryWallet */\n  0x04\n  0x00\n    /* \"Game_Logic.sol\":1552:1584  treasuryWallet = _treasuryWallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Game_Logic.sol\":1609:1622  _rewardSigner */\n  dup1\n    /* \"Game_Logic.sol\":1594:1606  rewardSigner */\n  0x05\n  0x00\n    /* \"Game_Logic.sol\":1594:1622  rewardSigner = _rewardSigner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Game_Logic.sol\":1030:1629  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"Game_Logic.sol\":414:3929  contract SavePointGameLogic is Ownable, Pausable, ReentrancyGuard {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_32:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_34:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_35:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_34\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_36:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_35\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_37:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_36\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1822   */\ntag_3:\n    /* \"#utility.yul\":951:957   */\n  0x00\n    /* \"#utility.yul\":959:965   */\n  0x00\n    /* \"#utility.yul\":967:973   */\n  0x00\n    /* \"#utility.yul\":975:981   */\n  0x00\n    /* \"#utility.yul\":983:989   */\n  0x00\n    /* \"#utility.yul\":1032:1035   */\n  0xa0\n    /* \"#utility.yul\":1020:1029   */\n  dup7\n    /* \"#utility.yul\":1011:1018   */\n  dup9\n    /* \"#utility.yul\":1007:1030   */\n  sub\n    /* \"#utility.yul\":1003:1036   */\n  slt\n    /* \"#utility.yul\":1000:1120   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1039:1118   */\n  tag_62\n  tag_32\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1000:1120   */\ntag_61:\n    /* \"#utility.yul\":1159:1160   */\n  0x00\n    /* \"#utility.yul\":1184:1248   */\n  tag_63\n    /* \"#utility.yul\":1240:1247   */\n  dup9\n    /* \"#utility.yul\":1231:1237   */\n  dup3\n    /* \"#utility.yul\":1220:1229   */\n  dup10\n    /* \"#utility.yul\":1216:1238   */\n  add\n    /* \"#utility.yul\":1184:1248   */\n  tag_37\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1174:1248   */\n  swap6\n  pop\n    /* \"#utility.yul\":1130:1258   */\n  pop\n    /* \"#utility.yul\":1297:1299   */\n  0x20\n    /* \"#utility.yul\":1323:1387   */\n  tag_64\n    /* \"#utility.yul\":1379:1386   */\n  dup9\n    /* \"#utility.yul\":1370:1376   */\n  dup3\n    /* \"#utility.yul\":1359:1368   */\n  dup10\n    /* \"#utility.yul\":1355:1377   */\n  add\n    /* \"#utility.yul\":1323:1387   */\n  tag_37\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1313:1387   */\n  swap5\n  pop\n    /* \"#utility.yul\":1268:1397   */\n  pop\n    /* \"#utility.yul\":1436:1438   */\n  0x40\n    /* \"#utility.yul\":1462:1526   */\n  tag_65\n    /* \"#utility.yul\":1518:1525   */\n  dup9\n    /* \"#utility.yul\":1509:1515   */\n  dup3\n    /* \"#utility.yul\":1498:1507   */\n  dup10\n    /* \"#utility.yul\":1494:1516   */\n  add\n    /* \"#utility.yul\":1462:1526   */\n  tag_37\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1452:1526   */\n  swap4\n  pop\n    /* \"#utility.yul\":1407:1536   */\n  pop\n    /* \"#utility.yul\":1575:1577   */\n  0x60\n    /* \"#utility.yul\":1601:1665   */\n  tag_66\n    /* \"#utility.yul\":1657:1664   */\n  dup9\n    /* \"#utility.yul\":1648:1654   */\n  dup3\n    /* \"#utility.yul\":1637:1646   */\n  dup10\n    /* \"#utility.yul\":1633:1655   */\n  add\n    /* \"#utility.yul\":1601:1665   */\n  tag_37\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1591:1665   */\n  swap3\n  pop\n    /* \"#utility.yul\":1546:1675   */\n  pop\n    /* \"#utility.yul\":1714:1717   */\n  0x80\n    /* \"#utility.yul\":1741:1805   */\n  tag_67\n    /* \"#utility.yul\":1797:1804   */\n  dup9\n    /* \"#utility.yul\":1788:1794   */\n  dup3\n    /* \"#utility.yul\":1777:1786   */\n  dup10\n    /* \"#utility.yul\":1773:1795   */\n  add\n    /* \"#utility.yul\":1741:1805   */\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1731:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1685:1815   */\n  pop\n    /* \"#utility.yul\":845:1822   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1828:1946   */\ntag_38:\n    /* \"#utility.yul\":1915:1939   */\n  tag_69\n    /* \"#utility.yul\":1933:1938   */\n  dup2\n    /* \"#utility.yul\":1915:1939   */\n  tag_35\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1910:1913   */\n  dup3\n    /* \"#utility.yul\":1903:1940   */\n  mstore\n    /* \"#utility.yul\":1828:1946   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1952:2174   */\ntag_11:\n    /* \"#utility.yul\":2045:2049   */\n  0x00\n    /* \"#utility.yul\":2083:2085   */\n  0x20\n    /* \"#utility.yul\":2072:2081   */\n  dup3\n    /* \"#utility.yul\":2068:2086   */\n  add\n    /* \"#utility.yul\":2060:2086   */\n  swap1\n  pop\n    /* \"#utility.yul\":2096:2167   */\n  tag_71\n    /* \"#utility.yul\":2164:2165   */\n  0x00\n    /* \"#utility.yul\":2153:2162   */\n  dup4\n    /* \"#utility.yul\":2149:2166   */\n  add\n    /* \"#utility.yul\":2140:2146   */\n  dup5\n    /* \"#utility.yul\":2096:2167   */\n  tag_38\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1952:2174   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2180:2349   */\ntag_39:\n    /* \"#utility.yul\":2264:2275   */\n  0x00\n    /* \"#utility.yul\":2298:2304   */\n  dup3\n    /* \"#utility.yul\":2293:2296   */\n  dup3\n    /* \"#utility.yul\":2286:2305   */\n  mstore\n    /* \"#utility.yul\":2338:2342   */\n  0x20\n    /* \"#utility.yul\":2333:2336   */\n  dup3\n    /* \"#utility.yul\":2329:2343   */\n  add\n    /* \"#utility.yul\":2314:2343   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2349   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2355:2519   */\ntag_40:\n    /* \"#utility.yul\":2495:2511   */\n  0x6176617461724e4654207a65726f000000000000000000000000000000000000\n    /* \"#utility.yul\":2491:2492   */\n  0x00\n    /* \"#utility.yul\":2483:2489   */\n  dup3\n    /* \"#utility.yul\":2479:2493   */\n  add\n    /* \"#utility.yul\":2472:2512   */\n  mstore\n    /* \"#utility.yul\":2355:2519   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2525:2891   */\ntag_41:\n    /* \"#utility.yul\":2667:2670   */\n  0x00\n    /* \"#utility.yul\":2688:2755   */\n  tag_75\n    /* \"#utility.yul\":2752:2754   */\n  0x0e\n    /* \"#utility.yul\":2747:2750   */\n  dup4\n    /* \"#utility.yul\":2688:2755   */\n  tag_39\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2681:2755   */\n  swap2\n  pop\n    /* \"#utility.yul\":2764:2857   */\n  tag_76\n    /* \"#utility.yul\":2853:2856   */\n  dup3\n    /* \"#utility.yul\":2764:2857   */\n  tag_40\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2882:2884   */\n  0x20\n    /* \"#utility.yul\":2877:2880   */\n  dup3\n    /* \"#utility.yul\":2873:2885   */\n  add\n    /* \"#utility.yul\":2866:2885   */\n  swap1\n  pop\n    /* \"#utility.yul\":2525:2891   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2897:3316   */\ntag_19:\n    /* \"#utility.yul\":3063:3067   */\n  0x00\n    /* \"#utility.yul\":3101:3103   */\n  0x20\n    /* \"#utility.yul\":3090:3099   */\n  dup3\n    /* \"#utility.yul\":3086:3104   */\n  add\n    /* \"#utility.yul\":3078:3104   */\n  swap1\n  pop\n    /* \"#utility.yul\":3150:3159   */\n  dup2\n    /* \"#utility.yul\":3144:3148   */\n  dup2\n    /* \"#utility.yul\":3140:3160   */\n  sub\n    /* \"#utility.yul\":3136:3137   */\n  0x00\n    /* \"#utility.yul\":3125:3134   */\n  dup4\n    /* \"#utility.yul\":3121:3138   */\n  add\n    /* \"#utility.yul\":3114:3161   */\n  mstore\n    /* \"#utility.yul\":3178:3309   */\n  tag_78\n    /* \"#utility.yul\":3304:3308   */\n  dup2\n    /* \"#utility.yul\":3178:3309   */\n  tag_41\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3170:3309   */\n  swap1\n  pop\n    /* \"#utility.yul\":2897:3316   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3322:3484   */\ntag_42:\n    /* \"#utility.yul\":3462:3476   */\n  0x6974656d4e4654207a65726f0000000000000000000000000000000000000000\n    /* \"#utility.yul\":3458:3459   */\n  0x00\n    /* \"#utility.yul\":3450:3456   */\n  dup3\n    /* \"#utility.yul\":3446:3460   */\n  add\n    /* \"#utility.yul\":3439:3477   */\n  mstore\n    /* \"#utility.yul\":3322:3484   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3490:3856   */\ntag_43:\n    /* \"#utility.yul\":3632:3635   */\n  0x00\n    /* \"#utility.yul\":3653:3720   */\n  tag_81\n    /* \"#utility.yul\":3717:3719   */\n  0x0c\n    /* \"#utility.yul\":3712:3715   */\n  dup4\n    /* \"#utility.yul\":3653:3720   */\n  tag_39\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3646:3720   */\n  swap2\n  pop\n    /* \"#utility.yul\":3729:3822   */\n  tag_82\n    /* \"#utility.yul\":3818:3821   */\n  dup3\n    /* \"#utility.yul\":3729:3822   */\n  tag_42\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3847:3849   */\n  0x20\n    /* \"#utility.yul\":3842:3845   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  add\n    /* \"#utility.yul\":3831:3850   */\n  swap1\n  pop\n    /* \"#utility.yul\":3490:3856   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3862:4281   */\ntag_22:\n    /* \"#utility.yul\":4028:4032   */\n  0x00\n    /* \"#utility.yul\":4066:4068   */\n  0x20\n    /* \"#utility.yul\":4055:4064   */\n  dup3\n    /* \"#utility.yul\":4051:4069   */\n  add\n    /* \"#utility.yul\":4043:4069   */\n  swap1\n  pop\n    /* \"#utility.yul\":4115:4124   */\n  dup2\n    /* \"#utility.yul\":4109:4113   */\n  dup2\n    /* \"#utility.yul\":4105:4125   */\n  sub\n    /* \"#utility.yul\":4101:4102   */\n  0x00\n    /* \"#utility.yul\":4090:4099   */\n  dup4\n    /* \"#utility.yul\":4086:4103   */\n  add\n    /* \"#utility.yul\":4079:4126   */\n  mstore\n    /* \"#utility.yul\":4143:4274   */\n  tag_84\n    /* \"#utility.yul\":4269:4273   */\n  dup2\n    /* \"#utility.yul\":4143:4274   */\n  tag_43\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4135:4274   */\n  swap1\n  pop\n    /* \"#utility.yul\":3862:4281   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4287:4450   */\ntag_44:\n    /* \"#utility.yul\":4427:4442   */\n  0x7472656173757279207a65726f00000000000000000000000000000000000000\n    /* \"#utility.yul\":4423:4424   */\n  0x00\n    /* \"#utility.yul\":4415:4421   */\n  dup3\n    /* \"#utility.yul\":4411:4425   */\n  add\n    /* \"#utility.yul\":4404:4443   */\n  mstore\n    /* \"#utility.yul\":4287:4450   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4456:4822   */\ntag_45:\n    /* \"#utility.yul\":4598:4601   */\n  0x00\n    /* \"#utility.yul\":4619:4686   */\n  tag_87\n    /* \"#utility.yul\":4683:4685   */\n  0x0d\n    /* \"#utility.yul\":4678:4681   */\n  dup4\n    /* \"#utility.yul\":4619:4686   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4612:4686   */\n  swap2\n  pop\n    /* \"#utility.yul\":4695:4788   */\n  tag_88\n    /* \"#utility.yul\":4784:4787   */\n  dup3\n    /* \"#utility.yul\":4695:4788   */\n  tag_44\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4813:4815   */\n  0x20\n    /* \"#utility.yul\":4808:4811   */\n  dup3\n    /* \"#utility.yul\":4804:4816   */\n  add\n    /* \"#utility.yul\":4797:4816   */\n  swap1\n  pop\n    /* \"#utility.yul\":4456:4822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4828:5247   */\ntag_25:\n    /* \"#utility.yul\":4994:4998   */\n  0x00\n    /* \"#utility.yul\":5032:5034   */\n  0x20\n    /* \"#utility.yul\":5021:5030   */\n  dup3\n    /* \"#utility.yul\":5017:5035   */\n  add\n    /* \"#utility.yul\":5009:5035   */\n  swap1\n  pop\n    /* \"#utility.yul\":5081:5090   */\n  dup2\n    /* \"#utility.yul\":5075:5079   */\n  dup2\n    /* \"#utility.yul\":5071:5091   */\n  sub\n    /* \"#utility.yul\":5067:5068   */\n  0x00\n    /* \"#utility.yul\":5056:5065   */\n  dup4\n    /* \"#utility.yul\":5052:5069   */\n  add\n    /* \"#utility.yul\":5045:5092   */\n  mstore\n    /* \"#utility.yul\":5109:5240   */\n  tag_90\n    /* \"#utility.yul\":5235:5239   */\n  dup2\n    /* \"#utility.yul\":5109:5240   */\n  tag_45\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":5101:5240   */\n  swap1\n  pop\n    /* \"#utility.yul\":4828:5247   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5253:5414   */\ntag_46:\n    /* \"#utility.yul\":5393:5406   */\n  0x7369676e6572207a65726f000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5389:5390   */\n  0x00\n    /* \"#utility.yul\":5381:5387   */\n  dup3\n    /* \"#utility.yul\":5377:5391   */\n  add\n    /* \"#utility.yul\":5370:5407   */\n  mstore\n    /* \"#utility.yul\":5253:5414   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5420:5786   */\ntag_47:\n    /* \"#utility.yul\":5562:5565   */\n  0x00\n    /* \"#utility.yul\":5583:5650   */\n  tag_93\n    /* \"#utility.yul\":5647:5649   */\n  0x0b\n    /* \"#utility.yul\":5642:5645   */\n  dup4\n    /* \"#utility.yul\":5583:5650   */\n  tag_39\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":5576:5650   */\n  swap2\n  pop\n    /* \"#utility.yul\":5659:5752   */\n  tag_94\n    /* \"#utility.yul\":5748:5751   */\n  dup3\n    /* \"#utility.yul\":5659:5752   */\n  tag_46\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":5777:5779   */\n  0x20\n    /* \"#utility.yul\":5772:5775   */\n  dup3\n    /* \"#utility.yul\":5768:5780   */\n  add\n    /* \"#utility.yul\":5761:5780   */\n  swap1\n  pop\n    /* \"#utility.yul\":5420:5786   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5792:6211   */\ntag_28:\n    /* \"#utility.yul\":5958:5962   */\n  0x00\n    /* \"#utility.yul\":5996:5998   */\n  0x20\n    /* \"#utility.yul\":5985:5994   */\n  dup3\n    /* \"#utility.yul\":5981:5999   */\n  add\n    /* \"#utility.yul\":5973:5999   */\n  swap1\n  pop\n    /* \"#utility.yul\":6045:6054   */\n  dup2\n    /* \"#utility.yul\":6039:6043   */\n  dup2\n    /* \"#utility.yul\":6035:6055   */\n  sub\n    /* \"#utility.yul\":6031:6032   */\n  0x00\n    /* \"#utility.yul\":6020:6029   */\n  dup4\n    /* \"#utility.yul\":6016:6033   */\n  add\n    /* \"#utility.yul\":6009:6056   */\n  mstore\n    /* \"#utility.yul\":6073:6204   */\n  tag_96\n    /* \"#utility.yul\":6199:6203   */\n  dup2\n    /* \"#utility.yul\":6073:6204   */\n  tag_47\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":6065:6204   */\n  swap1\n  pop\n    /* \"#utility.yul\":5792:6211   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Game_Logic.sol\":414:3929  contract SavePointGameLogic is Ownable, Pausable, ReentrancyGuard {... */\ntag_29:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Game_Logic.sol\":414:3929  contract SavePointGameLogic is Ownable, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa8602fea\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa8602fea\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa87331e5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xc5fb50d5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc69d65d1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x76618f27\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x83b78188\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x4626402b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x47e25eff\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x57d1f910\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5fb84d67\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x028be338\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x280e31cc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f5e6a05\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x323f24ab\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Game_Logic.sol\":665:733  mapping(address => mapping(uint256 => uint256)) public questProgress */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Game_Logic.sol\":615:659  mapping(address => uint256) public userLevel */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Game_Logic.sol\":486:510  IERC721 public avatarNFT */\n    tag_5:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Game_Logic.sol\":581:608  address public rewardSigner */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Game_Logic.sol\":2357:2422  function unpause() external onlyOwner {... */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Game_Logic.sol\":546:575  address public treasuryWallet */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Game_Logic.sol\":1806:1962  function setItemNFT(address _itemNFT) external onlyOwner {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"Game_Logic.sol\":516:539  IERC1155 public itemNFT */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Game_Logic.sol\":2428:2636  function updateLevel(address user, uint256 newLevel) external onlyOwner {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"Game_Logic.sol\":3205:3927  function claimReward(... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"Game_Logic.sol\":739:804  mapping(address => mapping(uint256 => bool)) public rewardClaimed */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Game_Logic.sol\":2290:2351  function pause() external onlyOwner {... */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Game_Logic.sol\":1968:2125  function setTreasuryWallet(address _wallet) external onlyOwner {... */\n    tag_18:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"Game_Logic.sol\":1635:1800  function setAvatarNFT(address _avatarNFT) external onlyOwner {... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"Game_Logic.sol\":2642:2905  function updateQuestProgress(address user, uint256 questId, uint256 progress) external onlyOwner {... */\n    tag_20:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"Game_Logic.sol\":2131:2284  function setRewardSigner(address _signer) external onlyOwner {... */\n    tag_21:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"Game_Logic.sol\":665:733  mapping(address => mapping(uint256 => uint256)) public questProgress */\n    tag_29:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Game_Logic.sol\":615:659  mapping(address => uint256) public userLevel */\n    tag_35:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Game_Logic.sol\":486:510  IERC721 public avatarNFT */\n    tag_38:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Game_Logic.sol\":581:608  address public rewardSigner */\n    tag_42:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Game_Logic.sol\":2357:2422  function unpause() external onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_96:\n        /* \"Game_Logic.sol\":2405:2415  _unpause() */\n      tag_99\n        /* \"Game_Logic.sol\":2405:2413  _unpause */\n      tag_100\n        /* \"Game_Logic.sol\":2405:2415  _unpause() */\n      jump\t// in\n    tag_99:\n        /* \"Game_Logic.sol\":2357:2422  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"Game_Logic.sol\":546:575  address public treasuryWallet */\n    tag_48:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Game_Logic.sol\":1806:1962  function setItemNFT(address _itemNFT) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"Game_Logic.sol\":1901:1902  0 */\n      0x00\n        /* \"Game_Logic.sol\":1881:1903  _itemNFT != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Game_Logic.sol\":1881:1889  _itemNFT */\n      dup2\n        /* \"Game_Logic.sol\":1881:1903  _itemNFT != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Game_Logic.sol\":1873:1917  require(_itemNFT != address(0), \"zero addr\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"Game_Logic.sol\":1946:1954  _itemNFT */\n      dup1\n        /* \"Game_Logic.sol\":1927:1934  itemNFT */\n      0x03\n      0x00\n        /* \"Game_Logic.sol\":1927:1955  itemNFT = IERC1155(_itemNFT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Game_Logic.sol\":1806:1962  function setItemNFT(address _itemNFT) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Game_Logic.sol\":516:539  IERC1155 public itemNFT */\n    tag_54:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Game_Logic.sol\":2428:2636  function updateLevel(address user, uint256 newLevel) external onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"Game_Logic.sol\":2534:2535  0 */\n      0x00\n        /* \"Game_Logic.sol\":2518:2536  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Game_Logic.sol\":2518:2522  user */\n      dup3\n        /* \"Game_Logic.sol\":2518:2536  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Game_Logic.sol\":2510:2550  require(user != address(0), \"zero user\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"Game_Logic.sol\":2578:2586  newLevel */\n      dup1\n        /* \"Game_Logic.sol\":2560:2569  userLevel */\n      0x06\n        /* \"Game_Logic.sol\":2560:2575  userLevel[user] */\n      0x00\n        /* \"Game_Logic.sol\":2570:2574  user */\n      dup5\n        /* \"Game_Logic.sol\":2560:2575  userLevel[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Game_Logic.sol\":2560:2586  userLevel[user] = newLevel */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Game_Logic.sol\":2614:2618  user */\n      dup2\n        /* \"Game_Logic.sol\":2601:2629  LevelUpdated(user, newLevel) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4bd6aedf6fbd4e9cacaf319dc8d6906ff7f7fd2522898365f92afab9cb245444\n        /* \"Game_Logic.sol\":2620:2628  newLevel */\n      dup3\n        /* \"Game_Logic.sol\":2601:2629  LevelUpdated(user, newLevel) */\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Game_Logic.sol\":2428:2636  function updateLevel(address user, uint256 newLevel) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Game_Logic.sol\":3205:3927  function claimReward(... */\n    tag_69:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_121\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_122\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_124\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_125\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_124:\n        /* \"Game_Logic.sol\":3371:3384  rewardClaimed */\n      0x08\n        /* \"Game_Logic.sol\":3371:3396  rewardClaimed[msg.sender] */\n      0x00\n        /* \"Game_Logic.sol\":3385:3395  msg.sender */\n      caller\n        /* \"Game_Logic.sol\":3371:3396  rewardClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Game_Logic.sol\":3371:3406  rewardClaimed[msg.sender][rewardId] */\n      0x00\n        /* \"Game_Logic.sol\":3397:3405  rewardId */\n      dup6\n        /* \"Game_Logic.sol\":3371:3406  rewardClaimed[msg.sender][rewardId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Game_Logic.sol\":3370:3406  !rewardClaimed[msg.sender][rewardId] */\n      iszero\n        /* \"Game_Logic.sol\":3362:3426  require(!rewardClaimed[msg.sender][rewardId], \"already claimed\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"Game_Logic.sol\":3437:3456  bytes32 messageHash */\n      0x00\n        /* \"Game_Logic.sol\":3486:3496  msg.sender */\n      caller\n        /* \"Game_Logic.sol\":3498:3506  rewardId */\n      dup6\n        /* \"Game_Logic.sol\":3508:3514  amount */\n      dup6\n        /* \"Game_Logic.sol\":3469:3515  abi.encodePacked(msg.sender, rewardId, amount) */\n      add(0x20, mload(0x40))\n      tag_130\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Game_Logic.sol\":3459:3516  keccak256(abi.encodePacked(msg.sender, rewardId, amount)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Game_Logic.sol\":3437:3516  bytes32 messageHash = keccak256(abi.encodePacked(msg.sender, rewardId, amount)) */\n      swap1\n      pop\n        /* \"Game_Logic.sol\":3526:3554  bytes32 ethSignedMessageHash */\n      0x00\n        /* \"Game_Logic.sol\":3557:3592  toEthSignedMessageHash(messageHash) */\n      tag_132\n        /* \"Game_Logic.sol\":3580:3591  messageHash */\n      dup3\n        /* \"Game_Logic.sol\":3557:3579  toEthSignedMessageHash */\n      tag_133\n        /* \"Game_Logic.sol\":3557:3592  toEthSignedMessageHash(messageHash) */\n      jump\t// in\n    tag_132:\n        /* \"Game_Logic.sol\":3526:3592  bytes32 ethSignedMessageHash = toEthSignedMessageHash(messageHash) */\n      swap1\n      pop\n        /* \"Game_Logic.sol\":3603:3626  address recoveredSigner */\n      0x00\n        /* \"Game_Logic.sol\":3629:3675  ECDSA.recover(ethSignedMessageHash, signature) */\n      tag_134\n        /* \"Game_Logic.sol\":3643:3663  ethSignedMessageHash */\n      dup3\n        /* \"Game_Logic.sol\":3665:3674  signature */\n      dup7\n      dup7\n        /* \"Game_Logic.sol\":3629:3675  ECDSA.recover(ethSignedMessageHash, signature) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Game_Logic.sol\":3629:3642  ECDSA.recover */\n      tag_135\n        /* \"Game_Logic.sol\":3629:3675  ECDSA.recover(ethSignedMessageHash, signature) */\n      jump\t// in\n    tag_134:\n        /* \"Game_Logic.sol\":3603:3675  address recoveredSigner = ECDSA.recover(ethSignedMessageHash, signature) */\n      swap1\n      pop\n        /* \"Game_Logic.sol\":3712:3724  rewardSigner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Game_Logic.sol\":3693:3724  recoveredSigner == rewardSigner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Game_Logic.sol\":3693:3708  recoveredSigner */\n      dup2\n        /* \"Game_Logic.sol\":3693:3724  recoveredSigner == rewardSigner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Game_Logic.sol\":3685:3746  require(recoveredSigner == rewardSigner, \"invalid signature\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"Game_Logic.sol\":3795:3799  true */\n      0x01\n        /* \"Game_Logic.sol\":3757:3770  rewardClaimed */\n      0x08\n        /* \"Game_Logic.sol\":3757:3782  rewardClaimed[msg.sender] */\n      0x00\n        /* \"Game_Logic.sol\":3771:3781  msg.sender */\n      caller\n        /* \"Game_Logic.sol\":3757:3782  rewardClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Game_Logic.sol\":3757:3792  rewardClaimed[msg.sender][rewardId] */\n      0x00\n        /* \"Game_Logic.sol\":3783:3791  rewardId */\n      dup10\n        /* \"Game_Logic.sol\":3757:3792  rewardClaimed[msg.sender][rewardId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Game_Logic.sol\":3757:3799  rewardClaimed[msg.sender][rewardId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Game_Logic.sol\":3899:3909  msg.sender */\n      caller\n        /* \"Game_Logic.sol\":3885:3920  RewardClaimed(msg.sender, rewardId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"Game_Logic.sol\":3911:3919  rewardId */\n      dup9\n        /* \"Game_Logic.sol\":3885:3920  RewardClaimed(msg.sender, rewardId) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Game_Logic.sol\":3352:3927  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_141\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_140:\n        /* \"Game_Logic.sol\":3205:3927  function claimReward(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Game_Logic.sol\":739:804  mapping(address => mapping(uint256 => bool)) public rewardClaimed */\n    tag_72:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Game_Logic.sol\":2290:2351  function pause() external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"Game_Logic.sol\":2336:2344  _pause() */\n      tag_145\n        /* \"Game_Logic.sol\":2336:2342  _pause */\n      tag_146\n        /* \"Game_Logic.sol\":2336:2344  _pause() */\n      jump\t// in\n    tag_145:\n        /* \"Game_Logic.sol\":2290:2351  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Game_Logic.sol\":1968:2125  function setTreasuryWallet(address _wallet) external onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_149:\n        /* \"Game_Logic.sol\":2068:2069  0 */\n      0x00\n        /* \"Game_Logic.sol\":2049:2070  _wallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Game_Logic.sol\":2049:2056  _wallet */\n      dup2\n        /* \"Game_Logic.sol\":2049:2070  _wallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Game_Logic.sol\":2041:2084  require(_wallet != address(0), \"zero addr\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_106\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"Game_Logic.sol\":2111:2118  _wallet */\n      dup1\n        /* \"Game_Logic.sol\":2094:2108  treasuryWallet */\n      0x04\n      0x00\n        /* \"Game_Logic.sol\":2094:2118  treasuryWallet = _wallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Game_Logic.sol\":1968:2125  function setTreasuryWallet(address _wallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Game_Logic.sol\":1635:1800  function setAvatarNFT(address _avatarNFT) external onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"Game_Logic.sol\":1736:1737  0 */\n      0x00\n        /* \"Game_Logic.sol\":1714:1738  _avatarNFT != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Game_Logic.sol\":1714:1724  _avatarNFT */\n      dup2\n        /* \"Game_Logic.sol\":1714:1738  _avatarNFT != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Game_Logic.sol\":1706:1752  require(_avatarNFT != address(0), \"zero addr\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_106\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"Game_Logic.sol\":1782:1792  _avatarNFT */\n      dup1\n        /* \"Game_Logic.sol\":1762:1771  avatarNFT */\n      0x02\n      0x00\n        /* \"Game_Logic.sol\":1762:1793  avatarNFT = IERC721(_avatarNFT) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Game_Logic.sol\":1635:1800  function setAvatarNFT(address _avatarNFT) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Game_Logic.sol\":2642:2905  function updateQuestProgress(address user, uint256 questId, uint256 progress) external onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"Game_Logic.sol\":2773:2774  0 */\n      0x00\n        /* \"Game_Logic.sol\":2757:2775  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Game_Logic.sol\":2757:2761  user */\n      dup4\n        /* \"Game_Logic.sol\":2757:2775  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Game_Logic.sol\":2749:2789  require(user != address(0), \"zero user\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_113\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"Game_Logic.sol\":2830:2838  progress */\n      dup1\n        /* \"Game_Logic.sol\":2799:2812  questProgress */\n      0x07\n        /* \"Game_Logic.sol\":2799:2818  questProgress[user] */\n      0x00\n        /* \"Game_Logic.sol\":2813:2817  user */\n      dup6\n        /* \"Game_Logic.sol\":2799:2818  questProgress[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Game_Logic.sol\":2799:2827  questProgress[user][questId] */\n      0x00\n        /* \"Game_Logic.sol\":2819:2826  questId */\n      dup5\n        /* \"Game_Logic.sol\":2799:2827  questProgress[user][questId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Game_Logic.sol\":2799:2838  questProgress[user][questId] = progress */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Game_Logic.sol\":2874:2878  user */\n      dup3\n        /* \"Game_Logic.sol\":2853:2898  QuestProgressUpdated(user, questId, progress) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x95b529ceb2b4c5026133eafcb0f6e7e63f17c39398d1b67e14569272cf3c956b\n        /* \"Game_Logic.sol\":2880:2887  questId */\n      dup4\n        /* \"Game_Logic.sol\":2889:2897  progress */\n      dup4\n        /* \"Game_Logic.sol\":2853:2898  QuestProgressUpdated(user, questId, progress) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Game_Logic.sol\":2642:2905  function updateQuestProgress(address user, uint256 questId, uint256 progress) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Game_Logic.sol\":2131:2284  function setRewardSigner(address _signer) external onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"Game_Logic.sol\":2229:2230  0 */\n      0x00\n        /* \"Game_Logic.sol\":2210:2231  _signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Game_Logic.sol\":2210:2217  _signer */\n      dup2\n        /* \"Game_Logic.sol\":2210:2231  _signer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Game_Logic.sol\":2202:2245  require(_signer != address(0), \"zero addr\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_106\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"Game_Logic.sol\":2270:2277  _signer */\n      dup1\n        /* \"Game_Logic.sol\":2255:2267  rewardSigner */\n      0x05\n      0x00\n        /* \"Game_Logic.sol\":2255:2277  rewardSigner = _signer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Game_Logic.sol\":2131:2284  function setRewardSigner(address _signer) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_184\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_185\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x00\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_187\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_191\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_58\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_196\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_196:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"Game_Logic.sol\":2987:3199  function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {... */\n    tag_133:\n        /* \"Game_Logic.sol\":3056:3063  bytes32 */\n      0x00\n        /* \"Game_Logic.sol\":3186:3190  hash */\n      dup2\n        /* \"Game_Logic.sol\":3133:3191  abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash) */\n      add(0x20, mload(0x40))\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Game_Logic.sol\":3123:3192  keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Game_Logic.sol\":3116:3192  return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash)) */\n      swap1\n      pop\n        /* \"Game_Logic.sol\":2987:3199  function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3792:3799  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3812:3829  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3831:3849  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3851:3867  bytes32 errorArg */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3898  tryRecover(hash, signature) */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3882:3886  hash */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3888:3897  signature */\n      dup7\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3881  tryRecover */\n      tag_204\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3871:3898  tryRecover(hash, signature) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3811:3898  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3936  _throwError(error, errorArg) */\n      tag_205\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3920:3925  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3927:3935  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3919  _throwError */\n      tag_206\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3908:3936  _throwError(error, errorArg) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3953:3962  recovered */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3946:3962  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":3714:3969  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_209\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_122\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_178\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_215\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_58\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2907  function tryRecover(... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2232:2249  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2251:2267  RecoverError err */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2269:2283  bytes32 errArg */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2319:2321  65 */\n      0x41\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2308  signature */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2315  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2299:2321  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2295:2901  if (signature.length == 65) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2337:2346  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2360:2369  bytes32 s */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2383:2390  uint8 v */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2604:2608  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2593:2602  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2589:2609  add(signature, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2583:2610  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2578:2610  r := mload(add(signature, 0x20)) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2653:2657  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2642:2651  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2638:2658  add(signature, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2632:2659  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2627:2659  s := mload(add(signature, 0x40)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2710:2714  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2699:2708  signature */\n      dup8\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2695:2715  add(signature, 0x60) */\n      add\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2689:2716  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2686:2687  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2681:2717  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2676:2717  v := byte(0, mload(add(signature, 0x60))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2776  tryRecover(hash, v, r, s) */\n      tag_221\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2762:2766  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2768:2769  v */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2771:2772  r */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2774:2775  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2761  tryRecover */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2751:2776  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2744:2776  return tryRecover(hash, v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_219)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2295:2901  if (signature.length == 65) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2823:2824  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2827:2862  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2872:2881  signature */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2872:2888  signature.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2864:2889  bytes32(signature.length) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2807:2890  return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length)) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":2129:2907  function tryRecover(... */\n    tag_219:\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7375:7395  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7395  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_226\n      tag_227\n      jump\t// in\n    tag_226:\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7371  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7366:7395  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_228\n      jumpi\n      tag_229\n      tag_227\n      jump\t// in\n    tag_229:\n    tag_228:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7411:7418  return; */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7362:7806  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7471:7500  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7500  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_232\n      jumpi\n      tag_233\n      tag_227\n      jump\t// in\n    tag_233:\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7467  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7462:7500  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_234\n      jumpi\n      tag_235\n      tag_227\n      jump\t// in\n    tag_235:\n    tag_234:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7523:7546  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7458:7806  if (error == RecoverError.InvalidSignature) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7576:7611  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7611  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_238\n      jumpi\n      tag_239\n      tag_227\n      jump\t// in\n    tag_239:\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7572  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7567:7611  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_241\n      tag_227\n      jump\t// in\n    tag_241:\n    tag_240:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7670:7678  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7662:7679  uint256(errorArg) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7634:7680  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7563:7806  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7710:7740  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7740  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_245\n      jumpi\n      tag_246\n      tag_227\n      jump\t// in\n    tag_246:\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7706  error */\n      dup3\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7701:7740  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_247\n      jumpi\n      tag_248\n      tag_227\n      jump\t// in\n    tag_248:\n    tag_247:\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7786:7794  errorArg */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7763:7795  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7697:7806  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":7280:7812  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_224:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5329:5346  address recovered */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5348:5364  RecoverError err */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5366:5380  bytes32 errArg */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6283:6349  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6278:6279  s */\n      dup5\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6270:6280  uint256(s) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6270:6349  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6381:6382  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6385:6415  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6417:6418  s */\n      dup6\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6365:6419  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_252)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6266:6430  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6524:6538  address signer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6551:6555  hash */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6557:6558  v */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6560:6561  r */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6563:6564  s */\n      dup9\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6541:6565  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_254\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6524:6565  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6597:6598  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6599  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6585  signer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6579:6599  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6631:6632  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6635:6664  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6674:6675  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6666:6676  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6615:6677  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_252)\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6575:6688  if (signer == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6706:6712  signer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6714:6734  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6744:6745  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6736:6746  bytes32(0) */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":6698:6747  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":5203:6754  function tryRecover(... */\n    tag_252:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_260:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_261:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_262:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_263:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_320\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_262\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_264:\n        /* \"#utility.yul\":641:665   */\n      tag_322\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_263\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_323:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_265:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_325\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_264\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_266:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_267:\n        /* \"#utility.yul\":997:1021   */\n      tag_328\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_266\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_329:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_268:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_331\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_267\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_28:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_334\n      tag_260\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1290:1409   */\n    tag_333:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_335\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_265\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_336\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_268\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_269:\n        /* \"#utility.yul\":1764:1788   */\n      tag_338\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_266\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_31:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_340\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_269\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_34:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_343\n      tag_260\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2105:2224   */\n    tag_342:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_344\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_265\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2424   */\n    tag_270:\n        /* \"#utility.yul\":2392:2395   */\n      0x00\n        /* \"#utility.yul\":2413:2418   */\n      dup2\n        /* \"#utility.yul\":2406:2418   */\n      swap1\n      pop\n        /* \"#utility.yul\":2364:2424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2430:2572   */\n    tag_271:\n        /* \"#utility.yul\":2480:2489   */\n      0x00\n        /* \"#utility.yul\":2513:2566   */\n      tag_347\n        /* \"#utility.yul\":2531:2565   */\n      tag_348\n        /* \"#utility.yul\":2540:2564   */\n      tag_349\n        /* \"#utility.yul\":2558:2563   */\n      dup5\n        /* \"#utility.yul\":2540:2564   */\n      tag_262\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2531:2565   */\n      tag_270\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2513:2566   */\n      tag_262\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2500:2566   */\n      swap1\n      pop\n        /* \"#utility.yul\":2430:2572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2578:2704   */\n    tag_272:\n        /* \"#utility.yul\":2628:2637   */\n      0x00\n        /* \"#utility.yul\":2661:2698   */\n      tag_351\n        /* \"#utility.yul\":2692:2697   */\n      dup3\n        /* \"#utility.yul\":2661:2698   */\n      tag_271\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2648:2698   */\n      swap1\n      pop\n        /* \"#utility.yul\":2578:2704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2710:2851   */\n    tag_273:\n        /* \"#utility.yul\":2775:2784   */\n      0x00\n        /* \"#utility.yul\":2808:2845   */\n      tag_353\n        /* \"#utility.yul\":2839:2844   */\n      dup3\n        /* \"#utility.yul\":2808:2845   */\n      tag_272\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2795:2845   */\n      swap1\n      pop\n        /* \"#utility.yul\":2710:2851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2857:3018   */\n    tag_274:\n        /* \"#utility.yul\":2959:3011   */\n      tag_355\n        /* \"#utility.yul\":3005:3010   */\n      dup2\n        /* \"#utility.yul\":2959:3011   */\n      tag_273\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2954:2957   */\n      dup3\n        /* \"#utility.yul\":2947:3012   */\n      mstore\n        /* \"#utility.yul\":2857:3018   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3024:3276   */\n    tag_40:\n        /* \"#utility.yul\":3132:3136   */\n      0x00\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"#utility.yul\":3159:3168   */\n      dup3\n        /* \"#utility.yul\":3155:3173   */\n      add\n        /* \"#utility.yul\":3147:3173   */\n      swap1\n      pop\n        /* \"#utility.yul\":3183:3269   */\n      tag_357\n        /* \"#utility.yul\":3266:3267   */\n      0x00\n        /* \"#utility.yul\":3255:3264   */\n      dup4\n        /* \"#utility.yul\":3251:3268   */\n      add\n        /* \"#utility.yul\":3242:3248   */\n      dup5\n        /* \"#utility.yul\":3183:3269   */\n      tag_274\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3024:3276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3282:3400   */\n    tag_275:\n        /* \"#utility.yul\":3369:3393   */\n      tag_359\n        /* \"#utility.yul\":3387:3392   */\n      dup2\n        /* \"#utility.yul\":3369:3393   */\n      tag_263\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3364:3367   */\n      dup3\n        /* \"#utility.yul\":3357:3394   */\n      mstore\n        /* \"#utility.yul\":3282:3400   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3406:3628   */\n    tag_44:\n        /* \"#utility.yul\":3499:3503   */\n      0x00\n        /* \"#utility.yul\":3537:3539   */\n      0x20\n        /* \"#utility.yul\":3526:3535   */\n      dup3\n        /* \"#utility.yul\":3522:3540   */\n      add\n        /* \"#utility.yul\":3514:3540   */\n      swap1\n      pop\n        /* \"#utility.yul\":3550:3621   */\n      tag_361\n        /* \"#utility.yul\":3618:3619   */\n      0x00\n        /* \"#utility.yul\":3607:3616   */\n      dup4\n        /* \"#utility.yul\":3603:3620   */\n      add\n        /* \"#utility.yul\":3594:3600   */\n      dup5\n        /* \"#utility.yul\":3550:3621   */\n      tag_275\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3406:3628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3634:3776   */\n    tag_276:\n        /* \"#utility.yul\":3700:3709   */\n      0x00\n        /* \"#utility.yul\":3733:3770   */\n      tag_363\n        /* \"#utility.yul\":3764:3769   */\n      dup3\n        /* \"#utility.yul\":3733:3770   */\n      tag_272\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3720:3770   */\n      swap1\n      pop\n        /* \"#utility.yul\":3634:3776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3782:3945   */\n    tag_277:\n        /* \"#utility.yul\":3885:3938   */\n      tag_365\n        /* \"#utility.yul\":3932:3937   */\n      dup2\n        /* \"#utility.yul\":3885:3938   */\n      tag_276\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3880:3883   */\n      dup3\n        /* \"#utility.yul\":3873:3939   */\n      mstore\n        /* \"#utility.yul\":3782:3945   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3951:4205   */\n    tag_56:\n        /* \"#utility.yul\":4060:4064   */\n      0x00\n        /* \"#utility.yul\":4098:4100   */\n      0x20\n        /* \"#utility.yul\":4087:4096   */\n      dup3\n        /* \"#utility.yul\":4083:4101   */\n      add\n        /* \"#utility.yul\":4075:4101   */\n      swap1\n      pop\n        /* \"#utility.yul\":4111:4198   */\n      tag_367\n        /* \"#utility.yul\":4195:4196   */\n      0x00\n        /* \"#utility.yul\":4184:4193   */\n      dup4\n        /* \"#utility.yul\":4180:4197   */\n      add\n        /* \"#utility.yul\":4171:4177   */\n      dup5\n        /* \"#utility.yul\":4111:4198   */\n      tag_277\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3951:4205   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4211:4301   */\n    tag_278:\n        /* \"#utility.yul\":4245:4252   */\n      0x00\n        /* \"#utility.yul\":4288:4293   */\n      dup2\n        /* \"#utility.yul\":4281:4294   */\n      iszero\n        /* \"#utility.yul\":4274:4295   */\n      iszero\n        /* \"#utility.yul\":4263:4295   */\n      swap1\n      pop\n        /* \"#utility.yul\":4211:4301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4307:4416   */\n    tag_279:\n        /* \"#utility.yul\":4388:4409   */\n      tag_370\n        /* \"#utility.yul\":4403:4408   */\n      dup2\n        /* \"#utility.yul\":4388:4409   */\n      tag_278\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4383:4386   */\n      dup3\n        /* \"#utility.yul\":4376:4410   */\n      mstore\n        /* \"#utility.yul\":4307:4416   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4422:4632   */\n    tag_60:\n        /* \"#utility.yul\":4509:4513   */\n      0x00\n        /* \"#utility.yul\":4547:4549   */\n      0x20\n        /* \"#utility.yul\":4536:4545   */\n      dup3\n        /* \"#utility.yul\":4532:4550   */\n      add\n        /* \"#utility.yul\":4524:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4560:4625   */\n      tag_372\n        /* \"#utility.yul\":4622:4623   */\n      0x00\n        /* \"#utility.yul\":4611:4620   */\n      dup4\n        /* \"#utility.yul\":4607:4624   */\n      add\n        /* \"#utility.yul\":4598:4604   */\n      dup5\n        /* \"#utility.yul\":4560:4625   */\n      tag_279\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4422:4632   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4638:4755   */\n    tag_280:\n        /* \"#utility.yul\":4747:4748   */\n      0x00\n        /* \"#utility.yul\":4744:4745   */\n      0x00\n        /* \"#utility.yul\":4737:4749   */\n      revert\n        /* \"#utility.yul\":4761:4878   */\n    tag_281:\n        /* \"#utility.yul\":4870:4871   */\n      0x00\n        /* \"#utility.yul\":4867:4868   */\n      0x00\n        /* \"#utility.yul\":4860:4872   */\n      revert\n        /* \"#utility.yul\":4884:5001   */\n    tag_282:\n        /* \"#utility.yul\":4993:4994   */\n      0x00\n        /* \"#utility.yul\":4990:4991   */\n      0x00\n        /* \"#utility.yul\":4983:4995   */\n      revert\n        /* \"#utility.yul\":5020:5572   */\n    tag_283:\n        /* \"#utility.yul\":5077:5085   */\n      0x00\n        /* \"#utility.yul\":5087:5093   */\n      0x00\n        /* \"#utility.yul\":5137:5140   */\n      dup4\n        /* \"#utility.yul\":5130:5134   */\n      0x1f\n        /* \"#utility.yul\":5122:5128   */\n      dup5\n        /* \"#utility.yul\":5118:5135   */\n      add\n        /* \"#utility.yul\":5114:5141   */\n      slt\n        /* \"#utility.yul\":5104:5226   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":5145:5224   */\n      tag_378\n      tag_280\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5104:5226   */\n    tag_377:\n        /* \"#utility.yul\":5258:5264   */\n      dup3\n        /* \"#utility.yul\":5245:5265   */\n      calldataload\n        /* \"#utility.yul\":5235:5265   */\n      swap1\n      pop\n        /* \"#utility.yul\":5288:5306   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5280:5286   */\n      dup2\n        /* \"#utility.yul\":5277:5307   */\n      gt\n        /* \"#utility.yul\":5274:5391   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":5310:5389   */\n      tag_380\n      tag_281\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5274:5391   */\n    tag_379:\n        /* \"#utility.yul\":5424:5428   */\n      0x20\n        /* \"#utility.yul\":5416:5422   */\n      dup4\n        /* \"#utility.yul\":5412:5429   */\n      add\n        /* \"#utility.yul\":5400:5429   */\n      swap2\n      pop\n        /* \"#utility.yul\":5478:5481   */\n      dup4\n        /* \"#utility.yul\":5470:5474   */\n      0x01\n        /* \"#utility.yul\":5462:5468   */\n      dup3\n        /* \"#utility.yul\":5458:5475   */\n      mul\n        /* \"#utility.yul\":5448:5456   */\n      dup4\n        /* \"#utility.yul\":5444:5476   */\n      add\n        /* \"#utility.yul\":5441:5482   */\n      gt\n        /* \"#utility.yul\":5438:5566   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":5485:5564   */\n      tag_382\n      tag_282\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5438:5566   */\n    tag_381:\n        /* \"#utility.yul\":5020:5572   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5578:6395   */\n    tag_68:\n        /* \"#utility.yul\":5666:5672   */\n      0x00\n        /* \"#utility.yul\":5674:5680   */\n      0x00\n        /* \"#utility.yul\":5682:5688   */\n      0x00\n        /* \"#utility.yul\":5690:5696   */\n      0x00\n        /* \"#utility.yul\":5739:5741   */\n      0x60\n        /* \"#utility.yul\":5727:5736   */\n      dup6\n        /* \"#utility.yul\":5718:5725   */\n      dup8\n        /* \"#utility.yul\":5714:5737   */\n      sub\n        /* \"#utility.yul\":5710:5742   */\n      slt\n        /* \"#utility.yul\":5707:5826   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":5745:5824   */\n      tag_385\n      tag_260\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5707:5826   */\n    tag_384:\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5890:5943   */\n      tag_386\n        /* \"#utility.yul\":5935:5942   */\n      dup8\n        /* \"#utility.yul\":5926:5932   */\n      dup3\n        /* \"#utility.yul\":5915:5924   */\n      dup9\n        /* \"#utility.yul\":5911:5933   */\n      add\n        /* \"#utility.yul\":5890:5943   */\n      tag_268\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5880:5943   */\n      swap5\n      pop\n        /* \"#utility.yul\":5836:5953   */\n      pop\n        /* \"#utility.yul\":5992:5994   */\n      0x20\n        /* \"#utility.yul\":6018:6071   */\n      tag_387\n        /* \"#utility.yul\":6063:6070   */\n      dup8\n        /* \"#utility.yul\":6054:6060   */\n      dup3\n        /* \"#utility.yul\":6043:6052   */\n      dup9\n        /* \"#utility.yul\":6039:6061   */\n      add\n        /* \"#utility.yul\":6018:6071   */\n      tag_268\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":6008:6071   */\n      swap4\n      pop\n        /* \"#utility.yul\":5963:6081   */\n      pop\n        /* \"#utility.yul\":6148:6150   */\n      0x40\n        /* \"#utility.yul\":6137:6146   */\n      dup6\n        /* \"#utility.yul\":6133:6151   */\n      add\n        /* \"#utility.yul\":6120:6152   */\n      calldataload\n        /* \"#utility.yul\":6179:6197   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6171:6177   */\n      dup2\n        /* \"#utility.yul\":6168:6198   */\n      gt\n        /* \"#utility.yul\":6165:6282   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":6201:6280   */\n      tag_389\n      tag_261\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6165:6282   */\n    tag_388:\n        /* \"#utility.yul\":6314:6378   */\n      tag_390\n        /* \"#utility.yul\":6370:6377   */\n      dup8\n        /* \"#utility.yul\":6361:6367   */\n      dup3\n        /* \"#utility.yul\":6350:6359   */\n      dup9\n        /* \"#utility.yul\":6346:6368   */\n      add\n        /* \"#utility.yul\":6314:6378   */\n      tag_283\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6296:6378   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6091:6388   */\n      pop\n        /* \"#utility.yul\":5578:6395   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6401:7020   */\n    tag_87:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6486:6492   */\n      0x00\n        /* \"#utility.yul\":6494:6500   */\n      0x00\n        /* \"#utility.yul\":6543:6545   */\n      0x60\n        /* \"#utility.yul\":6531:6540   */\n      dup5\n        /* \"#utility.yul\":6522:6529   */\n      dup7\n        /* \"#utility.yul\":6518:6541   */\n      sub\n        /* \"#utility.yul\":6514:6546   */\n      slt\n        /* \"#utility.yul\":6511:6630   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":6549:6628   */\n      tag_393\n      tag_260\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6511:6630   */\n    tag_392:\n        /* \"#utility.yul\":6669:6670   */\n      0x00\n        /* \"#utility.yul\":6694:6747   */\n      tag_394\n        /* \"#utility.yul\":6739:6746   */\n      dup7\n        /* \"#utility.yul\":6730:6736   */\n      dup3\n        /* \"#utility.yul\":6719:6728   */\n      dup8\n        /* \"#utility.yul\":6715:6737   */\n      add\n        /* \"#utility.yul\":6694:6747   */\n      tag_265\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6684:6747   */\n      swap4\n      pop\n        /* \"#utility.yul\":6640:6757   */\n      pop\n        /* \"#utility.yul\":6796:6798   */\n      0x20\n        /* \"#utility.yul\":6822:6875   */\n      tag_395\n        /* \"#utility.yul\":6867:6874   */\n      dup7\n        /* \"#utility.yul\":6858:6864   */\n      dup3\n        /* \"#utility.yul\":6847:6856   */\n      dup8\n        /* \"#utility.yul\":6843:6865   */\n      add\n        /* \"#utility.yul\":6822:6875   */\n      tag_268\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6812:6875   */\n      swap3\n      pop\n        /* \"#utility.yul\":6767:6885   */\n      pop\n        /* \"#utility.yul\":6924:6926   */\n      0x40\n        /* \"#utility.yul\":6950:7003   */\n      tag_396\n        /* \"#utility.yul\":6995:7002   */\n      dup7\n        /* \"#utility.yul\":6986:6992   */\n      dup3\n        /* \"#utility.yul\":6975:6984   */\n      dup8\n        /* \"#utility.yul\":6971:6993   */\n      add\n        /* \"#utility.yul\":6950:7003   */\n      tag_268\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6940:7003   */\n      swap2\n      pop\n        /* \"#utility.yul\":6895:7013   */\n      pop\n        /* \"#utility.yul\":6401:7020   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7026:7195   */\n    tag_284:\n        /* \"#utility.yul\":7110:7121   */\n      0x00\n        /* \"#utility.yul\":7144:7150   */\n      dup3\n        /* \"#utility.yul\":7139:7142   */\n      dup3\n        /* \"#utility.yul\":7132:7151   */\n      mstore\n        /* \"#utility.yul\":7184:7188   */\n      0x20\n        /* \"#utility.yul\":7179:7182   */\n      dup3\n        /* \"#utility.yul\":7175:7189   */\n      add\n        /* \"#utility.yul\":7160:7189   */\n      swap1\n      pop\n        /* \"#utility.yul\":7026:7195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7201:7360   */\n    tag_285:\n        /* \"#utility.yul\":7341:7352   */\n      0x7a65726f20616464720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7337:7338   */\n      0x00\n        /* \"#utility.yul\":7329:7335   */\n      dup3\n        /* \"#utility.yul\":7325:7339   */\n      add\n        /* \"#utility.yul\":7318:7353   */\n      mstore\n        /* \"#utility.yul\":7201:7360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7366:7731   */\n    tag_286:\n        /* \"#utility.yul\":7508:7511   */\n      0x00\n        /* \"#utility.yul\":7529:7595   */\n      tag_400\n        /* \"#utility.yul\":7593:7594   */\n      0x09\n        /* \"#utility.yul\":7588:7591   */\n      dup4\n        /* \"#utility.yul\":7529:7595   */\n      tag_284\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7522:7595   */\n      swap2\n      pop\n        /* \"#utility.yul\":7604:7697   */\n      tag_401\n        /* \"#utility.yul\":7693:7696   */\n      dup3\n        /* \"#utility.yul\":7604:7697   */\n      tag_285\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7722:7724   */\n      0x20\n        /* \"#utility.yul\":7717:7720   */\n      dup3\n        /* \"#utility.yul\":7713:7725   */\n      add\n        /* \"#utility.yul\":7706:7725   */\n      swap1\n      pop\n        /* \"#utility.yul\":7366:7731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7737:8156   */\n    tag_106:\n        /* \"#utility.yul\":7903:7907   */\n      0x00\n        /* \"#utility.yul\":7941:7943   */\n      0x20\n        /* \"#utility.yul\":7930:7939   */\n      dup3\n        /* \"#utility.yul\":7926:7944   */\n      add\n        /* \"#utility.yul\":7918:7944   */\n      swap1\n      pop\n        /* \"#utility.yul\":7990:7999   */\n      dup2\n        /* \"#utility.yul\":7984:7988   */\n      dup2\n        /* \"#utility.yul\":7980:8000   */\n      sub\n        /* \"#utility.yul\":7976:7977   */\n      0x00\n        /* \"#utility.yul\":7965:7974   */\n      dup4\n        /* \"#utility.yul\":7961:7978   */\n      add\n        /* \"#utility.yul\":7954:8001   */\n      mstore\n        /* \"#utility.yul\":8018:8149   */\n      tag_403\n        /* \"#utility.yul\":8144:8148   */\n      dup2\n        /* \"#utility.yul\":8018:8149   */\n      tag_286\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8010:8149   */\n      swap1\n      pop\n        /* \"#utility.yul\":7737:8156   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8162:8321   */\n    tag_287:\n        /* \"#utility.yul\":8302:8313   */\n      0x7a65726f20757365720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8290:8296   */\n      dup3\n        /* \"#utility.yul\":8286:8300   */\n      add\n        /* \"#utility.yul\":8279:8314   */\n      mstore\n        /* \"#utility.yul\":8162:8321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8327:8692   */\n    tag_288:\n        /* \"#utility.yul\":8469:8472   */\n      0x00\n        /* \"#utility.yul\":8490:8556   */\n      tag_406\n        /* \"#utility.yul\":8554:8555   */\n      0x09\n        /* \"#utility.yul\":8549:8552   */\n      dup4\n        /* \"#utility.yul\":8490:8556   */\n      tag_284\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8483:8556   */\n      swap2\n      pop\n        /* \"#utility.yul\":8565:8658   */\n      tag_407\n        /* \"#utility.yul\":8654:8657   */\n      dup3\n        /* \"#utility.yul\":8565:8658   */\n      tag_287\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8683:8685   */\n      0x20\n        /* \"#utility.yul\":8678:8681   */\n      dup3\n        /* \"#utility.yul\":8674:8686   */\n      add\n        /* \"#utility.yul\":8667:8686   */\n      swap1\n      pop\n        /* \"#utility.yul\":8327:8692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9117   */\n    tag_113:\n        /* \"#utility.yul\":8864:8868   */\n      0x00\n        /* \"#utility.yul\":8902:8904   */\n      0x20\n        /* \"#utility.yul\":8891:8900   */\n      dup3\n        /* \"#utility.yul\":8887:8905   */\n      add\n        /* \"#utility.yul\":8879:8905   */\n      swap1\n      pop\n        /* \"#utility.yul\":8951:8960   */\n      dup2\n        /* \"#utility.yul\":8945:8949   */\n      dup2\n        /* \"#utility.yul\":8941:8961   */\n      sub\n        /* \"#utility.yul\":8937:8938   */\n      0x00\n        /* \"#utility.yul\":8926:8935   */\n      dup4\n        /* \"#utility.yul\":8922:8939   */\n      add\n        /* \"#utility.yul\":8915:8962   */\n      mstore\n        /* \"#utility.yul\":8979:9110   */\n      tag_409\n        /* \"#utility.yul\":9105:9109   */\n      dup2\n        /* \"#utility.yul\":8979:9110   */\n      tag_288\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8971:9110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8698:9117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9123:9288   */\n    tag_289:\n        /* \"#utility.yul\":9263:9280   */\n      0x616c726561647920636c61696d65640000000000000000000000000000000000\n        /* \"#utility.yul\":9259:9260   */\n      0x00\n        /* \"#utility.yul\":9251:9257   */\n      dup3\n        /* \"#utility.yul\":9247:9261   */\n      add\n        /* \"#utility.yul\":9240:9281   */\n      mstore\n        /* \"#utility.yul\":9123:9288   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9294:9660   */\n    tag_290:\n        /* \"#utility.yul\":9436:9439   */\n      0x00\n        /* \"#utility.yul\":9457:9524   */\n      tag_412\n        /* \"#utility.yul\":9521:9523   */\n      0x0f\n        /* \"#utility.yul\":9516:9519   */\n      dup4\n        /* \"#utility.yul\":9457:9524   */\n      tag_284\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9450:9524   */\n      swap2\n      pop\n        /* \"#utility.yul\":9533:9626   */\n      tag_413\n        /* \"#utility.yul\":9622:9625   */\n      dup3\n        /* \"#utility.yul\":9533:9626   */\n      tag_289\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9651:9653   */\n      0x20\n        /* \"#utility.yul\":9646:9649   */\n      dup3\n        /* \"#utility.yul\":9642:9654   */\n      add\n        /* \"#utility.yul\":9635:9654   */\n      swap1\n      pop\n        /* \"#utility.yul\":9294:9660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9666:10085   */\n    tag_129:\n        /* \"#utility.yul\":9832:9836   */\n      0x00\n        /* \"#utility.yul\":9870:9872   */\n      0x20\n        /* \"#utility.yul\":9859:9868   */\n      dup3\n        /* \"#utility.yul\":9855:9873   */\n      add\n        /* \"#utility.yul\":9847:9873   */\n      swap1\n      pop\n        /* \"#utility.yul\":9919:9928   */\n      dup2\n        /* \"#utility.yul\":9913:9917   */\n      dup2\n        /* \"#utility.yul\":9909:9929   */\n      sub\n        /* \"#utility.yul\":9905:9906   */\n      0x00\n        /* \"#utility.yul\":9894:9903   */\n      dup4\n        /* \"#utility.yul\":9890:9907   */\n      add\n        /* \"#utility.yul\":9883:9930   */\n      mstore\n        /* \"#utility.yul\":9947:10078   */\n      tag_415\n        /* \"#utility.yul\":10073:10077   */\n      dup2\n        /* \"#utility.yul\":9947:10078   */\n      tag_290\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":9939:10078   */\n      swap1\n      pop\n        /* \"#utility.yul\":9666:10085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10091:10185   */\n    tag_291:\n        /* \"#utility.yul\":10124:10132   */\n      0x00\n        /* \"#utility.yul\":10172:10177   */\n      dup2\n        /* \"#utility.yul\":10168:10170   */\n      0x60\n        /* \"#utility.yul\":10164:10178   */\n      shl\n        /* \"#utility.yul\":10143:10178   */\n      swap1\n      pop\n        /* \"#utility.yul\":10091:10185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10191:10285   */\n    tag_292:\n        /* \"#utility.yul\":10230:10237   */\n      0x00\n        /* \"#utility.yul\":10259:10279   */\n      tag_418\n        /* \"#utility.yul\":10273:10278   */\n      dup3\n        /* \"#utility.yul\":10259:10279   */\n      tag_291\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10248:10279   */\n      swap1\n      pop\n        /* \"#utility.yul\":10191:10285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10291:10391   */\n    tag_293:\n        /* \"#utility.yul\":10330:10337   */\n      0x00\n        /* \"#utility.yul\":10359:10385   */\n      tag_420\n        /* \"#utility.yul\":10379:10384   */\n      dup3\n        /* \"#utility.yul\":10359:10385   */\n      tag_292\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10348:10385   */\n      swap1\n      pop\n        /* \"#utility.yul\":10291:10391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10397:10554   */\n    tag_294:\n        /* \"#utility.yul\":10502:10547   */\n      tag_422\n        /* \"#utility.yul\":10522:10546   */\n      tag_423\n        /* \"#utility.yul\":10540:10545   */\n      dup3\n        /* \"#utility.yul\":10522:10546   */\n      tag_263\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":10502:10547   */\n      tag_293\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10497:10500   */\n      dup3\n        /* \"#utility.yul\":10490:10548   */\n      mstore\n        /* \"#utility.yul\":10397:10554   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10560:10639   */\n    tag_295:\n        /* \"#utility.yul\":10599:10606   */\n      0x00\n        /* \"#utility.yul\":10628:10633   */\n      dup2\n        /* \"#utility.yul\":10617:10633   */\n      swap1\n      pop\n        /* \"#utility.yul\":10560:10639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10645:10802   */\n    tag_296:\n        /* \"#utility.yul\":10750:10795   */\n      tag_426\n        /* \"#utility.yul\":10770:10794   */\n      tag_427\n        /* \"#utility.yul\":10788:10793   */\n      dup3\n        /* \"#utility.yul\":10770:10794   */\n      tag_266\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":10750:10795   */\n      tag_295\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":10745:10748   */\n      dup3\n        /* \"#utility.yul\":10738:10796   */\n      mstore\n        /* \"#utility.yul\":10645:10802   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10808:11346   */\n    tag_131:\n        /* \"#utility.yul\":10976:10979   */\n      0x00\n        /* \"#utility.yul\":10991:11066   */\n      tag_429\n        /* \"#utility.yul\":11062:11065   */\n      dup3\n        /* \"#utility.yul\":11053:11059   */\n      dup7\n        /* \"#utility.yul\":10991:11066   */\n      tag_294\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11091:11093   */\n      0x14\n        /* \"#utility.yul\":11086:11089   */\n      dup3\n        /* \"#utility.yul\":11082:11094   */\n      add\n        /* \"#utility.yul\":11075:11094   */\n      swap2\n      pop\n        /* \"#utility.yul\":11104:11179   */\n      tag_430\n        /* \"#utility.yul\":11175:11178   */\n      dup3\n        /* \"#utility.yul\":11166:11172   */\n      dup6\n        /* \"#utility.yul\":11104:11179   */\n      tag_296\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":11204:11206   */\n      0x20\n        /* \"#utility.yul\":11199:11202   */\n      dup3\n        /* \"#utility.yul\":11195:11207   */\n      add\n        /* \"#utility.yul\":11188:11207   */\n      swap2\n      pop\n        /* \"#utility.yul\":11217:11292   */\n      tag_431\n        /* \"#utility.yul\":11288:11291   */\n      dup3\n        /* \"#utility.yul\":11279:11285   */\n      dup5\n        /* \"#utility.yul\":11217:11292   */\n      tag_296\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":11317:11319   */\n      0x20\n        /* \"#utility.yul\":11312:11315   */\n      dup3\n        /* \"#utility.yul\":11308:11320   */\n      add\n        /* \"#utility.yul\":11301:11320   */\n      swap2\n      pop\n        /* \"#utility.yul\":11337:11340   */\n      dup2\n        /* \"#utility.yul\":11330:11340   */\n      swap1\n      pop\n        /* \"#utility.yul\":10808:11346   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11352:11519   */\n    tag_297:\n        /* \"#utility.yul\":11492:11511   */\n      0x696e76616c6964207369676e6174757265000000000000000000000000000000\n        /* \"#utility.yul\":11488:11489   */\n      0x00\n        /* \"#utility.yul\":11480:11486   */\n      dup3\n        /* \"#utility.yul\":11476:11490   */\n      add\n        /* \"#utility.yul\":11469:11512   */\n      mstore\n        /* \"#utility.yul\":11352:11519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11525:11891   */\n    tag_298:\n        /* \"#utility.yul\":11667:11670   */\n      0x00\n        /* \"#utility.yul\":11688:11755   */\n      tag_434\n        /* \"#utility.yul\":11752:11754   */\n      0x11\n        /* \"#utility.yul\":11747:11750   */\n      dup4\n        /* \"#utility.yul\":11688:11755   */\n      tag_284\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":11681:11755   */\n      swap2\n      pop\n        /* \"#utility.yul\":11764:11857   */\n      tag_435\n        /* \"#utility.yul\":11853:11856   */\n      dup3\n        /* \"#utility.yul\":11764:11857   */\n      tag_297\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":11882:11884   */\n      0x20\n        /* \"#utility.yul\":11877:11880   */\n      dup3\n        /* \"#utility.yul\":11873:11885   */\n      add\n        /* \"#utility.yul\":11866:11885   */\n      swap1\n      pop\n        /* \"#utility.yul\":11525:11891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11897:12316   */\n    tag_138:\n        /* \"#utility.yul\":12063:12067   */\n      0x00\n        /* \"#utility.yul\":12101:12103   */\n      0x20\n        /* \"#utility.yul\":12090:12099   */\n      dup3\n        /* \"#utility.yul\":12086:12104   */\n      add\n        /* \"#utility.yul\":12078:12104   */\n      swap1\n      pop\n        /* \"#utility.yul\":12150:12159   */\n      dup2\n        /* \"#utility.yul\":12144:12148   */\n      dup2\n        /* \"#utility.yul\":12140:12160   */\n      sub\n        /* \"#utility.yul\":12136:12137   */\n      0x00\n        /* \"#utility.yul\":12125:12134   */\n      dup4\n        /* \"#utility.yul\":12121:12138   */\n      add\n        /* \"#utility.yul\":12114:12161   */\n      mstore\n        /* \"#utility.yul\":12178:12309   */\n      tag_437\n        /* \"#utility.yul\":12304:12308   */\n      dup2\n        /* \"#utility.yul\":12178:12309   */\n      tag_298\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12170:12309   */\n      swap1\n      pop\n        /* \"#utility.yul\":11897:12316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12322:12654   */\n    tag_164:\n        /* \"#utility.yul\":12443:12447   */\n      0x00\n        /* \"#utility.yul\":12481:12483   */\n      0x40\n        /* \"#utility.yul\":12470:12479   */\n      dup3\n        /* \"#utility.yul\":12466:12484   */\n      add\n        /* \"#utility.yul\":12458:12484   */\n      swap1\n      pop\n        /* \"#utility.yul\":12494:12565   */\n      tag_439\n        /* \"#utility.yul\":12562:12563   */\n      0x00\n        /* \"#utility.yul\":12551:12560   */\n      dup4\n        /* \"#utility.yul\":12547:12564   */\n      add\n        /* \"#utility.yul\":12538:12544   */\n      dup6\n        /* \"#utility.yul\":12494:12565   */\n      tag_269\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12575:12647   */\n      tag_440\n        /* \"#utility.yul\":12643:12645   */\n      0x20\n        /* \"#utility.yul\":12632:12641   */\n      dup4\n        /* \"#utility.yul\":12628:12646   */\n      add\n        /* \"#utility.yul\":12619:12625   */\n      dup5\n        /* \"#utility.yul\":12575:12647   */\n      tag_269\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":12322:12654   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12660:12826   */\n    tag_299:\n        /* \"#utility.yul\":12800:12818   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":12796:12797   */\n      0x00\n        /* \"#utility.yul\":12788:12794   */\n      dup3\n        /* \"#utility.yul\":12784:12798   */\n      add\n        /* \"#utility.yul\":12777:12819   */\n      mstore\n        /* \"#utility.yul\":12660:12826   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12832:13198   */\n    tag_300:\n        /* \"#utility.yul\":12974:12977   */\n      0x00\n        /* \"#utility.yul\":12995:13062   */\n      tag_443\n        /* \"#utility.yul\":13059:13061   */\n      0x10\n        /* \"#utility.yul\":13054:13057   */\n      dup4\n        /* \"#utility.yul\":12995:13062   */\n      tag_284\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":12988:13062   */\n      swap2\n      pop\n        /* \"#utility.yul\":13071:13164   */\n      tag_444\n        /* \"#utility.yul\":13160:13163   */\n      dup3\n        /* \"#utility.yul\":13071:13164   */\n      tag_299\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13189:13191   */\n      0x20\n        /* \"#utility.yul\":13184:13187   */\n      dup3\n        /* \"#utility.yul\":13180:13192   */\n      add\n        /* \"#utility.yul\":13173:13192   */\n      swap1\n      pop\n        /* \"#utility.yul\":12832:13198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13204:13623   */\n    tag_194:\n        /* \"#utility.yul\":13370:13374   */\n      0x00\n        /* \"#utility.yul\":13408:13410   */\n      0x20\n        /* \"#utility.yul\":13397:13406   */\n      dup3\n        /* \"#utility.yul\":13393:13411   */\n      add\n        /* \"#utility.yul\":13385:13411   */\n      swap1\n      pop\n        /* \"#utility.yul\":13457:13466   */\n      dup2\n        /* \"#utility.yul\":13451:13455   */\n      dup2\n        /* \"#utility.yul\":13447:13467   */\n      sub\n        /* \"#utility.yul\":13443:13444   */\n      0x00\n        /* \"#utility.yul\":13432:13441   */\n      dup4\n        /* \"#utility.yul\":13428:13445   */\n      add\n        /* \"#utility.yul\":13421:13468   */\n      mstore\n        /* \"#utility.yul\":13485:13616   */\n      tag_446\n        /* \"#utility.yul\":13611:13615   */\n      dup2\n        /* \"#utility.yul\":13485:13616   */\n      tag_300\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13477:13616   */\n      swap1\n      pop\n        /* \"#utility.yul\":13204:13623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13629:13810   */\n    tag_301:\n        /* \"#utility.yul\":13769:13802   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13765:13766   */\n      0x00\n        /* \"#utility.yul\":13757:13763   */\n      dup3\n        /* \"#utility.yul\":13753:13767   */\n      add\n        /* \"#utility.yul\":13746:13803   */\n      mstore\n        /* \"#utility.yul\":13629:13810   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13816:14182   */\n    tag_302:\n        /* \"#utility.yul\":13958:13961   */\n      0x00\n        /* \"#utility.yul\":13979:14046   */\n      tag_449\n        /* \"#utility.yul\":14043:14045   */\n      0x1f\n        /* \"#utility.yul\":14038:14041   */\n      dup4\n        /* \"#utility.yul\":13979:14046   */\n      tag_284\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13972:14046   */\n      swap2\n      pop\n        /* \"#utility.yul\":14055:14148   */\n      tag_450\n        /* \"#utility.yul\":14144:14147   */\n      dup3\n        /* \"#utility.yul\":14055:14148   */\n      tag_301\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":14173:14175   */\n      0x20\n        /* \"#utility.yul\":14168:14171   */\n      dup3\n        /* \"#utility.yul\":14164:14176   */\n      add\n        /* \"#utility.yul\":14157:14176   */\n      swap1\n      pop\n        /* \"#utility.yul\":13816:14182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14188:14607   */\n    tag_198:\n        /* \"#utility.yul\":14354:14358   */\n      0x00\n        /* \"#utility.yul\":14392:14394   */\n      0x20\n        /* \"#utility.yul\":14381:14390   */\n      dup3\n        /* \"#utility.yul\":14377:14395   */\n      add\n        /* \"#utility.yul\":14369:14395   */\n      swap1\n      pop\n        /* \"#utility.yul\":14441:14450   */\n      dup2\n        /* \"#utility.yul\":14435:14439   */\n      dup2\n        /* \"#utility.yul\":14431:14451   */\n      sub\n        /* \"#utility.yul\":14427:14428   */\n      0x00\n        /* \"#utility.yul\":14416:14425   */\n      dup4\n        /* \"#utility.yul\":14412:14429   */\n      add\n        /* \"#utility.yul\":14405:14452   */\n      mstore\n        /* \"#utility.yul\":14469:14600   */\n      tag_452\n        /* \"#utility.yul\":14595:14599   */\n      dup2\n        /* \"#utility.yul\":14469:14600   */\n      tag_302\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14461:14600   */\n      swap1\n      pop\n        /* \"#utility.yul\":14188:14607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14613:14761   */\n    tag_303:\n        /* \"#utility.yul\":14715:14726   */\n      0x00\n        /* \"#utility.yul\":14752:14755   */\n      dup2\n        /* \"#utility.yul\":14737:14755   */\n      swap1\n      pop\n        /* \"#utility.yul\":14613:14761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14767:14981   */\n    tag_304:\n        /* \"#utility.yul\":14907:14973   */\n      0x19457468657265756d205369676e6564204d6573736167653a0a333200000000\n        /* \"#utility.yul\":14903:14904   */\n      0x00\n        /* \"#utility.yul\":14895:14901   */\n      dup3\n        /* \"#utility.yul\":14891:14905   */\n      add\n        /* \"#utility.yul\":14884:14974   */\n      mstore\n        /* \"#utility.yul\":14767:14981   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14987:15389   */\n    tag_305:\n        /* \"#utility.yul\":15147:15150   */\n      0x00\n        /* \"#utility.yul\":15168:15253   */\n      tag_456\n        /* \"#utility.yul\":15250:15252   */\n      0x1c\n        /* \"#utility.yul\":15245:15248   */\n      dup4\n        /* \"#utility.yul\":15168:15253   */\n      tag_303\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15161:15253   */\n      swap2\n      pop\n        /* \"#utility.yul\":15262:15355   */\n      tag_457\n        /* \"#utility.yul\":15351:15354   */\n      dup3\n        /* \"#utility.yul\":15262:15355   */\n      tag_304\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15380:15382   */\n      0x1c\n        /* \"#utility.yul\":15375:15378   */\n      dup3\n        /* \"#utility.yul\":15371:15383   */\n      add\n        /* \"#utility.yul\":15364:15383   */\n      swap1\n      pop\n        /* \"#utility.yul\":14987:15389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15395:15472   */\n    tag_306:\n        /* \"#utility.yul\":15432:15439   */\n      0x00\n        /* \"#utility.yul\":15461:15466   */\n      dup2\n        /* \"#utility.yul\":15450:15466   */\n      swap1\n      pop\n        /* \"#utility.yul\":15395:15472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15478:15557   */\n    tag_307:\n        /* \"#utility.yul\":15517:15524   */\n      0x00\n        /* \"#utility.yul\":15546:15551   */\n      dup2\n        /* \"#utility.yul\":15535:15551   */\n      swap1\n      pop\n        /* \"#utility.yul\":15478:15557   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15563:15720   */\n    tag_308:\n        /* \"#utility.yul\":15668:15713   */\n      tag_461\n        /* \"#utility.yul\":15688:15712   */\n      tag_462\n        /* \"#utility.yul\":15706:15711   */\n      dup3\n        /* \"#utility.yul\":15688:15712   */\n      tag_306\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15668:15713   */\n      tag_307\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15663:15666   */\n      dup3\n        /* \"#utility.yul\":15656:15714   */\n      mstore\n        /* \"#utility.yul\":15563:15720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15726:16248   */\n    tag_201:\n        /* \"#utility.yul\":15939:15942   */\n      0x00\n        /* \"#utility.yul\":15961:16109   */\n      tag_464\n        /* \"#utility.yul\":16105:16108   */\n      dup3\n        /* \"#utility.yul\":15961:16109   */\n      tag_305\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15954:16109   */\n      swap2\n      pop\n        /* \"#utility.yul\":16119:16194   */\n      tag_465\n        /* \"#utility.yul\":16190:16193   */\n      dup3\n        /* \"#utility.yul\":16181:16187   */\n      dup5\n        /* \"#utility.yul\":16119:16194   */\n      tag_308\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16219:16221   */\n      0x20\n        /* \"#utility.yul\":16214:16217   */\n      dup3\n        /* \"#utility.yul\":16210:16222   */\n      add\n        /* \"#utility.yul\":16203:16222   */\n      swap2\n      pop\n        /* \"#utility.yul\":16239:16242   */\n      dup2\n        /* \"#utility.yul\":16232:16242   */\n      swap1\n      pop\n        /* \"#utility.yul\":15726:16248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16254:16424   */\n    tag_309:\n        /* \"#utility.yul\":16394:16416   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":16390:16391   */\n      0x00\n        /* \"#utility.yul\":16382:16388   */\n      dup3\n        /* \"#utility.yul\":16378:16392   */\n      add\n        /* \"#utility.yul\":16371:16417   */\n      mstore\n        /* \"#utility.yul\":16254:16424   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16430:16796   */\n    tag_310:\n        /* \"#utility.yul\":16572:16575   */\n      0x00\n        /* \"#utility.yul\":16593:16660   */\n      tag_468\n        /* \"#utility.yul\":16657:16659   */\n      0x14\n        /* \"#utility.yul\":16652:16655   */\n      dup4\n        /* \"#utility.yul\":16593:16660   */\n      tag_284\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":16586:16660   */\n      swap2\n      pop\n        /* \"#utility.yul\":16669:16762   */\n      tag_469\n        /* \"#utility.yul\":16758:16761   */\n      dup3\n        /* \"#utility.yul\":16669:16762   */\n      tag_309\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16787:16789   */\n      0x20\n        /* \"#utility.yul\":16782:16785   */\n      dup3\n        /* \"#utility.yul\":16778:16790   */\n      add\n        /* \"#utility.yul\":16771:16790   */\n      swap1\n      pop\n        /* \"#utility.yul\":16430:16796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16802:17221   */\n    tag_218:\n        /* \"#utility.yul\":16968:16972   */\n      0x00\n        /* \"#utility.yul\":17006:17008   */\n      0x20\n        /* \"#utility.yul\":16995:17004   */\n      dup3\n        /* \"#utility.yul\":16991:17009   */\n      add\n        /* \"#utility.yul\":16983:17009   */\n      swap1\n      pop\n        /* \"#utility.yul\":17055:17064   */\n      dup2\n        /* \"#utility.yul\":17049:17053   */\n      dup2\n        /* \"#utility.yul\":17045:17065   */\n      sub\n        /* \"#utility.yul\":17041:17042   */\n      0x00\n        /* \"#utility.yul\":17030:17039   */\n      dup4\n        /* \"#utility.yul\":17026:17043   */\n      add\n        /* \"#utility.yul\":17019:17066   */\n      mstore\n        /* \"#utility.yul\":17083:17214   */\n      tag_471\n        /* \"#utility.yul\":17209:17213   */\n      dup2\n        /* \"#utility.yul\":17083:17214   */\n      tag_310\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":17075:17214   */\n      swap1\n      pop\n        /* \"#utility.yul\":16802:17221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17227:17407   */\n    tag_227:\n        /* \"#utility.yul\":17275:17352   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17272:17273   */\n      0x00\n        /* \"#utility.yul\":17265:17353   */\n      mstore\n        /* \"#utility.yul\":17372:17376   */\n      0x21\n        /* \"#utility.yul\":17369:17370   */\n      0x04\n        /* \"#utility.yul\":17362:17377   */\n      mstore\n        /* \"#utility.yul\":17396:17400   */\n      0x24\n        /* \"#utility.yul\":17393:17394   */\n      0x00\n        /* \"#utility.yul\":17386:17401   */\n      revert\n        /* \"#utility.yul\":17413:17531   */\n    tag_311:\n        /* \"#utility.yul\":17500:17524   */\n      tag_474\n        /* \"#utility.yul\":17518:17523   */\n      dup2\n        /* \"#utility.yul\":17500:17524   */\n      tag_306\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":17495:17498   */\n      dup3\n        /* \"#utility.yul\":17488:17525   */\n      mstore\n        /* \"#utility.yul\":17413:17531   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17537:17759   */\n    tag_251:\n        /* \"#utility.yul\":17630:17634   */\n      0x00\n        /* \"#utility.yul\":17668:17670   */\n      0x20\n        /* \"#utility.yul\":17657:17666   */\n      dup3\n        /* \"#utility.yul\":17653:17671   */\n      add\n        /* \"#utility.yul\":17645:17671   */\n      swap1\n      pop\n        /* \"#utility.yul\":17681:17752   */\n      tag_476\n        /* \"#utility.yul\":17749:17750   */\n      0x00\n        /* \"#utility.yul\":17738:17747   */\n      dup4\n        /* \"#utility.yul\":17734:17751   */\n      add\n        /* \"#utility.yul\":17725:17731   */\n      dup5\n        /* \"#utility.yul\":17681:17752   */\n      tag_311\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17537:17759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17765:17851   */\n    tag_312:\n        /* \"#utility.yul\":17800:17807   */\n      0x00\n        /* \"#utility.yul\":17840:17844   */\n      0xff\n        /* \"#utility.yul\":17833:17838   */\n      dup3\n        /* \"#utility.yul\":17829:17845   */\n      and\n        /* \"#utility.yul\":17818:17845   */\n      swap1\n      pop\n        /* \"#utility.yul\":17765:17851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17857:17969   */\n    tag_313:\n        /* \"#utility.yul\":17940:17962   */\n      tag_479\n        /* \"#utility.yul\":17956:17961   */\n      dup2\n        /* \"#utility.yul\":17940:17962   */\n      tag_312\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17935:17938   */\n      dup3\n        /* \"#utility.yul\":17928:17963   */\n      mstore\n        /* \"#utility.yul\":17857:17969   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17975:18520   */\n    tag_255:\n        /* \"#utility.yul\":18148:18152   */\n      0x00\n        /* \"#utility.yul\":18186:18189   */\n      0x80\n        /* \"#utility.yul\":18175:18184   */\n      dup3\n        /* \"#utility.yul\":18171:18190   */\n      add\n        /* \"#utility.yul\":18163:18190   */\n      swap1\n      pop\n        /* \"#utility.yul\":18200:18271   */\n      tag_481\n        /* \"#utility.yul\":18268:18269   */\n      0x00\n        /* \"#utility.yul\":18257:18266   */\n      dup4\n        /* \"#utility.yul\":18253:18270   */\n      add\n        /* \"#utility.yul\":18244:18250   */\n      dup8\n        /* \"#utility.yul\":18200:18271   */\n      tag_311\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":18281:18349   */\n      tag_482\n        /* \"#utility.yul\":18345:18347   */\n      0x20\n        /* \"#utility.yul\":18334:18343   */\n      dup4\n        /* \"#utility.yul\":18330:18348   */\n      add\n        /* \"#utility.yul\":18321:18327   */\n      dup7\n        /* \"#utility.yul\":18281:18349   */\n      tag_313\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18359:18431   */\n      tag_483\n        /* \"#utility.yul\":18427:18429   */\n      0x40\n        /* \"#utility.yul\":18416:18425   */\n      dup4\n        /* \"#utility.yul\":18412:18430   */\n      add\n        /* \"#utility.yul\":18403:18409   */\n      dup6\n        /* \"#utility.yul\":18359:18431   */\n      tag_311\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":18441:18513   */\n      tag_484\n        /* \"#utility.yul\":18509:18511   */\n      0x60\n        /* \"#utility.yul\":18498:18507   */\n      dup4\n        /* \"#utility.yul\":18494:18512   */\n      add\n        /* \"#utility.yul\":18485:18491   */\n      dup5\n        /* \"#utility.yul\":18441:18513   */\n      tag_311\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17975:18520   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fc600af56c5a74beb46df9fe656e41bee2487b47ba647092225bdb7fa6d3b9bf64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1087": {
									"entryPoint": null,
									"id": 1087,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_174": {
									"entryPoint": null,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_274": {
									"entryPoint": null,
									"id": 274,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 916,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3": {
									"entryPoint": 1482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6214:9",
										"nodeType": "YulBlock",
										"src": "0:6214:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "990:832:9",
													"nodeType": "YulBlock",
													"src": "990:832:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1037:83:9",
																"nodeType": "YulBlock",
																"src": "1037:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1039:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1039:77:9"
																			},
																			"nativeSrc": "1039:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1039:79:9"
																		},
																		"nativeSrc": "1039:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1039:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1011:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1011:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1020:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1020:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1007:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1007:3:9"
																		},
																		"nativeSrc": "1007:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1007:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1032:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1032:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1003:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1003:3:9"
																},
																"nativeSrc": "1003:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1003:33:9"
															},
															"nativeSrc": "1000:120:9",
															"nodeType": "YulIf",
															"src": "1000:120:9"
														},
														{
															"nativeSrc": "1130:128:9",
															"nodeType": "YulBlock",
															"src": "1130:128:9",
															"statements": [
																{
																	"nativeSrc": "1145:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1145:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1159:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1159:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1149:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1149:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1174:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1174:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1220:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1220:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1231:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1231:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1216:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1216:3:9"
																				},
																				"nativeSrc": "1216:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1216:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1240:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1240:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1184:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1184:31:9"
																		},
																		"nativeSrc": "1184:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1184:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1174:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1268:129:9",
															"nodeType": "YulBlock",
															"src": "1268:129:9",
															"statements": [
																{
																	"nativeSrc": "1283:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1283:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1297:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1297:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1287:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1287:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1313:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1313:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1359:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1359:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1370:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1370:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1355:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1355:3:9"
																				},
																				"nativeSrc": "1355:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1355:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1379:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1379:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1323:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1323:31:9"
																		},
																		"nativeSrc": "1323:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1323:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1313:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1313:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1407:129:9",
															"nodeType": "YulBlock",
															"src": "1407:129:9",
															"statements": [
																{
																	"nativeSrc": "1422:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1422:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1436:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1436:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1426:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1426:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1452:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1452:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:9"
																				},
																				"nativeSrc": "1494:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1462:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1462:31:9"
																		},
																		"nativeSrc": "1462:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1462:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1452:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1452:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:129:9",
															"nodeType": "YulBlock",
															"src": "1546:129:9",
															"statements": [
																{
																	"nativeSrc": "1561:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:9",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1591:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1637:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1637:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1648:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1648:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1633:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1633:3:9"
																				},
																				"nativeSrc": "1633:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1633:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1657:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1657:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1601:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1601:31:9"
																		},
																		"nativeSrc": "1601:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1591:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1685:130:9",
															"nodeType": "YulBlock",
															"src": "1685:130:9",
															"statements": [
																{
																	"nativeSrc": "1700:17:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1700:17:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1714:3:9",
																		"nodeType": "YulLiteral",
																		"src": "1714:3:9",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1704:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1704:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1731:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1731:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1777:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1777:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1788:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1788:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1773:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1773:3:9"
																				},
																				"nativeSrc": "1773:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1773:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1797:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1797:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1741:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1741:31:9"
																		},
																		"nativeSrc": "1741:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1741:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "1731:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1731:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:977:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "928:9:9",
														"nodeType": "YulTypedName",
														"src": "928:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "939:7:9",
														"nodeType": "YulTypedName",
														"src": "939:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "951:6:9",
														"nodeType": "YulTypedName",
														"src": "951:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "959:6:9",
														"nodeType": "YulTypedName",
														"src": "959:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "967:6:9",
														"nodeType": "YulTypedName",
														"src": "967:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "975:6:9",
														"nodeType": "YulTypedName",
														"src": "975:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "983:6:9",
														"nodeType": "YulTypedName",
														"src": "983:6:9",
														"type": ""
													}
												],
												"src": "845:977:9"
											},
											{
												"body": {
													"nativeSrc": "1893:53:9",
													"nodeType": "YulBlock",
													"src": "1893:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1910:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1910:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1933:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1933:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1915:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1915:17:9"
																		},
																		"nativeSrc": "1915:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1915:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:9"
																},
																"nativeSrc": "1903:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1903:37:9"
															},
															"nativeSrc": "1903:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1903:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1828:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1881:5:9",
														"nodeType": "YulTypedName",
														"src": "1881:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1888:3:9",
														"nodeType": "YulTypedName",
														"src": "1888:3:9",
														"type": ""
													}
												],
												"src": "1828:118:9"
											},
											{
												"body": {
													"nativeSrc": "2050:124:9",
													"nodeType": "YulBlock",
													"src": "2050:124:9",
													"statements": [
														{
															"nativeSrc": "2060:26:9",
															"nodeType": "YulAssignment",
															"src": "2060:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2072:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2072:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2083:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2083:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2068:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2068:3:9"
																},
																"nativeSrc": "2068:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2068:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2060:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2060:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2140:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2140:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2164:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2164:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2149:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:9"
																		},
																		"nativeSrc": "2149:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2096:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "2096:43:9"
																},
																"nativeSrc": "2096:71:9",
																"nodeType": "YulFunctionCall",
																"src": "2096:71:9"
															},
															"nativeSrc": "2096:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "2096:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1952:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2022:9:9",
														"nodeType": "YulTypedName",
														"src": "2022:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2034:6:9",
														"nodeType": "YulTypedName",
														"src": "2034:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2045:4:9",
														"nodeType": "YulTypedName",
														"src": "2045:4:9",
														"type": ""
													}
												],
												"src": "1952:222:9"
											},
											{
												"body": {
													"nativeSrc": "2276:73:9",
													"nodeType": "YulBlock",
													"src": "2276:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2293:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2298:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2298:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2286:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:9"
																},
																"nativeSrc": "2286:19:9",
																"nodeType": "YulFunctionCall",
																"src": "2286:19:9"
															},
															"nativeSrc": "2286:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "2286:19:9"
														},
														{
															"nativeSrc": "2314:29:9",
															"nodeType": "YulAssignment",
															"src": "2314:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2333:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2333:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2338:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2338:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2329:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2329:3:9"
																},
																"nativeSrc": "2329:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2329:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2314:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "2314:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2180:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2248:3:9",
														"nodeType": "YulTypedName",
														"src": "2248:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2253:6:9",
														"nodeType": "YulTypedName",
														"src": "2253:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2264:11:9",
														"nodeType": "YulTypedName",
														"src": "2264:11:9",
														"type": ""
													}
												],
												"src": "2180:169:9"
											},
											{
												"body": {
													"nativeSrc": "2461:58:9",
													"nodeType": "YulBlock",
													"src": "2461:58:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2483:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2483:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2491:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2491:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2479:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2479:3:9"
																		},
																		"nativeSrc": "2479:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2479:14:9"
																	},
																	{
																		"hexValue": "6176617461724e4654207a65726f",
																		"kind": "string",
																		"nativeSrc": "2495:16:9",
																		"nodeType": "YulLiteral",
																		"src": "2495:16:9",
																		"type": "",
																		"value": "avatarNFT zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2472:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2472:6:9"
																},
																"nativeSrc": "2472:40:9",
																"nodeType": "YulFunctionCall",
																"src": "2472:40:9"
															},
															"nativeSrc": "2472:40:9",
															"nodeType": "YulExpressionStatement",
															"src": "2472:40:9"
														}
													]
												},
												"name": "store_literal_in_memory_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0",
												"nativeSrc": "2355:164:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2453:6:9",
														"nodeType": "YulTypedName",
														"src": "2453:6:9",
														"type": ""
													}
												],
												"src": "2355:164:9"
											},
											{
												"body": {
													"nativeSrc": "2671:220:9",
													"nodeType": "YulBlock",
													"src": "2671:220:9",
													"statements": [
														{
															"nativeSrc": "2681:74:9",
															"nodeType": "YulAssignment",
															"src": "2681:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2747:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2747:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2688:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "2688:58:9"
																},
																"nativeSrc": "2688:67:9",
																"nodeType": "YulFunctionCall",
																"src": "2688:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2853:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2853:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0",
																	"nativeSrc": "2764:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "2764:88:9"
																},
																"nativeSrc": "2764:93:9",
																"nodeType": "YulFunctionCall",
																"src": "2764:93:9"
															},
															"nativeSrc": "2764:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "2764:93:9"
														},
														{
															"nativeSrc": "2866:19:9",
															"nodeType": "YulAssignment",
															"src": "2866:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2877:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2877:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2882:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2882:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2873:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2873:3:9"
																},
																"nativeSrc": "2873:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2873:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2866:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2866:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2525:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2659:3:9",
														"nodeType": "YulTypedName",
														"src": "2659:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2667:3:9",
														"nodeType": "YulTypedName",
														"src": "2667:3:9",
														"type": ""
													}
												],
												"src": "2525:366:9"
											},
											{
												"body": {
													"nativeSrc": "3068:248:9",
													"nodeType": "YulBlock",
													"src": "3068:248:9",
													"statements": [
														{
															"nativeSrc": "3078:26:9",
															"nodeType": "YulAssignment",
															"src": "3078:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3090:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3090:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3101:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3086:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3086:3:9"
																},
																"nativeSrc": "3086:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3086:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3078:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3078:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3125:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3136:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3136:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3121:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:9"
																		},
																		"nativeSrc": "3121:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3121:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3144:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3144:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3150:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3140:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3140:3:9"
																		},
																		"nativeSrc": "3140:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3140:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:9"
																},
																"nativeSrc": "3114:47:9",
																"nodeType": "YulFunctionCall",
																"src": "3114:47:9"
															},
															"nativeSrc": "3114:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "3114:47:9"
														},
														{
															"nativeSrc": "3170:139:9",
															"nodeType": "YulAssignment",
															"src": "3170:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3304:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3304:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3178:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "3178:124:9"
																},
																"nativeSrc": "3178:131:9",
																"nodeType": "YulFunctionCall",
																"src": "3178:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3170:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3170:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2897:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3048:9:9",
														"nodeType": "YulTypedName",
														"src": "3048:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3063:4:9",
														"nodeType": "YulTypedName",
														"src": "3063:4:9",
														"type": ""
													}
												],
												"src": "2897:419:9"
											},
											{
												"body": {
													"nativeSrc": "3428:56:9",
													"nodeType": "YulBlock",
													"src": "3428:56:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3450:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3450:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3458:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3458:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3446:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:9"
																		},
																		"nativeSrc": "3446:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:14:9"
																	},
																	{
																		"hexValue": "6974656d4e4654207a65726f",
																		"kind": "string",
																		"nativeSrc": "3462:14:9",
																		"nodeType": "YulLiteral",
																		"src": "3462:14:9",
																		"type": "",
																		"value": "itemNFT zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3439:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:9"
																},
																"nativeSrc": "3439:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3439:38:9"
															},
															"nativeSrc": "3439:38:9",
															"nodeType": "YulExpressionStatement",
															"src": "3439:38:9"
														}
													]
												},
												"name": "store_literal_in_memory_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3",
												"nativeSrc": "3322:162:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3420:6:9",
														"nodeType": "YulTypedName",
														"src": "3420:6:9",
														"type": ""
													}
												],
												"src": "3322:162:9"
											},
											{
												"body": {
													"nativeSrc": "3636:220:9",
													"nodeType": "YulBlock",
													"src": "3636:220:9",
													"statements": [
														{
															"nativeSrc": "3646:74:9",
															"nodeType": "YulAssignment",
															"src": "3646:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3712:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3712:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3717:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3717:2:9",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3653:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "3653:58:9"
																},
																"nativeSrc": "3653:67:9",
																"nodeType": "YulFunctionCall",
																"src": "3653:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3646:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3646:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3818:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3818:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3",
																	"nativeSrc": "3729:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "3729:88:9"
																},
																"nativeSrc": "3729:93:9",
																"nodeType": "YulFunctionCall",
																"src": "3729:93:9"
															},
															"nativeSrc": "3729:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "3729:93:9"
														},
														{
															"nativeSrc": "3831:19:9",
															"nodeType": "YulAssignment",
															"src": "3831:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3842:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3842:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3847:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3847:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3838:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:9"
																},
																"nativeSrc": "3838:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3831:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3490:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3624:3:9",
														"nodeType": "YulTypedName",
														"src": "3624:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3632:3:9",
														"nodeType": "YulTypedName",
														"src": "3632:3:9",
														"type": ""
													}
												],
												"src": "3490:366:9"
											},
											{
												"body": {
													"nativeSrc": "4033:248:9",
													"nodeType": "YulBlock",
													"src": "4033:248:9",
													"statements": [
														{
															"nativeSrc": "4043:26:9",
															"nodeType": "YulAssignment",
															"src": "4043:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4055:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4055:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4066:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4066:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4051:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:9"
																},
																"nativeSrc": "4051:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4051:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4043:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4043:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4090:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4090:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4101:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4101:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4086:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:9"
																		},
																		"nativeSrc": "4086:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4086:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4109:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4109:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4115:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4115:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4105:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4105:3:9"
																		},
																		"nativeSrc": "4105:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4105:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4079:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4079:6:9"
																},
																"nativeSrc": "4079:47:9",
																"nodeType": "YulFunctionCall",
																"src": "4079:47:9"
															},
															"nativeSrc": "4079:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "4079:47:9"
														},
														{
															"nativeSrc": "4135:139:9",
															"nodeType": "YulAssignment",
															"src": "4135:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4269:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4269:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4143:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "4143:124:9"
																},
																"nativeSrc": "4143:131:9",
																"nodeType": "YulFunctionCall",
																"src": "4143:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4135:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4135:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3862:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4013:9:9",
														"nodeType": "YulTypedName",
														"src": "4013:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4028:4:9",
														"nodeType": "YulTypedName",
														"src": "4028:4:9",
														"type": ""
													}
												],
												"src": "3862:419:9"
											},
											{
												"body": {
													"nativeSrc": "4393:57:9",
													"nodeType": "YulBlock",
													"src": "4393:57:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4415:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4415:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4423:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4423:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4411:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4411:3:9"
																		},
																		"nativeSrc": "4411:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4411:14:9"
																	},
																	{
																		"hexValue": "7472656173757279207a65726f",
																		"kind": "string",
																		"nativeSrc": "4427:15:9",
																		"nodeType": "YulLiteral",
																		"src": "4427:15:9",
																		"type": "",
																		"value": "treasury zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4404:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:9"
																},
																"nativeSrc": "4404:39:9",
																"nodeType": "YulFunctionCall",
																"src": "4404:39:9"
															},
															"nativeSrc": "4404:39:9",
															"nodeType": "YulExpressionStatement",
															"src": "4404:39:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00",
												"nativeSrc": "4287:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4385:6:9",
														"nodeType": "YulTypedName",
														"src": "4385:6:9",
														"type": ""
													}
												],
												"src": "4287:163:9"
											},
											{
												"body": {
													"nativeSrc": "4602:220:9",
													"nodeType": "YulBlock",
													"src": "4602:220:9",
													"statements": [
														{
															"nativeSrc": "4612:74:9",
															"nodeType": "YulAssignment",
															"src": "4612:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4678:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4678:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4683:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4619:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "4619:58:9"
																},
																"nativeSrc": "4619:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4619:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4612:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4612:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4784:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00",
																	"nativeSrc": "4695:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "4695:88:9"
																},
																"nativeSrc": "4695:93:9",
																"nodeType": "YulFunctionCall",
																"src": "4695:93:9"
															},
															"nativeSrc": "4695:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "4695:93:9"
														},
														{
															"nativeSrc": "4797:19:9",
															"nodeType": "YulAssignment",
															"src": "4797:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4808:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4813:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4813:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4804:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4804:3:9"
																},
																"nativeSrc": "4804:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4804:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4797:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4797:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4456:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4590:3:9",
														"nodeType": "YulTypedName",
														"src": "4590:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4598:3:9",
														"nodeType": "YulTypedName",
														"src": "4598:3:9",
														"type": ""
													}
												],
												"src": "4456:366:9"
											},
											{
												"body": {
													"nativeSrc": "4999:248:9",
													"nodeType": "YulBlock",
													"src": "4999:248:9",
													"statements": [
														{
															"nativeSrc": "5009:26:9",
															"nodeType": "YulAssignment",
															"src": "5009:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5021:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5021:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5017:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5017:3:9"
																},
																"nativeSrc": "5017:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5017:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5009:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5009:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5056:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5056:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5067:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5067:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5052:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5052:3:9"
																		},
																		"nativeSrc": "5052:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5052:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5075:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5075:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5081:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5081:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5071:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5071:3:9"
																		},
																		"nativeSrc": "5071:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5071:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5045:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5045:6:9"
																},
																"nativeSrc": "5045:47:9",
																"nodeType": "YulFunctionCall",
																"src": "5045:47:9"
															},
															"nativeSrc": "5045:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "5045:47:9"
														},
														{
															"nativeSrc": "5101:139:9",
															"nodeType": "YulAssignment",
															"src": "5101:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5235:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5235:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5109:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "5109:124:9"
																},
																"nativeSrc": "5109:131:9",
																"nodeType": "YulFunctionCall",
																"src": "5109:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5101:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5101:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4828:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4979:9:9",
														"nodeType": "YulTypedName",
														"src": "4979:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4994:4:9",
														"nodeType": "YulTypedName",
														"src": "4994:4:9",
														"type": ""
													}
												],
												"src": "4828:419:9"
											},
											{
												"body": {
													"nativeSrc": "5359:55:9",
													"nodeType": "YulBlock",
													"src": "5359:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5381:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5381:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5389:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5389:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5377:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:9"
																		},
																		"nativeSrc": "5377:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5377:14:9"
																	},
																	{
																		"hexValue": "7369676e6572207a65726f",
																		"kind": "string",
																		"nativeSrc": "5393:13:9",
																		"nodeType": "YulLiteral",
																		"src": "5393:13:9",
																		"type": "",
																		"value": "signer zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5370:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:9"
																},
																"nativeSrc": "5370:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5370:37:9"
															},
															"nativeSrc": "5370:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5370:37:9"
														}
													]
												},
												"name": "store_literal_in_memory_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8",
												"nativeSrc": "5253:161:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5351:6:9",
														"nodeType": "YulTypedName",
														"src": "5351:6:9",
														"type": ""
													}
												],
												"src": "5253:161:9"
											},
											{
												"body": {
													"nativeSrc": "5566:220:9",
													"nodeType": "YulBlock",
													"src": "5566:220:9",
													"statements": [
														{
															"nativeSrc": "5576:74:9",
															"nodeType": "YulAssignment",
															"src": "5576:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5642:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5642:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5647:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5647:2:9",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5583:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "5583:58:9"
																},
																"nativeSrc": "5583:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5583:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5576:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5576:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5748:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5748:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8",
																	"nativeSrc": "5659:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "5659:88:9"
																},
																"nativeSrc": "5659:93:9",
																"nodeType": "YulFunctionCall",
																"src": "5659:93:9"
															},
															"nativeSrc": "5659:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "5659:93:9"
														},
														{
															"nativeSrc": "5761:19:9",
															"nodeType": "YulAssignment",
															"src": "5761:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5772:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5772:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5777:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5777:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5768:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:9"
																},
																"nativeSrc": "5768:12:9",
																"nodeType": "YulFunctionCall",
																"src": "5768:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5761:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5761:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5420:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5554:3:9",
														"nodeType": "YulTypedName",
														"src": "5554:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5562:3:9",
														"nodeType": "YulTypedName",
														"src": "5562:3:9",
														"type": ""
													}
												],
												"src": "5420:366:9"
											},
											{
												"body": {
													"nativeSrc": "5963:248:9",
													"nodeType": "YulBlock",
													"src": "5963:248:9",
													"statements": [
														{
															"nativeSrc": "5973:26:9",
															"nodeType": "YulAssignment",
															"src": "5973:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5985:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5985:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5996:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5996:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5981:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5981:3:9"
																},
																"nativeSrc": "5981:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5981:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5973:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5973:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6020:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6020:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6031:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6031:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6016:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6016:3:9"
																		},
																		"nativeSrc": "6016:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6016:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6039:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6039:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6045:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6045:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6035:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:9"
																		},
																		"nativeSrc": "6035:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6009:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6009:6:9"
																},
																"nativeSrc": "6009:47:9",
																"nodeType": "YulFunctionCall",
																"src": "6009:47:9"
															},
															"nativeSrc": "6009:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "6009:47:9"
														},
														{
															"nativeSrc": "6065:139:9",
															"nodeType": "YulAssignment",
															"src": "6065:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6199:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6199:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6073:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "6073:124:9"
																},
																"nativeSrc": "6073:131:9",
																"nodeType": "YulFunctionCall",
																"src": "6073:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6065:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6065:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5792:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5943:9:9",
														"nodeType": "YulTypedName",
														"src": "5943:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5958:4:9",
														"nodeType": "YulTypedName",
														"src": "5958:4:9",
														"type": ""
													}
												],
												"src": "5792:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0(memPtr) {\n\n        mstore(add(memPtr, 0), \"avatarNFT zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"itemNFT zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00(memPtr) {\n\n        mstore(add(memPtr, 0), \"treasury zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8(memPtr) {\n\n        mstore(add(memPtr, 0), \"signer zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2277 CODESIZE SUB DUP1 PUSH2 0x2277 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST DUP5 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x539 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x394 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x140 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x137 SWAP1 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP1 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP1 PUSH2 0x67C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x281 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x702 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x482 DUP3 PUSH2 0x459 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x492 DUP2 PUSH2 0x478 JUMP JUMPDEST DUP2 EQ PUSH2 0x49C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4AD DUP2 PUSH2 0x489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4CC JUMPI PUSH2 0x4CB PUSH2 0x455 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4D9 DUP9 DUP3 DUP10 ADD PUSH2 0x49F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4EA DUP9 DUP3 DUP10 ADD PUSH2 0x49F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4FB DUP9 DUP3 DUP10 ADD PUSH2 0x49F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x50C DUP9 DUP3 DUP10 ADD PUSH2 0x49F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x51D DUP9 DUP3 DUP10 ADD PUSH2 0x49F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x533 DUP2 PUSH2 0x478 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x54C PUSH0 DUP4 ADD DUP5 PUSH2 0x52A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6176617461724E4654207A65726F000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x596 PUSH1 0xE DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x5A1 DUP3 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5C3 DUP2 PUSH2 0x58A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6974656D4E4654207A65726F0000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5FE PUSH1 0xC DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x609 DUP3 PUSH2 0x5CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x62B DUP2 PUSH2 0x5F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7472656173757279207A65726F00000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x666 PUSH1 0xD DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x671 DUP3 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x693 DUP2 PUSH2 0x65A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7369676E6572207A65726F000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6CE PUSH1 0xB DUP4 PUSH2 0x552 JUMP JUMPDEST SWAP2 POP PUSH2 0x6D9 DUP3 PUSH2 0x69A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6FB DUP2 PUSH2 0x6C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B68 DUP1 PUSH2 0x70F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA8602FEA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA8602FEA EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xA87331E5 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xC5FB50D5 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xC69D65D1 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x354 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x76618F27 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x83B78188 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C6 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x4626402B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x47E25EFF EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x57D1F910 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x5FB84D67 EQ PUSH2 0x24A JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x28BE338 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x280E31CC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x2F5E6A05 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x323F24AB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1372 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1372 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1372 JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x8E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3F7 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0xD70 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x42E PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x521 PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP1 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4BD6AEDF6FBD4E9CACAF319DC8D6906FF7F7FD2522898365F92AFAB9CB245444 DUP3 PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x62B PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x634 PUSH0 PUSH2 0xDD1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x63E PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x646 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP1 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x717 DUP3 PUSH2 0xF2B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x767 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF5A JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EF SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP9 PUSH1 0x40 MLOAD PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x8B5 PUSH2 0xF84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8ED PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x8F5 PUSH2 0xF8D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x926 PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98B SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9DF PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA44 SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA98 PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95B529CEB2B4C5026133EAFCB0F6E7E63F17C39398D1B67E14569272CF3C956B DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB9F SWAP3 SWAP2 SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC19 SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC6D PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE6 DUP2 PUSH2 0xDD1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCF1 PUSH2 0xFEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0F PUSH2 0x8F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD6E JUMPI PUSH2 0xD32 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xD78 PUSH2 0xFF6 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xDBA PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE9A PUSH2 0x504 JUMP JUMPDEST ISZERO PUSH2 0xEDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED1 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xF21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xF68 DUP7 DUP7 PUSH2 0x103F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF78 DUP3 DUP3 PUSH2 0x1094 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF95 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFD8 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFFE PUSH2 0x504 JUMP JUMPDEST PUSH2 0x103D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x107F JUMPI PUSH0 PUSH0 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x1071 DUP9 DUP3 DUP6 DUP6 PUSH2 0x11F6 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x108D JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10A7 JUMPI PUSH2 0x10A6 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10E6 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1189 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x119C JUMPI PUSH2 0x119B PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11AF JUMPI PUSH2 0x11AE PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11F1 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1232 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x12D3 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1255 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1275 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C6 JUMPI PUSH0 PUSH1 0x1 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x12D3 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x130E DUP3 PUSH2 0x12E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131E DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP2 EQ PUSH2 0x1328 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1339 DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1351 DUP2 PUSH2 0x133F JUMP JUMPDEST DUP2 EQ PUSH2 0x135B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136C DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH2 0x1387 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1395 DUP6 DUP3 DUP7 ADD PUSH2 0x132B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13A6 DUP6 DUP3 DUP7 ADD PUSH2 0x135E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B9 DUP2 PUSH2 0x133F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EC PUSH2 0x12DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13FA DUP5 DUP3 DUP6 ADD PUSH2 0x132B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1426 PUSH2 0x1421 PUSH2 0x141C DUP5 PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1437 DUP3 PUSH2 0x140C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1448 DUP3 PUSH2 0x142D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1458 DUP2 PUSH2 0x143E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1471 PUSH0 DUP4 ADD DUP5 PUSH2 0x144F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1480 DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1499 PUSH0 DUP4 ADD DUP5 PUSH2 0x1477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A9 DUP3 PUSH2 0x142D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B9 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EC DUP2 PUSH2 0x14D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1505 PUSH0 DUP4 ADD DUP5 PUSH2 0x14E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x152C JUMPI PUSH2 0x152B PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x150F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1565 JUMPI PUSH2 0x1564 PUSH2 0x1513 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1584 JUMPI PUSH2 0x1583 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1591 DUP8 DUP3 DUP9 ADD PUSH2 0x135E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x15A2 DUP8 DUP3 DUP9 ADD PUSH2 0x135E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15C2 PUSH2 0x12E1 JUMP JUMPDEST JUMPDEST PUSH2 0x15CF DUP8 DUP3 DUP9 ADD PUSH2 0x1517 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F3 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1601 DUP7 DUP3 DUP8 ADD PUSH2 0x132B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1612 DUP7 DUP3 DUP8 ADD PUSH2 0x135E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1623 DUP7 DUP3 DUP8 ADD PUSH2 0x135E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7A65726F20616464720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1671 PUSH1 0x9 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x167C DUP3 PUSH2 0x163D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x169E DUP2 PUSH2 0x1665 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7A65726F20757365720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16D9 PUSH1 0x9 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x16E4 DUP3 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1706 DUP2 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1741 PUSH1 0xF DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x174C DUP3 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x176E DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x178B DUP3 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x179C DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B4 PUSH2 0x17AF DUP3 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x1792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D4 PUSH2 0x17CF DUP3 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x17BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17E5 DUP3 DUP7 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x17F5 DUP3 DUP6 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1805 DUP3 DUP5 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x184A PUSH1 0x11 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x1855 DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1877 DUP2 PUSH2 0x183E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1891 PUSH0 DUP4 ADD DUP6 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x189E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18D9 PUSH1 0x10 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x18E4 DUP3 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1906 DUP2 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1941 PUSH1 0x1F DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x194C DUP3 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x196E DUP2 PUSH2 0x1935 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19B3 PUSH1 0x1C DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BE DUP3 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1C DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EC PUSH2 0x19E7 DUP3 PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x19D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19FC DUP3 PUSH2 0x19A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A08 DUP3 DUP5 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4B PUSH1 0x14 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A56 DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A78 DUP2 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1AB5 DUP2 PUSH2 0x19C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ACE PUSH0 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE9 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B02 PUSH0 DUP4 ADD DUP8 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x1B0F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x1B1C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x1B29 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH1 0xA CREATE2 PUSH13 0x5A74BEB46DF9FE656E41BEE248 PUSH28 0x47BA647092225BDB7FA6D3B9BF64736F6C634300081E003300000000 ",
							"sourceMap": "414:3515:8:-:0;;;1030:599;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1204:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:2;1821:7;:22;;;;1258:1:8::1;1236:24;;:10;:24;;::::0;1228:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1317:1;1297:22;;:8;:22;;::::0;1289:47:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1381:1;1354:29;;:15;:29;;::::0;1346:55:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1444:1;1419:27;;:13;:27;;::::0;1411:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1493:10;1473:9;;:31;;;;;;;;;;;;;;;;;;1533:8;1514:7;;:28;;;;;;;;;;;;;;;;;;1569:15;1552:14;;:32;;;;;;;;;;;;;;;;;;1609:13;1594:12;;:28;;;;;;;;;;;;;;;;;;1030:599:::0;;;;;414:3515;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:977::-;951:6;959;967;975;983;1032:3;1020:9;1011:7;1007:23;1003:33;1000:120;;;1039:79;;:::i;:::-;1000:120;1159:1;1184:64;1240:7;1231:6;1220:9;1216:22;1184:64;:::i;:::-;1174:74;;1130:128;1297:2;1323:64;1379:7;1370:6;1359:9;1355:22;1323:64;:::i;:::-;1313:74;;1268:129;1436:2;1462:64;1518:7;1509:6;1498:9;1494:22;1462:64;:::i;:::-;1452:74;;1407:129;1575:2;1601:64;1657:7;1648:6;1637:9;1633:22;1601:64;:::i;:::-;1591:74;;1546:129;1714:3;1741:64;1797:7;1788:6;1777:9;1773:22;1741:64;:::i;:::-;1731:74;;1685:130;845:977;;;;;;;;:::o;1828:118::-;1915:24;1933:5;1915:24;:::i;:::-;1910:3;1903:37;1828:118;;:::o;1952:222::-;2045:4;2083:2;2072:9;2068:18;2060:26;;2096:71;2164:1;2153:9;2149:17;2140:6;2096:71;:::i;:::-;1952:222;;;;:::o;2180:169::-;2264:11;2298:6;2293:3;2286:19;2338:4;2333:3;2329:14;2314:29;;2180:169;;;;:::o;2355:164::-;2495:16;2491:1;2483:6;2479:14;2472:40;2355:164;:::o;2525:366::-;2667:3;2688:67;2752:2;2747:3;2688:67;:::i;:::-;2681:74;;2764:93;2853:3;2764:93;:::i;:::-;2882:2;2877:3;2873:12;2866:19;;2525:366;;;:::o;2897:419::-;3063:4;3101:2;3090:9;3086:18;3078:26;;3150:9;3144:4;3140:20;3136:1;3125:9;3121:17;3114:47;3178:131;3304:4;3178:131;:::i;:::-;3170:139;;2897:419;;;:::o;3322:162::-;3462:14;3458:1;3450:6;3446:14;3439:38;3322:162;:::o;3490:366::-;3632:3;3653:67;3717:2;3712:3;3653:67;:::i;:::-;3646:74;;3729:93;3818:3;3729:93;:::i;:::-;3847:2;3842:3;3838:12;3831:19;;3490:366;;;:::o;3862:419::-;4028:4;4066:2;4055:9;4051:18;4043:26;;4115:9;4109:4;4105:20;4101:1;4090:9;4086:17;4079:47;4143:131;4269:4;4143:131;:::i;:::-;4135:139;;3862:419;;;:::o;4287:163::-;4427:15;4423:1;4415:6;4411:14;4404:39;4287:163;:::o;4456:366::-;4598:3;4619:67;4683:2;4678:3;4619:67;:::i;:::-;4612:74;;4695:93;4784:3;4695:93;:::i;:::-;4813:2;4808:3;4804:12;4797:19;;4456:366;;;:::o;4828:419::-;4994:4;5032:2;5021:9;5017:18;5009:26;;5081:9;5075:4;5071:20;5067:1;5056:9;5052:17;5045:47;5109:131;5235:4;5109:131;:::i;:::-;5101:139;;4828:419;;;:::o;5253:161::-;5393:13;5389:1;5381:6;5377:14;5370:37;5253:161;:::o;5420:366::-;5562:3;5583:67;5647:2;5642:3;5583:67;:::i;:::-;5576:74;;5659:93;5748:3;5659:93;:::i;:::-;5777:2;5772:3;5768:12;5761:19;;5420:366;;;:::o;5792:419::-;5958:4;5996:2;5985:9;5981:18;5973:26;;6045:9;6039:4;6035:20;6031:1;6020:9;6016:17;6009:47;6073:131;6199:4;6073:131;:::i;:::-;6065:139;;5792:419;;;:::o;414:3515:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 3305,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_572": {
									"entryPoint": 4079,
									"id": 572,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_308": {
									"entryPoint": 3972,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_300": {
									"entryPoint": 3804,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_238": {
									"entryPoint": 3981,
									"id": 238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_211": {
									"entryPoint": 3730,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_222": {
									"entryPoint": 4086,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_throwError_937": {
									"entryPoint": 4244,
									"id": 937,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3537,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_254": {
									"entryPoint": 3440,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@avatarNFT_967": {
									"entryPoint": 933,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimReward_1354": {
									"entryPoint": 1590,
									"id": 1354,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@itemNFT_970": {
									"entryPoint": 1247,
									"id": 970,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2295,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1188": {
									"entryPoint": 2277,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_199": {
									"entryPoint": 1284,
									"id": 199,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@questProgress_984": {
									"entryPoint": 880,
									"id": 984,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recover_694": {
									"entryPoint": 3930,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1571,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardClaimed_990": {
									"entryPoint": 2235,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardSigner_974": {
									"entryPoint": 970,
									"id": 974,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAvatarNFT_1111": {
									"entryPoint": 2519,
									"id": 1111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setItemNFT_1135": {
									"entryPoint": 1062,
									"id": 1135,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRewardSigner_1179": {
									"entryPoint": 2988,
									"id": 1179,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTreasuryWallet_1157": {
									"entryPoint": 2334,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@toEthSignedMessageHash_1281": {
									"entryPoint": 3883,
									"id": 1281,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3173,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasuryWallet_972": {
									"entryPoint": 1025,
									"id": 972,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tryRecover_664": {
									"entryPoint": 4159,
									"id": 664,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@tryRecover_852": {
									"entryPoint": 4598,
									"id": 852,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@unpause_1197": {
									"entryPoint": 1007,
									"id": 1197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateLevel_1228": {
									"entryPoint": 1305,
									"id": 1228,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateQuestProgress_1264": {
									"entryPoint": 2704,
									"id": 1264,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@userLevel_978": {
									"entryPoint": 912,
									"id": 978,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 5399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 5484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 6051,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC1155_$443_to_t_address_fromStack": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$560_to_t_address_fromStack": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6106,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155_$443__to_t_address__fromStack_reversed": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$560__to_t_address__fromStack_reversed": {
									"entryPoint": 5214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6270,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC1155_$443_to_t_address": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$560_to_t_address": {
									"entryPoint": 5182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 6017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 6074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 6783,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5395,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 6005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 6679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a": {
									"entryPoint": 6166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa": {
									"entryPoint": 5797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18523:9",
										"nodeType": "YulBlock",
										"src": "0:18523:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "748:87:9",
													"nodeType": "YulBlock",
													"src": "748:87:9",
													"statements": [
														{
															"nativeSrc": "758:29:9",
															"nodeType": "YulAssignment",
															"src": "758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:9"
																},
																"nativeSrc": "767:20:9",
																"nodeType": "YulFunctionCall",
																"src": "767:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:9"
																},
																"nativeSrc": "796:33:9",
																"nodeType": "YulFunctionCall",
																"src": "796:33:9"
															},
															"nativeSrc": "796:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:9",
														"nodeType": "YulTypedName",
														"src": "726:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:9",
														"nodeType": "YulTypedName",
														"src": "734:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:9",
														"nodeType": "YulTypedName",
														"src": "742:5:9",
														"type": ""
													}
												],
												"src": "696:139:9"
											},
											{
												"body": {
													"nativeSrc": "886:32:9",
													"nodeType": "YulBlock",
													"src": "886:32:9",
													"statements": [
														{
															"nativeSrc": "896:16:9",
															"nodeType": "YulAssignment",
															"src": "896:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:9",
																"nodeType": "YulIdentifier",
																"src": "907:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:9",
														"nodeType": "YulTypedName",
														"src": "868:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:9",
														"nodeType": "YulTypedName",
														"src": "878:7:9",
														"type": ""
													}
												],
												"src": "841:77:9"
											},
											{
												"body": {
													"nativeSrc": "967:79:9",
													"nodeType": "YulBlock",
													"src": "967:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:9",
																"nodeType": "YulBlock",
																"src": "1024:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:9"
																			},
																			"nativeSrc": "1026:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:9"
																		},
																		"nativeSrc": "1026:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:9"
																				},
																				"nativeSrc": "997:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:9"
																		},
																		"nativeSrc": "987:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:9"
																},
																"nativeSrc": "980:43:9",
																"nodeType": "YulFunctionCall",
																"src": "980:43:9"
															},
															"nativeSrc": "977:63:9",
															"nodeType": "YulIf",
															"src": "977:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:9",
														"nodeType": "YulTypedName",
														"src": "960:5:9",
														"type": ""
													}
												],
												"src": "924:122:9"
											},
											{
												"body": {
													"nativeSrc": "1104:87:9",
													"nodeType": "YulBlock",
													"src": "1104:87:9",
													"statements": [
														{
															"nativeSrc": "1114:29:9",
															"nodeType": "YulAssignment",
															"src": "1114:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:9"
																},
																"nativeSrc": "1123:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:9"
																},
																"nativeSrc": "1152:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:9"
															},
															"nativeSrc": "1152:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:9",
														"nodeType": "YulTypedName",
														"src": "1082:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:9",
														"nodeType": "YulTypedName",
														"src": "1090:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:9",
														"nodeType": "YulTypedName",
														"src": "1098:5:9",
														"type": ""
													}
												],
												"src": "1052:139:9"
											},
											{
												"body": {
													"nativeSrc": "1280:391:9",
													"nodeType": "YulBlock",
													"src": "1280:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:9",
																"nodeType": "YulBlock",
																"src": "1326:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:9"
																			},
																			"nativeSrc": "1328:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:9"
																		},
																		"nativeSrc": "1328:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:9"
																		},
																		"nativeSrc": "1297:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:9"
																},
																"nativeSrc": "1293:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:9"
															},
															"nativeSrc": "1290:119:9",
															"nodeType": "YulIf",
															"src": "1290:119:9"
														},
														{
															"nativeSrc": "1419:117:9",
															"nodeType": "YulBlock",
															"src": "1419:117:9",
															"statements": [
																{
																	"nativeSrc": "1434:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:9"
																				},
																				"nativeSrc": "1494:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:9"
																		},
																		"nativeSrc": "1473:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:9",
															"nodeType": "YulBlock",
															"src": "1546:118:9",
															"statements": [
																{
																	"nativeSrc": "1561:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:9",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:9"
																				},
																				"nativeSrc": "1622:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:9"
																		},
																		"nativeSrc": "1601:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:9",
														"nodeType": "YulTypedName",
														"src": "1242:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:9",
														"nodeType": "YulTypedName",
														"src": "1253:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:9",
														"nodeType": "YulTypedName",
														"src": "1265:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:9",
														"nodeType": "YulTypedName",
														"src": "1273:6:9",
														"type": ""
													}
												],
												"src": "1197:474:9"
											},
											{
												"body": {
													"nativeSrc": "1742:53:9",
													"nodeType": "YulBlock",
													"src": "1742:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:9"
																		},
																		"nativeSrc": "1764:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:9"
																},
																"nativeSrc": "1752:37:9",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:9"
															},
															"nativeSrc": "1752:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:9",
														"nodeType": "YulTypedName",
														"src": "1730:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:9",
														"nodeType": "YulTypedName",
														"src": "1737:3:9",
														"type": ""
													}
												],
												"src": "1677:118:9"
											},
											{
												"body": {
													"nativeSrc": "1899:124:9",
													"nodeType": "YulBlock",
													"src": "1899:124:9",
													"statements": [
														{
															"nativeSrc": "1909:26:9",
															"nodeType": "YulAssignment",
															"src": "1909:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:9"
																},
																"nativeSrc": "1917:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:9",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:9"
																		},
																		"nativeSrc": "1998:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:9"
																},
																"nativeSrc": "1945:71:9",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:9"
															},
															"nativeSrc": "1945:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:9",
														"nodeType": "YulTypedName",
														"src": "1871:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:9",
														"nodeType": "YulTypedName",
														"src": "1883:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:9",
														"nodeType": "YulTypedName",
														"src": "1894:4:9",
														"type": ""
													}
												],
												"src": "1801:222:9"
											},
											{
												"body": {
													"nativeSrc": "2095:263:9",
													"nodeType": "YulBlock",
													"src": "2095:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:9",
																"nodeType": "YulBlock",
																"src": "2141:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:9"
																			},
																			"nativeSrc": "2143:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:9"
																		},
																		"nativeSrc": "2143:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:9"
																		},
																		"nativeSrc": "2112:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:9"
																},
																"nativeSrc": "2108:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:9"
															},
															"nativeSrc": "2105:119:9",
															"nodeType": "YulIf",
															"src": "2105:119:9"
														},
														{
															"nativeSrc": "2234:117:9",
															"nodeType": "YulBlock",
															"src": "2234:117:9",
															"statements": [
																{
																	"nativeSrc": "2249:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:9"
																				},
																				"nativeSrc": "2309:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:9"
																		},
																		"nativeSrc": "2288:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2029:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:9",
														"nodeType": "YulTypedName",
														"src": "2065:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:9",
														"nodeType": "YulTypedName",
														"src": "2076:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:9",
														"nodeType": "YulTypedName",
														"src": "2088:6:9",
														"type": ""
													}
												],
												"src": "2029:329:9"
											},
											{
												"body": {
													"nativeSrc": "2396:28:9",
													"nodeType": "YulBlock",
													"src": "2396:28:9",
													"statements": [
														{
															"nativeSrc": "2406:12:9",
															"nodeType": "YulAssignment",
															"src": "2406:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "2413:5:9",
																"nodeType": "YulIdentifier",
																"src": "2413:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2406:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2406:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2364:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2382:5:9",
														"nodeType": "YulTypedName",
														"src": "2382:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2392:3:9",
														"nodeType": "YulTypedName",
														"src": "2392:3:9",
														"type": ""
													}
												],
												"src": "2364:60:9"
											},
											{
												"body": {
													"nativeSrc": "2490:82:9",
													"nodeType": "YulBlock",
													"src": "2490:82:9",
													"statements": [
														{
															"nativeSrc": "2500:66:9",
															"nodeType": "YulAssignment",
															"src": "2500:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2558:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2558:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2540:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2540:17:9"
																				},
																				"nativeSrc": "2540:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2540:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2531:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "2531:8:9"
																		},
																		"nativeSrc": "2531:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2531:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2513:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2513:17:9"
																},
																"nativeSrc": "2513:53:9",
																"nodeType": "YulFunctionCall",
																"src": "2513:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2500:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2500:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2430:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2470:5:9",
														"nodeType": "YulTypedName",
														"src": "2470:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2480:9:9",
														"nodeType": "YulTypedName",
														"src": "2480:9:9",
														"type": ""
													}
												],
												"src": "2430:142:9"
											},
											{
												"body": {
													"nativeSrc": "2638:66:9",
													"nodeType": "YulBlock",
													"src": "2638:66:9",
													"statements": [
														{
															"nativeSrc": "2648:50:9",
															"nodeType": "YulAssignment",
															"src": "2648:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2692:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2692:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2661:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2661:30:9"
																},
																"nativeSrc": "2661:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2661:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2648:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2648:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2578:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2618:5:9",
														"nodeType": "YulTypedName",
														"src": "2618:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2628:9:9",
														"nodeType": "YulTypedName",
														"src": "2628:9:9",
														"type": ""
													}
												],
												"src": "2578:126:9"
											},
											{
												"body": {
													"nativeSrc": "2785:66:9",
													"nodeType": "YulBlock",
													"src": "2785:66:9",
													"statements": [
														{
															"nativeSrc": "2795:50:9",
															"nodeType": "YulAssignment",
															"src": "2795:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2839:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2839:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2808:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "2808:30:9"
																},
																"nativeSrc": "2808:37:9",
																"nodeType": "YulFunctionCall",
																"src": "2808:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2795:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2795:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$560_to_t_address",
												"nativeSrc": "2710:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2765:5:9",
														"nodeType": "YulTypedName",
														"src": "2765:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2775:9:9",
														"nodeType": "YulTypedName",
														"src": "2775:9:9",
														"type": ""
													}
												],
												"src": "2710:141:9"
											},
											{
												"body": {
													"nativeSrc": "2937:81:9",
													"nodeType": "YulBlock",
													"src": "2937:81:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2954:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2954:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3005:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3005:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$560_to_t_address",
																			"nativeSrc": "2959:45:9",
																			"nodeType": "YulIdentifier",
																			"src": "2959:45:9"
																		},
																		"nativeSrc": "2959:52:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:52:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2947:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2947:6:9"
																},
																"nativeSrc": "2947:65:9",
																"nodeType": "YulFunctionCall",
																"src": "2947:65:9"
															},
															"nativeSrc": "2947:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "2947:65:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$560_to_t_address_fromStack",
												"nativeSrc": "2857:161:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2925:5:9",
														"nodeType": "YulTypedName",
														"src": "2925:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2932:3:9",
														"nodeType": "YulTypedName",
														"src": "2932:3:9",
														"type": ""
													}
												],
												"src": "2857:161:9"
											},
											{
												"body": {
													"nativeSrc": "3137:139:9",
													"nodeType": "YulBlock",
													"src": "3137:139:9",
													"statements": [
														{
															"nativeSrc": "3147:26:9",
															"nodeType": "YulAssignment",
															"src": "3147:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3159:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3170:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3155:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:9"
																},
																"nativeSrc": "3155:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3155:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3147:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3147:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3242:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3242:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3255:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3255:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3266:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3266:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3251:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3251:3:9"
																		},
																		"nativeSrc": "3251:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3251:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$560_to_t_address_fromStack",
																	"nativeSrc": "3183:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "3183:58:9"
																},
																"nativeSrc": "3183:86:9",
																"nodeType": "YulFunctionCall",
																"src": "3183:86:9"
															},
															"nativeSrc": "3183:86:9",
															"nodeType": "YulExpressionStatement",
															"src": "3183:86:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$560__to_t_address__fromStack_reversed",
												"nativeSrc": "3024:252:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3109:9:9",
														"nodeType": "YulTypedName",
														"src": "3109:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3121:6:9",
														"nodeType": "YulTypedName",
														"src": "3121:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3132:4:9",
														"nodeType": "YulTypedName",
														"src": "3132:4:9",
														"type": ""
													}
												],
												"src": "3024:252:9"
											},
											{
												"body": {
													"nativeSrc": "3347:53:9",
													"nodeType": "YulBlock",
													"src": "3347:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3364:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3364:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3387:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3387:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3369:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3369:17:9"
																		},
																		"nativeSrc": "3369:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3369:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3357:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:9"
																},
																"nativeSrc": "3357:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3357:37:9"
															},
															"nativeSrc": "3357:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3357:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3282:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3335:5:9",
														"nodeType": "YulTypedName",
														"src": "3335:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3342:3:9",
														"nodeType": "YulTypedName",
														"src": "3342:3:9",
														"type": ""
													}
												],
												"src": "3282:118:9"
											},
											{
												"body": {
													"nativeSrc": "3504:124:9",
													"nodeType": "YulBlock",
													"src": "3504:124:9",
													"statements": [
														{
															"nativeSrc": "3514:26:9",
															"nodeType": "YulAssignment",
															"src": "3514:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3526:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3526:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3537:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3537:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3522:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3522:3:9"
																},
																"nativeSrc": "3522:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3522:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3514:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3514:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3594:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3594:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3607:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3607:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3618:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3618:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3603:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3603:3:9"
																		},
																		"nativeSrc": "3603:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3603:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3550:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3550:43:9"
																},
																"nativeSrc": "3550:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3550:71:9"
															},
															"nativeSrc": "3550:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3550:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3406:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3476:9:9",
														"nodeType": "YulTypedName",
														"src": "3476:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3488:6:9",
														"nodeType": "YulTypedName",
														"src": "3488:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3499:4:9",
														"nodeType": "YulTypedName",
														"src": "3499:4:9",
														"type": ""
													}
												],
												"src": "3406:222:9"
											},
											{
												"body": {
													"nativeSrc": "3710:66:9",
													"nodeType": "YulBlock",
													"src": "3710:66:9",
													"statements": [
														{
															"nativeSrc": "3720:50:9",
															"nodeType": "YulAssignment",
															"src": "3720:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3764:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3764:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "3733:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3733:30:9"
																},
																"nativeSrc": "3733:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3733:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3720:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3720:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC1155_$443_to_t_address",
												"nativeSrc": "3634:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3690:5:9",
														"nodeType": "YulTypedName",
														"src": "3690:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3700:9:9",
														"nodeType": "YulTypedName",
														"src": "3700:9:9",
														"type": ""
													}
												],
												"src": "3634:142:9"
											},
											{
												"body": {
													"nativeSrc": "3863:82:9",
													"nodeType": "YulBlock",
													"src": "3863:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3880:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3880:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3932:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3932:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC1155_$443_to_t_address",
																			"nativeSrc": "3885:46:9",
																			"nodeType": "YulIdentifier",
																			"src": "3885:46:9"
																		},
																		"nativeSrc": "3885:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3885:53:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3873:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:9"
																},
																"nativeSrc": "3873:66:9",
																"nodeType": "YulFunctionCall",
																"src": "3873:66:9"
															},
															"nativeSrc": "3873:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "3873:66:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC1155_$443_to_t_address_fromStack",
												"nativeSrc": "3782:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3851:5:9",
														"nodeType": "YulTypedName",
														"src": "3851:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3858:3:9",
														"nodeType": "YulTypedName",
														"src": "3858:3:9",
														"type": ""
													}
												],
												"src": "3782:163:9"
											},
											{
												"body": {
													"nativeSrc": "4065:140:9",
													"nodeType": "YulBlock",
													"src": "4065:140:9",
													"statements": [
														{
															"nativeSrc": "4075:26:9",
															"nodeType": "YulAssignment",
															"src": "4075:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4087:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4087:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4098:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4098:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4083:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4083:3:9"
																},
																"nativeSrc": "4083:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4083:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4075:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4075:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4171:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4171:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4184:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4184:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4195:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4195:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4180:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:9"
																		},
																		"nativeSrc": "4180:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC1155_$443_to_t_address_fromStack",
																	"nativeSrc": "4111:59:9",
																	"nodeType": "YulIdentifier",
																	"src": "4111:59:9"
																},
																"nativeSrc": "4111:87:9",
																"nodeType": "YulFunctionCall",
																"src": "4111:87:9"
															},
															"nativeSrc": "4111:87:9",
															"nodeType": "YulExpressionStatement",
															"src": "4111:87:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155_$443__to_t_address__fromStack_reversed",
												"nativeSrc": "3951:254:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4037:9:9",
														"nodeType": "YulTypedName",
														"src": "4037:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4049:6:9",
														"nodeType": "YulTypedName",
														"src": "4049:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4060:4:9",
														"nodeType": "YulTypedName",
														"src": "4060:4:9",
														"type": ""
													}
												],
												"src": "3951:254:9"
											},
											{
												"body": {
													"nativeSrc": "4253:48:9",
													"nodeType": "YulBlock",
													"src": "4253:48:9",
													"statements": [
														{
															"nativeSrc": "4263:32:9",
															"nodeType": "YulAssignment",
															"src": "4263:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4288:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4288:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4281:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4281:6:9"
																		},
																		"nativeSrc": "4281:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4281:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4274:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4274:6:9"
																},
																"nativeSrc": "4274:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4274:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4263:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4263:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4211:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4235:5:9",
														"nodeType": "YulTypedName",
														"src": "4235:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4245:7:9",
														"nodeType": "YulTypedName",
														"src": "4245:7:9",
														"type": ""
													}
												],
												"src": "4211:90:9"
											},
											{
												"body": {
													"nativeSrc": "4366:50:9",
													"nodeType": "YulBlock",
													"src": "4366:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4383:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4383:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4403:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4403:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4388:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "4388:14:9"
																		},
																		"nativeSrc": "4388:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4388:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4376:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4376:6:9"
																},
																"nativeSrc": "4376:34:9",
																"nodeType": "YulFunctionCall",
																"src": "4376:34:9"
															},
															"nativeSrc": "4376:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "4376:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4307:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4354:5:9",
														"nodeType": "YulTypedName",
														"src": "4354:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4361:3:9",
														"nodeType": "YulTypedName",
														"src": "4361:3:9",
														"type": ""
													}
												],
												"src": "4307:109:9"
											},
											{
												"body": {
													"nativeSrc": "4514:118:9",
													"nodeType": "YulBlock",
													"src": "4514:118:9",
													"statements": [
														{
															"nativeSrc": "4524:26:9",
															"nodeType": "YulAssignment",
															"src": "4524:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4536:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4536:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4547:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4532:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4532:3:9"
																},
																"nativeSrc": "4532:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4532:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4524:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4524:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4598:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4598:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4611:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4611:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4622:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4622:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4607:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4607:3:9"
																		},
																		"nativeSrc": "4607:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4607:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4560:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "4560:37:9"
																},
																"nativeSrc": "4560:65:9",
																"nodeType": "YulFunctionCall",
																"src": "4560:65:9"
															},
															"nativeSrc": "4560:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "4560:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4422:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4486:9:9",
														"nodeType": "YulTypedName",
														"src": "4486:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4498:6:9",
														"nodeType": "YulTypedName",
														"src": "4498:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4509:4:9",
														"nodeType": "YulTypedName",
														"src": "4509:4:9",
														"type": ""
													}
												],
												"src": "4422:210:9"
											},
											{
												"body": {
													"nativeSrc": "4727:28:9",
													"nodeType": "YulBlock",
													"src": "4727:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4744:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4744:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4747:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4747:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4737:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4737:6:9"
																},
																"nativeSrc": "4737:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4737:12:9"
															},
															"nativeSrc": "4737:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "4737:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4638:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4638:117:9"
											},
											{
												"body": {
													"nativeSrc": "4850:28:9",
													"nodeType": "YulBlock",
													"src": "4850:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4867:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4867:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4870:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4870:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4860:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4860:6:9"
																},
																"nativeSrc": "4860:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4860:12:9"
															},
															"nativeSrc": "4860:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "4860:12:9"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "4761:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4761:117:9"
											},
											{
												"body": {
													"nativeSrc": "4973:28:9",
													"nodeType": "YulBlock",
													"src": "4973:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4990:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4990:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4993:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4993:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4983:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:9"
																},
																"nativeSrc": "4983:12:9",
																"nodeType": "YulFunctionCall",
																"src": "4983:12:9"
															},
															"nativeSrc": "4983:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "4983:12:9"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "4884:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "4884:117:9"
											},
											{
												"body": {
													"nativeSrc": "5094:478:9",
													"nodeType": "YulBlock",
													"src": "5094:478:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5143:83:9",
																"nodeType": "YulBlock",
																"src": "5143:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5145:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5145:77:9"
																			},
																			"nativeSrc": "5145:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5145:79:9"
																		},
																		"nativeSrc": "5145:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5145:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5122:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5122:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5130:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5130:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5118:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5118:3:9"
																				},
																				"nativeSrc": "5118:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5118:17:9"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5137:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5137:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5114:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5114:3:9"
																		},
																		"nativeSrc": "5114:27:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5114:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5107:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5107:6:9"
																},
																"nativeSrc": "5107:35:9",
																"nodeType": "YulFunctionCall",
																"src": "5107:35:9"
															},
															"nativeSrc": "5104:122:9",
															"nodeType": "YulIf",
															"src": "5104:122:9"
														},
														{
															"nativeSrc": "5235:30:9",
															"nodeType": "YulAssignment",
															"src": "5235:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5258:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5258:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5245:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "5245:12:9"
																},
																"nativeSrc": "5245:20:9",
																"nodeType": "YulFunctionCall",
																"src": "5245:20:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5235:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5308:83:9",
																"nodeType": "YulBlock",
																"src": "5308:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5310:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5310:77:9"
																			},
																			"nativeSrc": "5310:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5310:79:9"
																		},
																		"nativeSrc": "5310:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5310:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5280:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5280:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5288:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5288:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5277:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5277:2:9"
																},
																"nativeSrc": "5277:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5277:30:9"
															},
															"nativeSrc": "5274:117:9",
															"nodeType": "YulIf",
															"src": "5274:117:9"
														},
														{
															"nativeSrc": "5400:29:9",
															"nodeType": "YulAssignment",
															"src": "5400:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5416:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5416:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5424:4:9",
																		"nodeType": "YulLiteral",
																		"src": "5424:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5412:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5412:3:9"
																},
																"nativeSrc": "5412:17:9",
																"nodeType": "YulFunctionCall",
																"src": "5412:17:9"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5400:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5400:8:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5483:83:9",
																"nodeType": "YulBlock",
																"src": "5483:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5485:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5485:77:9"
																			},
																			"nativeSrc": "5485:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5485:79:9"
																		},
																		"nativeSrc": "5485:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5485:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5448:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "5448:8:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5462:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5462:6:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5470:4:9",
																						"nodeType": "YulLiteral",
																						"src": "5470:4:9",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5458:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5458:3:9"
																				},
																				"nativeSrc": "5458:17:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5458:17:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5444:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5444:3:9"
																		},
																		"nativeSrc": "5444:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5444:32:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5478:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5478:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5441:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5441:2:9"
																},
																"nativeSrc": "5441:41:9",
																"nodeType": "YulFunctionCall",
																"src": "5441:41:9"
															},
															"nativeSrc": "5438:128:9",
															"nodeType": "YulIf",
															"src": "5438:128:9"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nativeSrc": "5020:552:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5061:6:9",
														"nodeType": "YulTypedName",
														"src": "5061:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5069:3:9",
														"nodeType": "YulTypedName",
														"src": "5069:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5077:8:9",
														"nodeType": "YulTypedName",
														"src": "5077:8:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5087:6:9",
														"nodeType": "YulTypedName",
														"src": "5087:6:9",
														"type": ""
													}
												],
												"src": "5020:552:9"
											},
											{
												"body": {
													"nativeSrc": "5697:698:9",
													"nodeType": "YulBlock",
													"src": "5697:698:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5743:83:9",
																"nodeType": "YulBlock",
																"src": "5743:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5745:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5745:77:9"
																			},
																			"nativeSrc": "5745:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5745:79:9"
																		},
																		"nativeSrc": "5745:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5745:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5718:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5718:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5727:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5727:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5714:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5714:3:9"
																		},
																		"nativeSrc": "5714:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5714:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5739:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5739:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5710:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:9"
																},
																"nativeSrc": "5710:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5710:32:9"
															},
															"nativeSrc": "5707:119:9",
															"nodeType": "YulIf",
															"src": "5707:119:9"
														},
														{
															"nativeSrc": "5836:117:9",
															"nodeType": "YulBlock",
															"src": "5836:117:9",
															"statements": [
																{
																	"nativeSrc": "5851:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5851:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5865:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5855:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5855:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5880:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5880:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5915:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5915:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5926:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5926:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5911:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5911:3:9"
																				},
																				"nativeSrc": "5911:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5911:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5935:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5935:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5890:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5890:20:9"
																		},
																		"nativeSrc": "5890:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5890:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5880:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5880:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5963:118:9",
															"nodeType": "YulBlock",
															"src": "5963:118:9",
															"statements": [
																{
																	"nativeSrc": "5978:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5978:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5992:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5992:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5982:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5982:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6008:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6008:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6043:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6043:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6054:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6054:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6039:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6039:3:9"
																				},
																				"nativeSrc": "6039:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6039:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6063:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6063:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6018:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6018:20:9"
																		},
																		"nativeSrc": "6018:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6018:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6008:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6008:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6091:297:9",
															"nodeType": "YulBlock",
															"src": "6091:297:9",
															"statements": [
																{
																	"nativeSrc": "6106:46:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6106:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6137:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6137:9:9"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6148:2:9",
																						"nodeType": "YulLiteral",
																						"src": "6148:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6133:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6133:3:9"
																				},
																				"nativeSrc": "6133:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6133:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6120:12:9",
																			"nodeType": "YulIdentifier",
																			"src": "6120:12:9"
																		},
																		"nativeSrc": "6120:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6120:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6110:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6110:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6199:83:9",
																		"nodeType": "YulBlock",
																		"src": "6199:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6201:77:9",
																						"nodeType": "YulIdentifier",
																						"src": "6201:77:9"
																					},
																					"nativeSrc": "6201:79:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6201:79:9"
																				},
																				"nativeSrc": "6201:79:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6201:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6171:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6171:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6179:18:9",
																				"nodeType": "YulLiteral",
																				"src": "6179:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6168:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6168:2:9"
																		},
																		"nativeSrc": "6168:30:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6168:30:9"
																	},
																	"nativeSrc": "6165:117:9",
																	"nodeType": "YulIf",
																	"src": "6165:117:9"
																},
																{
																	"nativeSrc": "6296:82:9",
																	"nodeType": "YulAssignment",
																	"src": "6296:82:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6350:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6350:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6361:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6361:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6346:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6346:3:9"
																				},
																				"nativeSrc": "6346:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6346:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6370:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6370:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nativeSrc": "6314:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "6314:31:9"
																		},
																		"nativeSrc": "6314:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6314:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6296:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6296:6:9"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "6304:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6304:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr",
												"nativeSrc": "5578:817:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5643:9:9",
														"nodeType": "YulTypedName",
														"src": "5643:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5654:7:9",
														"nodeType": "YulTypedName",
														"src": "5654:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5666:6:9",
														"nodeType": "YulTypedName",
														"src": "5666:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5674:6:9",
														"nodeType": "YulTypedName",
														"src": "5674:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5682:6:9",
														"nodeType": "YulTypedName",
														"src": "5682:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5690:6:9",
														"nodeType": "YulTypedName",
														"src": "5690:6:9",
														"type": ""
													}
												],
												"src": "5578:817:9"
											},
											{
												"body": {
													"nativeSrc": "6501:519:9",
													"nodeType": "YulBlock",
													"src": "6501:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6547:83:9",
																"nodeType": "YulBlock",
																"src": "6547:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6549:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6549:77:9"
																			},
																			"nativeSrc": "6549:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6549:79:9"
																		},
																		"nativeSrc": "6549:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6549:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6522:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6522:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6531:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6531:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6518:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6518:3:9"
																		},
																		"nativeSrc": "6518:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6518:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6543:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6543:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6514:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6514:3:9"
																},
																"nativeSrc": "6514:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6514:32:9"
															},
															"nativeSrc": "6511:119:9",
															"nodeType": "YulIf",
															"src": "6511:119:9"
														},
														{
															"nativeSrc": "6640:117:9",
															"nodeType": "YulBlock",
															"src": "6640:117:9",
															"statements": [
																{
																	"nativeSrc": "6655:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6655:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6669:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6659:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6659:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6684:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6684:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6719:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6719:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6730:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6730:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6715:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6715:3:9"
																				},
																				"nativeSrc": "6715:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6715:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6739:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6739:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6694:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6694:20:9"
																		},
																		"nativeSrc": "6694:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6694:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6684:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6684:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6767:118:9",
															"nodeType": "YulBlock",
															"src": "6767:118:9",
															"statements": [
																{
																	"nativeSrc": "6782:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6782:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6796:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6796:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6786:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6786:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6812:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6812:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6847:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6847:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6858:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6858:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6843:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6843:3:9"
																				},
																				"nativeSrc": "6843:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6843:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6867:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6867:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6822:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6822:20:9"
																		},
																		"nativeSrc": "6822:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6822:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6812:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6812:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6895:118:9",
															"nodeType": "YulBlock",
															"src": "6895:118:9",
															"statements": [
																{
																	"nativeSrc": "6910:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6910:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6924:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6924:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6914:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6914:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6940:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6940:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6975:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6975:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6986:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6986:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6971:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6971:3:9"
																				},
																				"nativeSrc": "6971:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6971:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6995:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6995:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6950:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6950:20:9"
																		},
																		"nativeSrc": "6950:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6950:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6940:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6940:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "6401:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6455:9:9",
														"nodeType": "YulTypedName",
														"src": "6455:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6466:7:9",
														"nodeType": "YulTypedName",
														"src": "6466:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6478:6:9",
														"nodeType": "YulTypedName",
														"src": "6478:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6486:6:9",
														"nodeType": "YulTypedName",
														"src": "6486:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6494:6:9",
														"nodeType": "YulTypedName",
														"src": "6494:6:9",
														"type": ""
													}
												],
												"src": "6401:619:9"
											},
											{
												"body": {
													"nativeSrc": "7122:73:9",
													"nodeType": "YulBlock",
													"src": "7122:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7139:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7139:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7144:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7144:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7132:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7132:6:9"
																},
																"nativeSrc": "7132:19:9",
																"nodeType": "YulFunctionCall",
																"src": "7132:19:9"
															},
															"nativeSrc": "7132:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "7132:19:9"
														},
														{
															"nativeSrc": "7160:29:9",
															"nodeType": "YulAssignment",
															"src": "7160:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7179:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7179:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7184:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7184:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7175:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7175:3:9"
																},
																"nativeSrc": "7175:14:9",
																"nodeType": "YulFunctionCall",
																"src": "7175:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7160:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "7160:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7026:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7094:3:9",
														"nodeType": "YulTypedName",
														"src": "7094:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7099:6:9",
														"nodeType": "YulTypedName",
														"src": "7099:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7110:11:9",
														"nodeType": "YulTypedName",
														"src": "7110:11:9",
														"type": ""
													}
												],
												"src": "7026:169:9"
											},
											{
												"body": {
													"nativeSrc": "7307:53:9",
													"nodeType": "YulBlock",
													"src": "7307:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7329:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7329:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7337:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7337:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7325:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7325:3:9"
																		},
																		"nativeSrc": "7325:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7325:14:9"
																	},
																	{
																		"hexValue": "7a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "7341:11:9",
																		"nodeType": "YulLiteral",
																		"src": "7341:11:9",
																		"type": "",
																		"value": "zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:9"
																},
																"nativeSrc": "7318:35:9",
																"nodeType": "YulFunctionCall",
																"src": "7318:35:9"
															},
															"nativeSrc": "7318:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "7318:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
												"nativeSrc": "7201:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7299:6:9",
														"nodeType": "YulTypedName",
														"src": "7299:6:9",
														"type": ""
													}
												],
												"src": "7201:159:9"
											},
											{
												"body": {
													"nativeSrc": "7512:219:9",
													"nodeType": "YulBlock",
													"src": "7512:219:9",
													"statements": [
														{
															"nativeSrc": "7522:73:9",
															"nodeType": "YulAssignment",
															"src": "7522:73:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7588:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7588:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7593:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7593:1:9",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7529:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "7529:58:9"
																},
																"nativeSrc": "7529:66:9",
																"nodeType": "YulFunctionCall",
																"src": "7529:66:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7522:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7522:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7693:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7693:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																	"nativeSrc": "7604:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "7604:88:9"
																},
																"nativeSrc": "7604:93:9",
																"nodeType": "YulFunctionCall",
																"src": "7604:93:9"
															},
															"nativeSrc": "7604:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "7604:93:9"
														},
														{
															"nativeSrc": "7706:19:9",
															"nodeType": "YulAssignment",
															"src": "7706:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7717:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7717:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7722:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7722:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7713:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7713:3:9"
																},
																"nativeSrc": "7713:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7713:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7706:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7706:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7366:365:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7500:3:9",
														"nodeType": "YulTypedName",
														"src": "7500:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7508:3:9",
														"nodeType": "YulTypedName",
														"src": "7508:3:9",
														"type": ""
													}
												],
												"src": "7366:365:9"
											},
											{
												"body": {
													"nativeSrc": "7908:248:9",
													"nodeType": "YulBlock",
													"src": "7908:248:9",
													"statements": [
														{
															"nativeSrc": "7918:26:9",
															"nodeType": "YulAssignment",
															"src": "7918:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7930:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7930:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7941:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7941:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7926:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7926:3:9"
																},
																"nativeSrc": "7926:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7926:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7918:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7918:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7965:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7965:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7976:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7976:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7961:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7961:3:9"
																		},
																		"nativeSrc": "7961:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7961:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7984:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7984:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7990:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7990:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7980:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7980:3:9"
																		},
																		"nativeSrc": "7980:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7980:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7954:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7954:6:9"
																},
																"nativeSrc": "7954:47:9",
																"nodeType": "YulFunctionCall",
																"src": "7954:47:9"
															},
															"nativeSrc": "7954:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "7954:47:9"
														},
														{
															"nativeSrc": "8010:139:9",
															"nodeType": "YulAssignment",
															"src": "8010:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8144:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8144:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8018:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8018:124:9"
																},
																"nativeSrc": "8018:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8018:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8010:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8010:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7737:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7888:9:9",
														"nodeType": "YulTypedName",
														"src": "7888:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7903:4:9",
														"nodeType": "YulTypedName",
														"src": "7903:4:9",
														"type": ""
													}
												],
												"src": "7737:419:9"
											},
											{
												"body": {
													"nativeSrc": "8268:53:9",
													"nodeType": "YulBlock",
													"src": "8268:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8290:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8290:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8298:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8298:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8286:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:9"
																		},
																		"nativeSrc": "8286:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8286:14:9"
																	},
																	{
																		"hexValue": "7a65726f2075736572",
																		"kind": "string",
																		"nativeSrc": "8302:11:9",
																		"nodeType": "YulLiteral",
																		"src": "8302:11:9",
																		"type": "",
																		"value": "zero user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8279:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8279:6:9"
																},
																"nativeSrc": "8279:35:9",
																"nodeType": "YulFunctionCall",
																"src": "8279:35:9"
															},
															"nativeSrc": "8279:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "8279:35:9"
														}
													]
												},
												"name": "store_literal_in_memory_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa",
												"nativeSrc": "8162:159:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8260:6:9",
														"nodeType": "YulTypedName",
														"src": "8260:6:9",
														"type": ""
													}
												],
												"src": "8162:159:9"
											},
											{
												"body": {
													"nativeSrc": "8473:219:9",
													"nodeType": "YulBlock",
													"src": "8473:219:9",
													"statements": [
														{
															"nativeSrc": "8483:73:9",
															"nodeType": "YulAssignment",
															"src": "8483:73:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8549:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8549:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8554:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8554:1:9",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8490:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8490:58:9"
																},
																"nativeSrc": "8490:66:9",
																"nodeType": "YulFunctionCall",
																"src": "8490:66:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8483:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8483:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8654:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8654:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa",
																	"nativeSrc": "8565:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8565:88:9"
																},
																"nativeSrc": "8565:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8565:93:9"
															},
															"nativeSrc": "8565:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8565:93:9"
														},
														{
															"nativeSrc": "8667:19:9",
															"nodeType": "YulAssignment",
															"src": "8667:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8678:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8678:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8683:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8683:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8674:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8674:3:9"
																},
																"nativeSrc": "8674:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8674:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8667:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8667:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8327:365:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8461:3:9",
														"nodeType": "YulTypedName",
														"src": "8461:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8469:3:9",
														"nodeType": "YulTypedName",
														"src": "8469:3:9",
														"type": ""
													}
												],
												"src": "8327:365:9"
											},
											{
												"body": {
													"nativeSrc": "8869:248:9",
													"nodeType": "YulBlock",
													"src": "8869:248:9",
													"statements": [
														{
															"nativeSrc": "8879:26:9",
															"nodeType": "YulAssignment",
															"src": "8879:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8891:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8891:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8902:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8887:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8887:3:9"
																},
																"nativeSrc": "8887:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8887:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8879:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8879:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8926:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8926:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8937:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8937:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8922:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8922:3:9"
																		},
																		"nativeSrc": "8922:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8922:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8945:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8945:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8951:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8951:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8941:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8941:3:9"
																		},
																		"nativeSrc": "8941:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8941:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8915:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8915:6:9"
																},
																"nativeSrc": "8915:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8915:47:9"
															},
															"nativeSrc": "8915:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8915:47:9"
														},
														{
															"nativeSrc": "8971:139:9",
															"nodeType": "YulAssignment",
															"src": "8971:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9105:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9105:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8979:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8979:124:9"
																},
																"nativeSrc": "8979:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8979:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8971:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8971:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8698:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8849:9:9",
														"nodeType": "YulTypedName",
														"src": "8849:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8864:4:9",
														"nodeType": "YulTypedName",
														"src": "8864:4:9",
														"type": ""
													}
												],
												"src": "8698:419:9"
											},
											{
												"body": {
													"nativeSrc": "9229:59:9",
													"nodeType": "YulBlock",
													"src": "9229:59:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9251:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9251:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9259:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9259:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9247:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9247:3:9"
																		},
																		"nativeSrc": "9247:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9247:14:9"
																	},
																	{
																		"hexValue": "616c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "9263:17:9",
																		"nodeType": "YulLiteral",
																		"src": "9263:17:9",
																		"type": "",
																		"value": "already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9240:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9240:6:9"
																},
																"nativeSrc": "9240:41:9",
																"nodeType": "YulFunctionCall",
																"src": "9240:41:9"
															},
															"nativeSrc": "9240:41:9",
															"nodeType": "YulExpressionStatement",
															"src": "9240:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
												"nativeSrc": "9123:165:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9221:6:9",
														"nodeType": "YulTypedName",
														"src": "9221:6:9",
														"type": ""
													}
												],
												"src": "9123:165:9"
											},
											{
												"body": {
													"nativeSrc": "9440:220:9",
													"nodeType": "YulBlock",
													"src": "9440:220:9",
													"statements": [
														{
															"nativeSrc": "9450:74:9",
															"nodeType": "YulAssignment",
															"src": "9450:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9516:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9516:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9521:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9521:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9457:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9457:58:9"
																},
																"nativeSrc": "9457:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9457:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9450:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9450:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9622:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9622:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
																	"nativeSrc": "9533:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9533:88:9"
																},
																"nativeSrc": "9533:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9533:93:9"
															},
															"nativeSrc": "9533:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9533:93:9"
														},
														{
															"nativeSrc": "9635:19:9",
															"nodeType": "YulAssignment",
															"src": "9635:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9646:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9646:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9651:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9651:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9642:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9642:3:9"
																},
																"nativeSrc": "9642:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9642:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9635:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9294:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9428:3:9",
														"nodeType": "YulTypedName",
														"src": "9428:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9436:3:9",
														"nodeType": "YulTypedName",
														"src": "9436:3:9",
														"type": ""
													}
												],
												"src": "9294:366:9"
											},
											{
												"body": {
													"nativeSrc": "9837:248:9",
													"nodeType": "YulBlock",
													"src": "9837:248:9",
													"statements": [
														{
															"nativeSrc": "9847:26:9",
															"nodeType": "YulAssignment",
															"src": "9847:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9859:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9859:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9870:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9870:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9855:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9855:3:9"
																},
																"nativeSrc": "9855:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9855:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9847:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9847:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9894:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9894:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9905:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9905:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9890:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9890:3:9"
																		},
																		"nativeSrc": "9890:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9890:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9913:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9913:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9919:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9919:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9909:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9909:3:9"
																		},
																		"nativeSrc": "9909:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9909:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9883:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9883:6:9"
																},
																"nativeSrc": "9883:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9883:47:9"
															},
															"nativeSrc": "9883:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9883:47:9"
														},
														{
															"nativeSrc": "9939:139:9",
															"nodeType": "YulAssignment",
															"src": "9939:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10073:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10073:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9947:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9947:124:9"
																},
																"nativeSrc": "9947:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9947:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9939:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9939:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9666:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9817:9:9",
														"nodeType": "YulTypedName",
														"src": "9817:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9832:4:9",
														"nodeType": "YulTypedName",
														"src": "9832:4:9",
														"type": ""
													}
												],
												"src": "9666:419:9"
											},
											{
												"body": {
													"nativeSrc": "10133:52:9",
													"nodeType": "YulBlock",
													"src": "10133:52:9",
													"statements": [
														{
															"nativeSrc": "10143:35:9",
															"nodeType": "YulAssignment",
															"src": "10143:35:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10168:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10168:2:9",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10172:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10172:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "10164:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10164:3:9"
																},
																"nativeSrc": "10164:14:9",
																"nodeType": "YulFunctionCall",
																"src": "10164:14:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10143:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "10143:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "10091:94:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10114:5:9",
														"nodeType": "YulTypedName",
														"src": "10114:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10124:8:9",
														"nodeType": "YulTypedName",
														"src": "10124:8:9",
														"type": ""
													}
												],
												"src": "10091:94:9"
											},
											{
												"body": {
													"nativeSrc": "10238:47:9",
													"nodeType": "YulBlock",
													"src": "10238:47:9",
													"statements": [
														{
															"nativeSrc": "10248:31:9",
															"nodeType": "YulAssignment",
															"src": "10248:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10273:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10273:5:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "10259:13:9",
																	"nodeType": "YulIdentifier",
																	"src": "10259:13:9"
																},
																"nativeSrc": "10259:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10259:20:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "10248:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10248:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "10191:94:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10220:5:9",
														"nodeType": "YulTypedName",
														"src": "10220:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "10230:7:9",
														"nodeType": "YulTypedName",
														"src": "10230:7:9",
														"type": ""
													}
												],
												"src": "10191:94:9"
											},
											{
												"body": {
													"nativeSrc": "10338:53:9",
													"nodeType": "YulBlock",
													"src": "10338:53:9",
													"statements": [
														{
															"nativeSrc": "10348:37:9",
															"nodeType": "YulAssignment",
															"src": "10348:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10379:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "10379:5:9"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "10359:19:9",
																	"nodeType": "YulIdentifier",
																	"src": "10359:19:9"
																},
																"nativeSrc": "10359:26:9",
																"nodeType": "YulFunctionCall",
																"src": "10359:26:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "10348:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10348:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "10291:100:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10320:5:9",
														"nodeType": "YulTypedName",
														"src": "10320:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "10330:7:9",
														"nodeType": "YulTypedName",
														"src": "10330:7:9",
														"type": ""
													}
												],
												"src": "10291:100:9"
											},
											{
												"body": {
													"nativeSrc": "10480:74:9",
													"nodeType": "YulBlock",
													"src": "10480:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10497:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10497:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10540:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "10540:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "10522:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "10522:17:9"
																				},
																				"nativeSrc": "10522:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10522:24:9"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "10502:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "10502:19:9"
																		},
																		"nativeSrc": "10502:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10502:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10490:6:9"
																},
																"nativeSrc": "10490:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10490:58:9"
															},
															"nativeSrc": "10490:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10490:58:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "10397:157:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10468:5:9",
														"nodeType": "YulTypedName",
														"src": "10468:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10475:3:9",
														"nodeType": "YulTypedName",
														"src": "10475:3:9",
														"type": ""
													}
												],
												"src": "10397:157:9"
											},
											{
												"body": {
													"nativeSrc": "10607:32:9",
													"nodeType": "YulBlock",
													"src": "10607:32:9",
													"statements": [
														{
															"nativeSrc": "10617:16:9",
															"nodeType": "YulAssignment",
															"src": "10617:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "10628:5:9",
																"nodeType": "YulIdentifier",
																"src": "10628:5:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "10617:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "10617:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "10560:79:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10589:5:9",
														"nodeType": "YulTypedName",
														"src": "10589:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "10599:7:9",
														"nodeType": "YulTypedName",
														"src": "10599:7:9",
														"type": ""
													}
												],
												"src": "10560:79:9"
											},
											{
												"body": {
													"nativeSrc": "10728:74:9",
													"nodeType": "YulBlock",
													"src": "10728:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10745:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10745:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10788:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "10788:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "10770:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "10770:17:9"
																				},
																				"nativeSrc": "10770:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "10770:24:9"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "10750:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "10750:19:9"
																		},
																		"nativeSrc": "10750:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10750:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10738:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10738:6:9"
																},
																"nativeSrc": "10738:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10738:58:9"
															},
															"nativeSrc": "10738:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10738:58:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "10645:157:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10716:5:9",
														"nodeType": "YulTypedName",
														"src": "10716:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10723:3:9",
														"nodeType": "YulTypedName",
														"src": "10723:3:9",
														"type": ""
													}
												],
												"src": "10645:157:9"
											},
											{
												"body": {
													"nativeSrc": "10980:366:9",
													"nodeType": "YulBlock",
													"src": "10980:366:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11053:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11053:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11062:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11062:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "10991:61:9",
																	"nodeType": "YulIdentifier",
																	"src": "10991:61:9"
																},
																"nativeSrc": "10991:75:9",
																"nodeType": "YulFunctionCall",
																"src": "10991:75:9"
															},
															"nativeSrc": "10991:75:9",
															"nodeType": "YulExpressionStatement",
															"src": "10991:75:9"
														},
														{
															"nativeSrc": "11075:19:9",
															"nodeType": "YulAssignment",
															"src": "11075:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11086:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11086:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11091:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11091:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11082:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11082:3:9"
																},
																"nativeSrc": "11082:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11082:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11075:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11075:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11166:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11166:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11175:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11175:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "11104:61:9",
																	"nodeType": "YulIdentifier",
																	"src": "11104:61:9"
																},
																"nativeSrc": "11104:75:9",
																"nodeType": "YulFunctionCall",
																"src": "11104:75:9"
															},
															"nativeSrc": "11104:75:9",
															"nodeType": "YulExpressionStatement",
															"src": "11104:75:9"
														},
														{
															"nativeSrc": "11188:19:9",
															"nodeType": "YulAssignment",
															"src": "11188:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11199:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11199:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11204:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11204:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11195:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11195:3:9"
																},
																"nativeSrc": "11195:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11195:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11188:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11188:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11279:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11279:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11288:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11288:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "11217:61:9",
																	"nodeType": "YulIdentifier",
																	"src": "11217:61:9"
																},
																"nativeSrc": "11217:75:9",
																"nodeType": "YulFunctionCall",
																"src": "11217:75:9"
															},
															"nativeSrc": "11217:75:9",
															"nodeType": "YulExpressionStatement",
															"src": "11217:75:9"
														},
														{
															"nativeSrc": "11301:19:9",
															"nodeType": "YulAssignment",
															"src": "11301:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11312:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11312:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11317:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11317:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11308:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11308:3:9"
																},
																"nativeSrc": "11308:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11308:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11301:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11301:3:9"
																}
															]
														},
														{
															"nativeSrc": "11330:10:9",
															"nodeType": "YulAssignment",
															"src": "11330:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "11337:3:9",
																"nodeType": "YulIdentifier",
																"src": "11337:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11330:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11330:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10808:538:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10943:3:9",
														"nodeType": "YulTypedName",
														"src": "10943:3:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10949:6:9",
														"nodeType": "YulTypedName",
														"src": "10949:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10957:6:9",
														"nodeType": "YulTypedName",
														"src": "10957:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10965:6:9",
														"nodeType": "YulTypedName",
														"src": "10965:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10976:3:9",
														"nodeType": "YulTypedName",
														"src": "10976:3:9",
														"type": ""
													}
												],
												"src": "10808:538:9"
											},
											{
												"body": {
													"nativeSrc": "11458:61:9",
													"nodeType": "YulBlock",
													"src": "11458:61:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11480:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "11480:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11488:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11488:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11476:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:9"
																		},
																		"nativeSrc": "11476:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11476:14:9"
																	},
																	{
																		"hexValue": "696e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nativeSrc": "11492:19:9",
																		"nodeType": "YulLiteral",
																		"src": "11492:19:9",
																		"type": "",
																		"value": "invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11469:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11469:6:9"
																},
																"nativeSrc": "11469:43:9",
																"nodeType": "YulFunctionCall",
																"src": "11469:43:9"
															},
															"nativeSrc": "11469:43:9",
															"nodeType": "YulExpressionStatement",
															"src": "11469:43:9"
														}
													]
												},
												"name": "store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a",
												"nativeSrc": "11352:167:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11450:6:9",
														"nodeType": "YulTypedName",
														"src": "11450:6:9",
														"type": ""
													}
												],
												"src": "11352:167:9"
											},
											{
												"body": {
													"nativeSrc": "11671:220:9",
													"nodeType": "YulBlock",
													"src": "11671:220:9",
													"statements": [
														{
															"nativeSrc": "11681:74:9",
															"nodeType": "YulAssignment",
															"src": "11681:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11747:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11747:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11752:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11752:2:9",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11688:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "11688:58:9"
																},
																"nativeSrc": "11688:67:9",
																"nodeType": "YulFunctionCall",
																"src": "11688:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11681:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11853:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11853:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a",
																	"nativeSrc": "11764:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "11764:88:9"
																},
																"nativeSrc": "11764:93:9",
																"nodeType": "YulFunctionCall",
																"src": "11764:93:9"
															},
															"nativeSrc": "11764:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "11764:93:9"
														},
														{
															"nativeSrc": "11866:19:9",
															"nodeType": "YulAssignment",
															"src": "11866:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11877:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "11877:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11882:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11882:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11873:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11873:3:9"
																},
																"nativeSrc": "11873:12:9",
																"nodeType": "YulFunctionCall",
																"src": "11873:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11866:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11866:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11525:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11659:3:9",
														"nodeType": "YulTypedName",
														"src": "11659:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11667:3:9",
														"nodeType": "YulTypedName",
														"src": "11667:3:9",
														"type": ""
													}
												],
												"src": "11525:366:9"
											},
											{
												"body": {
													"nativeSrc": "12068:248:9",
													"nodeType": "YulBlock",
													"src": "12068:248:9",
													"statements": [
														{
															"nativeSrc": "12078:26:9",
															"nodeType": "YulAssignment",
															"src": "12078:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12090:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12090:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12101:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12101:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12086:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12086:3:9"
																},
																"nativeSrc": "12086:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12086:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12078:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12078:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12125:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12125:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12136:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12136:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12121:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12121:3:9"
																		},
																		"nativeSrc": "12121:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12121:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12144:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "12144:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12150:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12150:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12140:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12140:3:9"
																		},
																		"nativeSrc": "12140:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12140:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12114:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12114:6:9"
																},
																"nativeSrc": "12114:47:9",
																"nodeType": "YulFunctionCall",
																"src": "12114:47:9"
															},
															"nativeSrc": "12114:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "12114:47:9"
														},
														{
															"nativeSrc": "12170:139:9",
															"nodeType": "YulAssignment",
															"src": "12170:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12304:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "12304:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12178:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "12178:124:9"
																},
																"nativeSrc": "12178:131:9",
																"nodeType": "YulFunctionCall",
																"src": "12178:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12170:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12170:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11897:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12048:9:9",
														"nodeType": "YulTypedName",
														"src": "12048:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12063:4:9",
														"nodeType": "YulTypedName",
														"src": "12063:4:9",
														"type": ""
													}
												],
												"src": "11897:419:9"
											},
											{
												"body": {
													"nativeSrc": "12448:206:9",
													"nodeType": "YulBlock",
													"src": "12448:206:9",
													"statements": [
														{
															"nativeSrc": "12458:26:9",
															"nodeType": "YulAssignment",
															"src": "12458:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12470:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "12470:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12481:2:9",
																		"nodeType": "YulLiteral",
																		"src": "12481:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12466:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12466:3:9"
																},
																"nativeSrc": "12466:18:9",
																"nodeType": "YulFunctionCall",
																"src": "12466:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12458:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "12458:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12538:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12538:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12551:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12551:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12562:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12562:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12547:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12547:3:9"
																		},
																		"nativeSrc": "12547:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12547:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12494:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12494:43:9"
																},
																"nativeSrc": "12494:71:9",
																"nodeType": "YulFunctionCall",
																"src": "12494:71:9"
															},
															"nativeSrc": "12494:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "12494:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12619:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "12619:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12632:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "12632:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12643:2:9",
																				"nodeType": "YulLiteral",
																				"src": "12643:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12628:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12628:3:9"
																		},
																		"nativeSrc": "12628:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12628:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12575:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "12575:43:9"
																},
																"nativeSrc": "12575:72:9",
																"nodeType": "YulFunctionCall",
																"src": "12575:72:9"
															},
															"nativeSrc": "12575:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "12575:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12322:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12412:9:9",
														"nodeType": "YulTypedName",
														"src": "12412:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12424:6:9",
														"nodeType": "YulTypedName",
														"src": "12424:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12432:6:9",
														"nodeType": "YulTypedName",
														"src": "12432:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12443:4:9",
														"nodeType": "YulTypedName",
														"src": "12443:4:9",
														"type": ""
													}
												],
												"src": "12322:332:9"
											},
											{
												"body": {
													"nativeSrc": "12766:60:9",
													"nodeType": "YulBlock",
													"src": "12766:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12788:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "12788:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12796:1:9",
																				"nodeType": "YulLiteral",
																				"src": "12796:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12784:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "12784:3:9"
																		},
																		"nativeSrc": "12784:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "12784:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "12800:18:9",
																		"nodeType": "YulLiteral",
																		"src": "12800:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12777:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "12777:6:9"
																},
																"nativeSrc": "12777:42:9",
																"nodeType": "YulFunctionCall",
																"src": "12777:42:9"
															},
															"nativeSrc": "12777:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "12777:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "12660:166:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12758:6:9",
														"nodeType": "YulTypedName",
														"src": "12758:6:9",
														"type": ""
													}
												],
												"src": "12660:166:9"
											},
											{
												"body": {
													"nativeSrc": "12978:220:9",
													"nodeType": "YulBlock",
													"src": "12978:220:9",
													"statements": [
														{
															"nativeSrc": "12988:74:9",
															"nodeType": "YulAssignment",
															"src": "12988:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13054:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13054:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13059:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13059:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12995:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "12995:58:9"
																},
																"nativeSrc": "12995:67:9",
																"nodeType": "YulFunctionCall",
																"src": "12995:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12988:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "12988:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13160:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13160:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "13071:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "13071:88:9"
																},
																"nativeSrc": "13071:93:9",
																"nodeType": "YulFunctionCall",
																"src": "13071:93:9"
															},
															"nativeSrc": "13071:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "13071:93:9"
														},
														{
															"nativeSrc": "13173:19:9",
															"nodeType": "YulAssignment",
															"src": "13173:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13184:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "13184:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13180:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13180:3:9"
																},
																"nativeSrc": "13180:12:9",
																"nodeType": "YulFunctionCall",
																"src": "13180:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13173:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13173:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12832:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12966:3:9",
														"nodeType": "YulTypedName",
														"src": "12966:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12974:3:9",
														"nodeType": "YulTypedName",
														"src": "12974:3:9",
														"type": ""
													}
												],
												"src": "12832:366:9"
											},
											{
												"body": {
													"nativeSrc": "13375:248:9",
													"nodeType": "YulBlock",
													"src": "13375:248:9",
													"statements": [
														{
															"nativeSrc": "13385:26:9",
															"nodeType": "YulAssignment",
															"src": "13385:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13397:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "13397:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13408:2:9",
																		"nodeType": "YulLiteral",
																		"src": "13408:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13393:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13393:3:9"
																},
																"nativeSrc": "13393:18:9",
																"nodeType": "YulFunctionCall",
																"src": "13393:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13385:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13385:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13432:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13432:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13443:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13443:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13428:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13428:3:9"
																		},
																		"nativeSrc": "13428:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13428:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13451:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "13451:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13457:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "13457:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13447:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13447:3:9"
																		},
																		"nativeSrc": "13447:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13447:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13421:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13421:6:9"
																},
																"nativeSrc": "13421:47:9",
																"nodeType": "YulFunctionCall",
																"src": "13421:47:9"
															},
															"nativeSrc": "13421:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "13421:47:9"
														},
														{
															"nativeSrc": "13477:139:9",
															"nodeType": "YulAssignment",
															"src": "13477:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13611:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "13611:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13485:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "13485:124:9"
																},
																"nativeSrc": "13485:131:9",
																"nodeType": "YulFunctionCall",
																"src": "13485:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13477:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "13477:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13204:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13355:9:9",
														"nodeType": "YulTypedName",
														"src": "13355:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13370:4:9",
														"nodeType": "YulTypedName",
														"src": "13370:4:9",
														"type": ""
													}
												],
												"src": "13204:419:9"
											},
											{
												"body": {
													"nativeSrc": "13735:75:9",
													"nodeType": "YulBlock",
													"src": "13735:75:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13757:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "13757:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13765:1:9",
																				"nodeType": "YulLiteral",
																				"src": "13765:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13753:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "13753:3:9"
																		},
																		"nativeSrc": "13753:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "13753:14:9"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "13769:33:9",
																		"nodeType": "YulLiteral",
																		"src": "13769:33:9",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13746:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "13746:6:9"
																},
																"nativeSrc": "13746:57:9",
																"nodeType": "YulFunctionCall",
																"src": "13746:57:9"
															},
															"nativeSrc": "13746:57:9",
															"nodeType": "YulExpressionStatement",
															"src": "13746:57:9"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "13629:181:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13727:6:9",
														"nodeType": "YulTypedName",
														"src": "13727:6:9",
														"type": ""
													}
												],
												"src": "13629:181:9"
											},
											{
												"body": {
													"nativeSrc": "13962:220:9",
													"nodeType": "YulBlock",
													"src": "13962:220:9",
													"statements": [
														{
															"nativeSrc": "13972:74:9",
															"nodeType": "YulAssignment",
															"src": "13972:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14038:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14038:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14043:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14043:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13979:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "13979:58:9"
																},
																"nativeSrc": "13979:67:9",
																"nodeType": "YulFunctionCall",
																"src": "13979:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13972:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "13972:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14144:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14144:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "14055:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "14055:88:9"
																},
																"nativeSrc": "14055:93:9",
																"nodeType": "YulFunctionCall",
																"src": "14055:93:9"
															},
															"nativeSrc": "14055:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "14055:93:9"
														},
														{
															"nativeSrc": "14157:19:9",
															"nodeType": "YulAssignment",
															"src": "14157:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14168:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "14168:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14173:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14173:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14164:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14164:3:9"
																},
																"nativeSrc": "14164:12:9",
																"nodeType": "YulFunctionCall",
																"src": "14164:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14157:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14157:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13816:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13950:3:9",
														"nodeType": "YulTypedName",
														"src": "13950:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13958:3:9",
														"nodeType": "YulTypedName",
														"src": "13958:3:9",
														"type": ""
													}
												],
												"src": "13816:366:9"
											},
											{
												"body": {
													"nativeSrc": "14359:248:9",
													"nodeType": "YulBlock",
													"src": "14359:248:9",
													"statements": [
														{
															"nativeSrc": "14369:26:9",
															"nodeType": "YulAssignment",
															"src": "14369:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14381:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "14381:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14392:2:9",
																		"nodeType": "YulLiteral",
																		"src": "14392:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14377:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "14377:3:9"
																},
																"nativeSrc": "14377:18:9",
																"nodeType": "YulFunctionCall",
																"src": "14377:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14369:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14369:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14416:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14416:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14427:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14427:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14412:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14412:3:9"
																		},
																		"nativeSrc": "14412:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14412:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14435:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "14435:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14441:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "14441:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14431:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14431:3:9"
																		},
																		"nativeSrc": "14431:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14431:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14405:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14405:6:9"
																},
																"nativeSrc": "14405:47:9",
																"nodeType": "YulFunctionCall",
																"src": "14405:47:9"
															},
															"nativeSrc": "14405:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "14405:47:9"
														},
														{
															"nativeSrc": "14461:139:9",
															"nodeType": "YulAssignment",
															"src": "14461:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14595:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "14595:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14469:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "14469:124:9"
																},
																"nativeSrc": "14469:131:9",
																"nodeType": "YulFunctionCall",
																"src": "14469:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14461:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "14461:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14188:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14339:9:9",
														"nodeType": "YulTypedName",
														"src": "14339:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14354:4:9",
														"nodeType": "YulTypedName",
														"src": "14354:4:9",
														"type": ""
													}
												],
												"src": "14188:419:9"
											},
											{
												"body": {
													"nativeSrc": "14727:34:9",
													"nodeType": "YulBlock",
													"src": "14727:34:9",
													"statements": [
														{
															"nativeSrc": "14737:18:9",
															"nodeType": "YulAssignment",
															"src": "14737:18:9",
															"value": {
																"name": "pos",
																"nativeSrc": "14752:3:9",
																"nodeType": "YulIdentifier",
																"src": "14752:3:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14737:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "14737:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14613:148:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14699:3:9",
														"nodeType": "YulTypedName",
														"src": "14699:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14704:6:9",
														"nodeType": "YulTypedName",
														"src": "14704:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14715:11:9",
														"nodeType": "YulTypedName",
														"src": "14715:11:9",
														"type": ""
													}
												],
												"src": "14613:148:9"
											},
											{
												"body": {
													"nativeSrc": "14873:108:9",
													"nodeType": "YulBlock",
													"src": "14873:108:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14895:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "14895:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14903:1:9",
																				"nodeType": "YulLiteral",
																				"src": "14903:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14891:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "14891:3:9"
																		},
																		"nativeSrc": "14891:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "14891:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14907:66:9",
																		"nodeType": "YulLiteral",
																		"src": "14907:66:9",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14884:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "14884:6:9"
																},
																"nativeSrc": "14884:90:9",
																"nodeType": "YulFunctionCall",
																"src": "14884:90:9"
															},
															"nativeSrc": "14884:90:9",
															"nodeType": "YulExpressionStatement",
															"src": "14884:90:9"
														}
													]
												},
												"name": "store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
												"nativeSrc": "14767:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14865:6:9",
														"nodeType": "YulTypedName",
														"src": "14865:6:9",
														"type": ""
													}
												],
												"src": "14767:214:9"
											},
											{
												"body": {
													"nativeSrc": "15151:238:9",
													"nodeType": "YulBlock",
													"src": "15151:238:9",
													"statements": [
														{
															"nativeSrc": "15161:92:9",
															"nodeType": "YulAssignment",
															"src": "15161:92:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15245:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15245:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15250:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15250:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15168:76:9",
																	"nodeType": "YulIdentifier",
																	"src": "15168:76:9"
																},
																"nativeSrc": "15168:85:9",
																"nodeType": "YulFunctionCall",
																"src": "15168:85:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15161:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15161:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15351:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15351:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																	"nativeSrc": "15262:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "15262:88:9"
																},
																"nativeSrc": "15262:93:9",
																"nodeType": "YulFunctionCall",
																"src": "15262:93:9"
															},
															"nativeSrc": "15262:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "15262:93:9"
														},
														{
															"nativeSrc": "15364:19:9",
															"nodeType": "YulAssignment",
															"src": "15364:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15375:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15375:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15380:2:9",
																		"nodeType": "YulLiteral",
																		"src": "15380:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15371:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15371:3:9"
																},
																"nativeSrc": "15371:12:9",
																"nodeType": "YulFunctionCall",
																"src": "15371:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15364:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15364:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14987:402:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15139:3:9",
														"nodeType": "YulTypedName",
														"src": "15139:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15147:3:9",
														"nodeType": "YulTypedName",
														"src": "15147:3:9",
														"type": ""
													}
												],
												"src": "14987:402:9"
											},
											{
												"body": {
													"nativeSrc": "15440:32:9",
													"nodeType": "YulBlock",
													"src": "15440:32:9",
													"statements": [
														{
															"nativeSrc": "15450:16:9",
															"nodeType": "YulAssignment",
															"src": "15450:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "15461:5:9",
																"nodeType": "YulIdentifier",
																"src": "15461:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15450:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "15450:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "15395:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15422:5:9",
														"nodeType": "YulTypedName",
														"src": "15422:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15432:7:9",
														"nodeType": "YulTypedName",
														"src": "15432:7:9",
														"type": ""
													}
												],
												"src": "15395:77:9"
											},
											{
												"body": {
													"nativeSrc": "15525:32:9",
													"nodeType": "YulBlock",
													"src": "15525:32:9",
													"statements": [
														{
															"nativeSrc": "15535:16:9",
															"nodeType": "YulAssignment",
															"src": "15535:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "15546:5:9",
																"nodeType": "YulIdentifier",
																"src": "15546:5:9"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "15535:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "15535:7:9"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nativeSrc": "15478:79:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15507:5:9",
														"nodeType": "YulTypedName",
														"src": "15507:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "15517:7:9",
														"nodeType": "YulTypedName",
														"src": "15517:7:9",
														"type": ""
													}
												],
												"src": "15478:79:9"
											},
											{
												"body": {
													"nativeSrc": "15646:74:9",
													"nodeType": "YulBlock",
													"src": "15646:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15663:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "15663:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15706:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "15706:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "15688:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "15688:17:9"
																				},
																				"nativeSrc": "15688:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "15688:24:9"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nativeSrc": "15668:19:9",
																			"nodeType": "YulIdentifier",
																			"src": "15668:19:9"
																		},
																		"nativeSrc": "15668:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "15668:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15656:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "15656:6:9"
																},
																"nativeSrc": "15656:58:9",
																"nodeType": "YulFunctionCall",
																"src": "15656:58:9"
															},
															"nativeSrc": "15656:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "15656:58:9"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nativeSrc": "15563:157:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15634:5:9",
														"nodeType": "YulTypedName",
														"src": "15634:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15641:3:9",
														"nodeType": "YulTypedName",
														"src": "15641:3:9",
														"type": ""
													}
												],
												"src": "15563:157:9"
											},
											{
												"body": {
													"nativeSrc": "15943:305:9",
													"nodeType": "YulBlock",
													"src": "15943:305:9",
													"statements": [
														{
															"nativeSrc": "15954:155:9",
															"nodeType": "YulAssignment",
															"src": "15954:155:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16105:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16105:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15961:142:9",
																	"nodeType": "YulIdentifier",
																	"src": "15961:142:9"
																},
																"nativeSrc": "15961:148:9",
																"nodeType": "YulFunctionCall",
																"src": "15961:148:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15954:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "15954:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16181:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "16181:6:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16190:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16190:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nativeSrc": "16119:61:9",
																	"nodeType": "YulIdentifier",
																	"src": "16119:61:9"
																},
																"nativeSrc": "16119:75:9",
																"nodeType": "YulFunctionCall",
																"src": "16119:75:9"
															},
															"nativeSrc": "16119:75:9",
															"nodeType": "YulExpressionStatement",
															"src": "16119:75:9"
														},
														{
															"nativeSrc": "16203:19:9",
															"nodeType": "YulAssignment",
															"src": "16203:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16214:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16214:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16219:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16219:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16210:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16210:3:9"
																},
																"nativeSrc": "16210:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16210:12:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16203:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16203:3:9"
																}
															]
														},
														{
															"nativeSrc": "16232:10:9",
															"nodeType": "YulAssignment",
															"src": "16232:10:9",
															"value": {
																"name": "pos",
																"nativeSrc": "16239:3:9",
																"nodeType": "YulIdentifier",
																"src": "16239:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16232:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16232:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15726:522:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15922:3:9",
														"nodeType": "YulTypedName",
														"src": "15922:3:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15928:6:9",
														"nodeType": "YulTypedName",
														"src": "15928:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15939:3:9",
														"nodeType": "YulTypedName",
														"src": "15939:3:9",
														"type": ""
													}
												],
												"src": "15726:522:9"
											},
											{
												"body": {
													"nativeSrc": "16360:64:9",
													"nodeType": "YulBlock",
													"src": "16360:64:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16382:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "16382:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16390:1:9",
																				"nodeType": "YulLiteral",
																				"src": "16390:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16378:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "16378:3:9"
																		},
																		"nativeSrc": "16378:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "16378:14:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "16394:22:9",
																		"nodeType": "YulLiteral",
																		"src": "16394:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16371:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "16371:6:9"
																},
																"nativeSrc": "16371:46:9",
																"nodeType": "YulFunctionCall",
																"src": "16371:46:9"
															},
															"nativeSrc": "16371:46:9",
															"nodeType": "YulExpressionStatement",
															"src": "16371:46:9"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "16254:170:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16352:6:9",
														"nodeType": "YulTypedName",
														"src": "16352:6:9",
														"type": ""
													}
												],
												"src": "16254:170:9"
											},
											{
												"body": {
													"nativeSrc": "16576:220:9",
													"nodeType": "YulBlock",
													"src": "16576:220:9",
													"statements": [
														{
															"nativeSrc": "16586:74:9",
															"nodeType": "YulAssignment",
															"src": "16586:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16652:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16652:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16657:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16657:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16593:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "16593:58:9"
																},
																"nativeSrc": "16593:67:9",
																"nodeType": "YulFunctionCall",
																"src": "16593:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16586:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16586:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16758:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16758:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "16669:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "16669:88:9"
																},
																"nativeSrc": "16669:93:9",
																"nodeType": "YulFunctionCall",
																"src": "16669:93:9"
															},
															"nativeSrc": "16669:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "16669:93:9"
														},
														{
															"nativeSrc": "16771:19:9",
															"nodeType": "YulAssignment",
															"src": "16771:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16782:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "16782:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16787:2:9",
																		"nodeType": "YulLiteral",
																		"src": "16787:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16778:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16778:3:9"
																},
																"nativeSrc": "16778:12:9",
																"nodeType": "YulFunctionCall",
																"src": "16778:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16771:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16771:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16430:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16564:3:9",
														"nodeType": "YulTypedName",
														"src": "16564:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16572:3:9",
														"nodeType": "YulTypedName",
														"src": "16572:3:9",
														"type": ""
													}
												],
												"src": "16430:366:9"
											},
											{
												"body": {
													"nativeSrc": "16973:248:9",
													"nodeType": "YulBlock",
													"src": "16973:248:9",
													"statements": [
														{
															"nativeSrc": "16983:26:9",
															"nodeType": "YulAssignment",
															"src": "16983:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16995:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "16995:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17006:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17006:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16991:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "16991:3:9"
																},
																"nativeSrc": "16991:18:9",
																"nodeType": "YulFunctionCall",
																"src": "16991:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16983:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "16983:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17030:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17030:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17041:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17041:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17026:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17026:3:9"
																		},
																		"nativeSrc": "17026:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17026:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17049:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "17049:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17055:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17055:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17045:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17045:3:9"
																		},
																		"nativeSrc": "17045:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17045:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17019:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17019:6:9"
																},
																"nativeSrc": "17019:47:9",
																"nodeType": "YulFunctionCall",
																"src": "17019:47:9"
															},
															"nativeSrc": "17019:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "17019:47:9"
														},
														{
															"nativeSrc": "17075:139:9",
															"nodeType": "YulAssignment",
															"src": "17075:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17209:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "17209:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17083:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "17083:124:9"
																},
																"nativeSrc": "17083:131:9",
																"nodeType": "YulFunctionCall",
																"src": "17083:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17075:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17075:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16802:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16953:9:9",
														"nodeType": "YulTypedName",
														"src": "16953:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16968:4:9",
														"nodeType": "YulTypedName",
														"src": "16968:4:9",
														"type": ""
													}
												],
												"src": "16802:419:9"
											},
											{
												"body": {
													"nativeSrc": "17255:152:9",
													"nodeType": "YulBlock",
													"src": "17255:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17272:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17272:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17275:77:9",
																		"nodeType": "YulLiteral",
																		"src": "17275:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17265:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17265:6:9"
																},
																"nativeSrc": "17265:88:9",
																"nodeType": "YulFunctionCall",
																"src": "17265:88:9"
															},
															"nativeSrc": "17265:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "17265:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17369:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17369:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17372:4:9",
																		"nodeType": "YulLiteral",
																		"src": "17372:4:9",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17362:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17362:6:9"
																},
																"nativeSrc": "17362:15:9",
																"nodeType": "YulFunctionCall",
																"src": "17362:15:9"
															},
															"nativeSrc": "17362:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "17362:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17393:1:9",
																		"nodeType": "YulLiteral",
																		"src": "17393:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17396:4:9",
																		"nodeType": "YulLiteral",
																		"src": "17396:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17386:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17386:6:9"
																},
																"nativeSrc": "17386:15:9",
																"nodeType": "YulFunctionCall",
																"src": "17386:15:9"
															},
															"nativeSrc": "17386:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "17386:15:9"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "17227:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "17227:180:9"
											},
											{
												"body": {
													"nativeSrc": "17478:53:9",
													"nodeType": "YulBlock",
													"src": "17478:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17495:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17495:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17518:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "17518:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "17500:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "17500:17:9"
																		},
																		"nativeSrc": "17500:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17500:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17488:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17488:6:9"
																},
																"nativeSrc": "17488:37:9",
																"nodeType": "YulFunctionCall",
																"src": "17488:37:9"
															},
															"nativeSrc": "17488:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "17488:37:9"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "17413:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17466:5:9",
														"nodeType": "YulTypedName",
														"src": "17466:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17473:3:9",
														"nodeType": "YulTypedName",
														"src": "17473:3:9",
														"type": ""
													}
												],
												"src": "17413:118:9"
											},
											{
												"body": {
													"nativeSrc": "17635:124:9",
													"nodeType": "YulBlock",
													"src": "17635:124:9",
													"statements": [
														{
															"nativeSrc": "17645:26:9",
															"nodeType": "YulAssignment",
															"src": "17645:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17657:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "17657:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17668:2:9",
																		"nodeType": "YulLiteral",
																		"src": "17668:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17653:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17653:3:9"
																},
																"nativeSrc": "17653:18:9",
																"nodeType": "YulFunctionCall",
																"src": "17653:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17645:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "17645:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17725:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "17725:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17738:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "17738:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17749:1:9",
																				"nodeType": "YulLiteral",
																				"src": "17749:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17734:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "17734:3:9"
																		},
																		"nativeSrc": "17734:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17734:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17681:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "17681:43:9"
																},
																"nativeSrc": "17681:71:9",
																"nodeType": "YulFunctionCall",
																"src": "17681:71:9"
															},
															"nativeSrc": "17681:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "17681:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "17537:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17607:9:9",
														"nodeType": "YulTypedName",
														"src": "17607:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17619:6:9",
														"nodeType": "YulTypedName",
														"src": "17619:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17630:4:9",
														"nodeType": "YulTypedName",
														"src": "17630:4:9",
														"type": ""
													}
												],
												"src": "17537:222:9"
											},
											{
												"body": {
													"nativeSrc": "17808:43:9",
													"nodeType": "YulBlock",
													"src": "17808:43:9",
													"statements": [
														{
															"nativeSrc": "17818:27:9",
															"nodeType": "YulAssignment",
															"src": "17818:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17833:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "17833:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17840:4:9",
																		"nodeType": "YulLiteral",
																		"src": "17840:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "17829:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "17829:3:9"
																},
																"nativeSrc": "17829:16:9",
																"nodeType": "YulFunctionCall",
																"src": "17829:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "17818:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "17818:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "17765:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17790:5:9",
														"nodeType": "YulTypedName",
														"src": "17790:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "17800:7:9",
														"nodeType": "YulTypedName",
														"src": "17800:7:9",
														"type": ""
													}
												],
												"src": "17765:86:9"
											},
											{
												"body": {
													"nativeSrc": "17918:51:9",
													"nodeType": "YulBlock",
													"src": "17918:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17935:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "17935:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17956:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "17956:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "17940:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "17940:15:9"
																		},
																		"nativeSrc": "17940:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "17940:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17928:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "17928:6:9"
																},
																"nativeSrc": "17928:35:9",
																"nodeType": "YulFunctionCall",
																"src": "17928:35:9"
															},
															"nativeSrc": "17928:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "17928:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "17857:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17906:5:9",
														"nodeType": "YulTypedName",
														"src": "17906:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17913:3:9",
														"nodeType": "YulTypedName",
														"src": "17913:3:9",
														"type": ""
													}
												],
												"src": "17857:112:9"
											},
											{
												"body": {
													"nativeSrc": "18153:367:9",
													"nodeType": "YulBlock",
													"src": "18153:367:9",
													"statements": [
														{
															"nativeSrc": "18163:27:9",
															"nodeType": "YulAssignment",
															"src": "18163:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18175:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "18175:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18186:3:9",
																		"nodeType": "YulLiteral",
																		"src": "18186:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18171:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "18171:3:9"
																},
																"nativeSrc": "18171:19:9",
																"nodeType": "YulFunctionCall",
																"src": "18171:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18163:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "18163:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18244:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18244:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18257:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18257:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18268:1:9",
																				"nodeType": "YulLiteral",
																				"src": "18268:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18253:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18253:3:9"
																		},
																		"nativeSrc": "18253:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18253:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18200:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18200:43:9"
																},
																"nativeSrc": "18200:71:9",
																"nodeType": "YulFunctionCall",
																"src": "18200:71:9"
															},
															"nativeSrc": "18200:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "18200:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18321:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18321:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18334:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18334:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18345:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18345:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18330:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18330:3:9"
																		},
																		"nativeSrc": "18330:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18330:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "18281:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "18281:39:9"
																},
																"nativeSrc": "18281:68:9",
																"nodeType": "YulFunctionCall",
																"src": "18281:68:9"
															},
															"nativeSrc": "18281:68:9",
															"nodeType": "YulExpressionStatement",
															"src": "18281:68:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18403:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18403:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18416:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18416:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18427:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18427:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18412:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18412:3:9"
																		},
																		"nativeSrc": "18412:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18412:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18359:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18359:43:9"
																},
																"nativeSrc": "18359:72:9",
																"nodeType": "YulFunctionCall",
																"src": "18359:72:9"
															},
															"nativeSrc": "18359:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "18359:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18485:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "18485:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18498:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "18498:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18509:2:9",
																				"nodeType": "YulLiteral",
																				"src": "18509:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18494:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18494:3:9"
																		},
																		"nativeSrc": "18494:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18494:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "18441:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "18441:43:9"
																},
																"nativeSrc": "18441:72:9",
																"nodeType": "YulFunctionCall",
																"src": "18441:72:9"
															},
															"nativeSrc": "18441:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "18441:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "17975:545:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18101:9:9",
														"nodeType": "YulTypedName",
														"src": "18101:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18113:6:9",
														"nodeType": "YulTypedName",
														"src": "18113:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18121:6:9",
														"nodeType": "YulTypedName",
														"src": "18121:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18129:6:9",
														"nodeType": "YulTypedName",
														"src": "18129:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18137:6:9",
														"nodeType": "YulTypedName",
														"src": "18137:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18148:4:9",
														"nodeType": "YulTypedName",
														"src": "18148:4:9",
														"type": ""
													}
												],
												"src": "17975:545:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$560_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$560_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$560_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$560__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$560_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC1155_$443_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC1155_$443_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155_$443_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155_$443__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155_$443_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15(memPtr) {\n\n        mstore(add(memPtr, 0), \"zero addr\")\n\n    }\n\n    function abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa(memPtr) {\n\n        mstore(add(memPtr, 0), \"zero user\")\n\n    }\n\n    function abi_encode_t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b(memPtr) {\n\n        mstore(add(memPtr, 0), \"already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73(memPtr) {\n\n        mstore(add(memPtr, 0), 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n\n    }\n\n    function abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 28)\n        store_literal_in_memory_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73(pos)\n        end := add(pos, 28)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061012a575f3560e01c8063715018a6116100ab578063a8602fea1161006f578063a8602fea146102e4578063a87331e514610300578063c5fb50d51461031c578063c69d65d114610338578063f2fde38b146103545761012a565b8063715018a61461026657806376618f271461027057806383b781881461028c5780638456cb59146102bc5780638da5cb5b146102c65761012a565b80634626402b116100f25780634626402b146101d457806347e25eff146101f257806357d1f9101461020e5780635c975abb1461022c5780635fb84d671461024a5761012a565b8063028be3381461012e578063280e31cc1461015e5780632f5e6a051461018e578063323f24ab146101ac5780633f4ba83a146101ca575b5f5ffd5b61014860048036038101906101439190611372565b610370565b60405161015591906113bf565b60405180910390f35b610178600480360381019061017391906113d8565b610390565b60405161018591906113bf565b60405180910390f35b6101966103a5565b6040516101a3919061145e565b60405180910390f35b6101b46103ca565b6040516101c19190611486565b60405180910390f35b6101d26103ef565b005b6101dc610401565b6040516101e99190611486565b60405180910390f35b61020c600480360381019061020791906113d8565b610426565b005b6102166104df565b60405161022391906114bf565b60405180910390f35b610234610504565b60405161024191906114f2565b60405180910390f35b610264600480360381019061025f9190611372565b610519565b005b61026e610623565b005b61028a6004803603810190610285919061156c565b610636565b005b6102a660048036038101906102a19190611372565b6108bb565b6040516102b391906114f2565b60405180910390f35b6102c46108e5565b005b6102ce6108f7565b6040516102db9190611486565b60405180910390f35b6102fe60048036038101906102f991906113d8565b61091e565b005b61031a600480360381019061031591906113d8565b6109d7565b005b610336600480360381019061033191906115dd565b610a90565b005b610352600480360381019061034d91906113d8565b610bac565b005b61036e600480360381019061036991906113d8565b610c65565b005b6007602052815f5260405f20602052805f5260405f205f91509150505481565b6006602052805f5260405f205f915090505481565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103f7610ce9565b6103ff610d70565b565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61042e610ce9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361049c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049390611687565b60405180910390fd5b8060035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f60149054906101000a900460ff16905090565b610521610ce9565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361058f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610586906116ef565b60405180910390fd5b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167f4bd6aedf6fbd4e9cacaf319dc8d6906ff7f7fd2522898365f92afab9cb2454448260405161061791906113bf565b60405180910390a25050565b61062b610ce9565b6106345f610dd1565b565b61063e610e92565b610646610edc565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8581526020019081526020015f205f9054906101000a900460ff16156106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d690611757565b60405180910390fd5b5f3385856040516020016106f5939291906117da565b6040516020818303038152906040528051906020012090505f61071782610f2b565b90505f6107678286868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050610f5a565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef90611860565b60405180910390fd5b600160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8981526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241886040516108a291906113bf565b60405180910390a25050506108b5610f84565b50505050565b6008602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b6108ed610ce9565b6108f5610f8d565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610926610ce9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90611687565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109df610ce9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4490611687565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610a98610ce9565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd906116ef565b60405180910390fd5b8060075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff167f95b529ceb2b4c5026133eafcb0f6e7e63f17c39398d1b67e14569272cf3c956b8383604051610b9f92919061187e565b60405180910390a2505050565b610bb4610ce9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1990611687565b60405180910390fd5b8060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610c6d610ce9565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cdd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610cd49190611486565b60405180910390fd5b610ce681610dd1565b50565b610cf1610fef565b73ffffffffffffffffffffffffffffffffffffffff16610d0f6108f7565b73ffffffffffffffffffffffffffffffffffffffff1614610d6e57610d32610fef565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d659190611486565b60405180910390fd5b565b610d78610ff6565b5f5f60146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610dba610fef565b604051610dc79190611486565b60405180910390a1565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610e9a610504565b15610eda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed1906118ef565b60405180910390fd5b565b600260015403610f21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1890611957565b60405180910390fd5b6002600181905550565b5f81604051602001610f3d91906119f2565b604051602081830303815290604052805190602001209050919050565b5f5f5f5f610f68868661103f565b925092509250610f788282611094565b82935050505092915050565b60018081905550565b610f95610e92565b60015f60146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fd8610fef565b604051610fe59190611486565b60405180910390a1565b5f33905090565b610ffe610504565b61103d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103490611a61565b60405180910390fd5b565b5f5f5f604184510361107f575f5f5f602087015192506040870151915060608701515f1a9050611071888285856111f6565b95509550955050505061108d565b5f600285515f1b9250925092505b9250925092565b5f60038111156110a7576110a6611a7f565b5b8260038111156110ba576110b9611a7f565b5b03156111f257600160038111156110d4576110d3611a7f565b5b8260038111156110e7576110e6611a7f565b5b0361111e576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561113257611131611a7f565b5b82600381111561114557611144611a7f565b5b0361118957805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161118091906113bf565b60405180910390fd5b60038081111561119c5761119b611a7f565b5b8260038111156111af576111ae611a7f565b5b036111f157806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016111e89190611abb565b60405180910390fd5b5b5050565b5f5f5f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611232575f6003859250925092506112d3565b5f6001888888886040515f81526020016040526040516112559493929190611aef565b6020604051602081039080840390855afa158015611275573d5f5f3e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112c6575f60015f5f1b935093509350506112d3565b805f5f5f1b935093509350505b9450945094915050565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61130e826112e5565b9050919050565b61131e81611304565b8114611328575f5ffd5b50565b5f8135905061133981611315565b92915050565b5f819050919050565b6113518161133f565b811461135b575f5ffd5b50565b5f8135905061136c81611348565b92915050565b5f5f60408385031215611388576113876112dd565b5b5f6113958582860161132b565b92505060206113a68582860161135e565b9150509250929050565b6113b98161133f565b82525050565b5f6020820190506113d25f8301846113b0565b92915050565b5f602082840312156113ed576113ec6112dd565b5b5f6113fa8482850161132b565b91505092915050565b5f819050919050565b5f61142661142161141c846112e5565b611403565b6112e5565b9050919050565b5f6114378261140c565b9050919050565b5f6114488261142d565b9050919050565b6114588161143e565b82525050565b5f6020820190506114715f83018461144f565b92915050565b61148081611304565b82525050565b5f6020820190506114995f830184611477565b92915050565b5f6114a98261142d565b9050919050565b6114b98161149f565b82525050565b5f6020820190506114d25f8301846114b0565b92915050565b5f8115159050919050565b6114ec816114d8565b82525050565b5f6020820190506115055f8301846114e3565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261152c5761152b61150b565b5b8235905067ffffffffffffffff8111156115495761154861150f565b5b60208301915083600182028301111561156557611564611513565b5b9250929050565b5f5f5f5f60608587031215611584576115836112dd565b5b5f6115918782880161135e565b94505060206115a28782880161135e565b935050604085013567ffffffffffffffff8111156115c3576115c26112e1565b5b6115cf87828801611517565b925092505092959194509250565b5f5f5f606084860312156115f4576115f36112dd565b5b5f6116018682870161132b565b93505060206116128682870161135e565b92505060406116238682870161135e565b9150509250925092565b5f82825260208201905092915050565b7f7a65726f206164647200000000000000000000000000000000000000000000005f82015250565b5f61167160098361162d565b915061167c8261163d565b602082019050919050565b5f6020820190508181035f83015261169e81611665565b9050919050565b7f7a65726f207573657200000000000000000000000000000000000000000000005f82015250565b5f6116d960098361162d565b91506116e4826116a5565b602082019050919050565b5f6020820190508181035f830152611706816116cd565b9050919050565b7f616c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f611741600f8361162d565b915061174c8261170d565b602082019050919050565b5f6020820190508181035f83015261176e81611735565b9050919050565b5f8160601b9050919050565b5f61178b82611775565b9050919050565b5f61179c82611781565b9050919050565b6117b46117af82611304565b611792565b82525050565b5f819050919050565b6117d46117cf8261133f565b6117ba565b82525050565b5f6117e582866117a3565b6014820191506117f582856117c3565b60208201915061180582846117c3565b602082019150819050949350505050565b7f696e76616c6964207369676e61747572650000000000000000000000000000005f82015250565b5f61184a60118361162d565b915061185582611816565b602082019050919050565b5f6020820190508181035f8301526118778161183e565b9050919050565b5f6040820190506118915f8301856113b0565b61189e60208301846113b0565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6118d960108361162d565b91506118e4826118a5565b602082019050919050565b5f6020820190508181035f830152611906816118cd565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611941601f8361162d565b915061194c8261190d565b602082019050919050565b5f6020820190508181035f83015261196e81611935565b9050919050565b5f81905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000005f82015250565b5f6119b3601c83611975565b91506119be8261197f565b601c82019050919050565b5f819050919050565b5f819050919050565b6119ec6119e7826119c9565b6119d2565b82525050565b5f6119fc826119a7565b9150611a0882846119db565b60208201915081905092915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611a4b60148361162d565b9150611a5682611a17565b602082019050919050565b5f6020820190508181035f830152611a7881611a3f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b611ab5816119c9565b82525050565b5f602082019050611ace5f830184611aac565b92915050565b5f60ff82169050919050565b611ae981611ad4565b82525050565b5f608082019050611b025f830187611aac565b611b0f6020830186611ae0565b611b1c6040830185611aac565b611b296060830184611aac565b9594505050505056fea2646970667358221220fc600af56c5a74beb46df9fe656e41bee2487b47ba647092225bdb7fa6d3b9bf64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA8602FEA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA8602FEA EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0xA87331E5 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0xC5FB50D5 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xC69D65D1 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x354 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x76618F27 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x83B78188 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C6 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x4626402B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x47E25EFF EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x57D1F910 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x5FB84D67 EQ PUSH2 0x24A JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x28BE338 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x280E31CC EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x2F5E6A05 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x323F24AB EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1372 JUMP JUMPDEST PUSH2 0x370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x3EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1372 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1372 JUMP JUMPDEST PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x8E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x91E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x315 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x15DD JUMP JUMPDEST PUSH2 0xA90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0xBAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST PUSH2 0xC65 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3F7 PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0xD70 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x42E PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x493 SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x521 PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x586 SWAP1 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4BD6AEDF6FBD4E9CACAF319DC8D6906FF7F7FD2522898365F92AFAB9CB245444 DUP3 PUSH1 0x40 MLOAD PUSH2 0x617 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x62B PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x634 PUSH0 PUSH2 0xDD1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x63E PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x646 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x6DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP1 PUSH2 0x1757 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x717 DUP3 PUSH2 0xF2B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x767 DUP3 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xF5A JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EF SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP9 PUSH1 0x40 MLOAD PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x8B5 PUSH2 0xF84 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x8ED PUSH2 0xCE9 JUMP JUMPDEST PUSH2 0x8F5 PUSH2 0xF8D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x926 PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98B SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9DF PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA44 SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA98 PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x95B529CEB2B4C5026133EAFCB0F6E7E63F17C39398D1B67E14569272CF3C956B DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xB9F SWAP3 SWAP2 SWAP1 PUSH2 0x187E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xBB4 PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC22 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC19 SWAP1 PUSH2 0x1687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xC6D PUSH2 0xCE9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD4 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE6 DUP2 PUSH2 0xDD1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCF1 PUSH2 0xFEF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD0F PUSH2 0x8F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD6E JUMPI PUSH2 0xD32 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xD78 PUSH2 0xFF6 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xDBA PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC7 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE9A PUSH2 0x504 JUMP JUMPDEST ISZERO PUSH2 0xEDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED1 SWAP1 PUSH2 0x18EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xF21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP1 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x19F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0xF68 DUP7 DUP7 PUSH2 0x103F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF78 DUP3 DUP3 PUSH2 0x1094 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF95 PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFD8 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE5 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFFE PUSH2 0x504 JUMP JUMPDEST PUSH2 0x103D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP1 PUSH2 0x1A61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x107F JUMPI PUSH0 PUSH0 PUSH0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH0 BYTE SWAP1 POP PUSH2 0x1071 DUP9 DUP3 DUP6 DUP6 PUSH2 0x11F6 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x108D JUMP JUMPDEST PUSH0 PUSH1 0x2 DUP6 MLOAD PUSH0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10A7 JUMPI PUSH2 0x10A6 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10B9 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x11F2 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10D4 JUMPI PUSH2 0x10D3 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10E7 JUMPI PUSH2 0x10E6 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x111E JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1131 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1144 PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1189 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x13BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x119C JUMPI PUSH2 0x119B PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11AF JUMPI PUSH2 0x11AE PUSH2 0x1A7F JUMP JUMPDEST JUMPDEST SUB PUSH2 0x11F1 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1232 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x12D3 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1255 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AEF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1275 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12C6 JUMPI PUSH0 PUSH1 0x1 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x12D3 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x130E DUP3 PUSH2 0x12E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131E DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP2 EQ PUSH2 0x1328 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1339 DUP2 PUSH2 0x1315 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1351 DUP2 PUSH2 0x133F JUMP JUMPDEST DUP2 EQ PUSH2 0x135B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136C DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1388 JUMPI PUSH2 0x1387 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1395 DUP6 DUP3 DUP7 ADD PUSH2 0x132B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13A6 DUP6 DUP3 DUP7 ADD PUSH2 0x135E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x13B9 DUP2 PUSH2 0x133F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EC PUSH2 0x12DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13FA DUP5 DUP3 DUP6 ADD PUSH2 0x132B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1426 PUSH2 0x1421 PUSH2 0x141C DUP5 PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x1403 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1437 DUP3 PUSH2 0x140C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1448 DUP3 PUSH2 0x142D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1458 DUP2 PUSH2 0x143E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1471 PUSH0 DUP4 ADD DUP5 PUSH2 0x144F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1480 DUP2 PUSH2 0x1304 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1499 PUSH0 DUP4 ADD DUP5 PUSH2 0x1477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A9 DUP3 PUSH2 0x142D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B9 DUP2 PUSH2 0x149F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EC DUP2 PUSH2 0x14D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1505 PUSH0 DUP4 ADD DUP5 PUSH2 0x14E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x152C JUMPI PUSH2 0x152B PUSH2 0x150B JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1549 JUMPI PUSH2 0x1548 PUSH2 0x150F JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1565 JUMPI PUSH2 0x1564 PUSH2 0x1513 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1584 JUMPI PUSH2 0x1583 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1591 DUP8 DUP3 DUP9 ADD PUSH2 0x135E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x15A2 DUP8 DUP3 DUP9 ADD PUSH2 0x135E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15C2 PUSH2 0x12E1 JUMP JUMPDEST JUMPDEST PUSH2 0x15CF DUP8 DUP3 DUP9 ADD PUSH2 0x1517 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15F4 JUMPI PUSH2 0x15F3 PUSH2 0x12DD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1601 DUP7 DUP3 DUP8 ADD PUSH2 0x132B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1612 DUP7 DUP3 DUP8 ADD PUSH2 0x135E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1623 DUP7 DUP3 DUP8 ADD PUSH2 0x135E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7A65726F20616464720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1671 PUSH1 0x9 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x167C DUP3 PUSH2 0x163D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x169E DUP2 PUSH2 0x1665 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7A65726F20757365720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16D9 PUSH1 0x9 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x16E4 DUP3 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1706 DUP2 PUSH2 0x16CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x616C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1741 PUSH1 0xF DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x174C DUP3 PUSH2 0x170D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x176E DUP2 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x178B DUP3 PUSH2 0x1775 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x179C DUP3 PUSH2 0x1781 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17B4 PUSH2 0x17AF DUP3 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x1792 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D4 PUSH2 0x17CF DUP3 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x17BA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17E5 DUP3 DUP7 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x17F5 DUP3 DUP6 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x1805 DUP3 DUP5 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x696E76616C6964207369676E6174757265000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x184A PUSH1 0x11 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x1855 DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1877 DUP2 PUSH2 0x183E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1891 PUSH0 DUP4 ADD DUP6 PUSH2 0x13B0 JUMP JUMPDEST PUSH2 0x189E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18D9 PUSH1 0x10 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x18E4 DUP3 PUSH2 0x18A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1906 DUP2 PUSH2 0x18CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1941 PUSH1 0x1F DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x194C DUP3 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x196E DUP2 PUSH2 0x1935 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19B3 PUSH1 0x1C DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x19BE DUP3 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x1C DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EC PUSH2 0x19E7 DUP3 PUSH2 0x19C9 JUMP JUMPDEST PUSH2 0x19D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19FC DUP3 PUSH2 0x19A7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A08 DUP3 DUP5 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A4B PUSH1 0x14 DUP4 PUSH2 0x162D JUMP JUMPDEST SWAP2 POP PUSH2 0x1A56 DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A78 DUP2 PUSH2 0x1A3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1AB5 DUP2 PUSH2 0x19C9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ACE PUSH0 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AE9 DUP2 PUSH2 0x1AD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1B02 PUSH0 DUP4 ADD DUP8 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x1B0F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x1B1C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1AAC JUMP JUMPDEST PUSH2 0x1B29 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1AAC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC PUSH1 0xA CREATE2 PUSH13 0x5A74BEB46DF9FE656E41BEE248 PUSH28 0x47BA647092225BDB7FA6D3B9BF64736F6C634300081E003300000000 ",
							"sourceMap": "414:3515:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:68;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;615:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;486:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;581:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2357:65;;;:::i;:::-;;546:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1806:156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;516:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2428:208:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;3205:722:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;739:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2290:61;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1968:157:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1635:165;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2642:263;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2131:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;665:68:8;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;615:44::-;;;;;;;;;;;;;;;;;:::o;486:24::-;;;;;;;;;;;;;:::o;581:27::-;;;;;;;;;;;;;:::o;2357:65::-;1531:13:0;:11;:13::i;:::-;2405:10:8::1;:8;:10::i;:::-;2357:65::o:0;546:29::-;;;;;;;;;;;;;:::o;1806:156::-;1531:13:0;:11;:13::i;:::-;1901:1:8::1;1881:22;;:8;:22;;::::0;1873:44:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1946:8;1927:7;;:28;;;;;;;;;;;;;;;;;;1806:156:::0;:::o;516:23::-;;;;;;;;;;;;;:::o;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;2428:208:8:-;1531:13:0;:11;:13::i;:::-;2534:1:8::1;2518:18;;:4;:18;;::::0;2510:40:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2578:8;2560:9;:15;2570:4;2560:15;;;;;;;;;;;;;;;:26;;;;2614:4;2601:28;;;2620:8;2601:28;;;;;;:::i;:::-;;;;;;;;2428:208:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3205:722:8:-;1239:19:1;:17;:19::i;:::-;2261:21:2::1;:19;:21::i;:::-;3371:13:8::2;:25;3385:10;3371:25;;;;;;;;;;;;;;;:35;3397:8;3371:35;;;;;;;;;;;;;;;;;;;;;3370:36;3362:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3437:19;3486:10;3498:8;3508:6;3469:46;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3459:57;;;;;;3437:79;;3526:28;3557:35;3580:11;3557:22;:35::i;:::-;3526:66;;3603:23;3629:46;3643:20;3665:9;;3629:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:46::i;:::-;3603:72;;3712:12;;;;;;;;;;;3693:31;;:15;:31;;;3685:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3795:4;3757:13;:25;3771:10;3757:25;;;;;;;;;;;;;;;:35;3783:8;3757:35;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;3899:10;3885:35;;;3911:8;3885:35;;;;;;:::i;:::-;;;;;;;;3352:575;;;2303:20:2::1;:18;:20::i;:::-;3205:722:8::0;;;;:::o;739:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2290:61::-;1531:13:0;:11;:13::i;:::-;2336:8:8::1;:6;:8::i;:::-;2290:61::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1968:157:8:-;1531:13:0;:11;:13::i;:::-;2068:1:8::1;2049:21;;:7;:21;;::::0;2041:43:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2111:7;2094:14;;:24;;;;;;;;;;;;;;;;;;1968:157:::0;:::o;1635:165::-;1531:13:0;:11;:13::i;:::-;1736:1:8::1;1714:24;;:10;:24;;::::0;1706:46:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1782:10;1762:9;;:31;;;;;;;;;;;;;;;;;;1635:165:::0;:::o;2642:263::-;1531:13:0;:11;:13::i;:::-;2773:1:8::1;2757:18;;:4;:18;;::::0;2749:40:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2830:8;2799:13;:19;2813:4;2799:19;;;;;;;;;;;;;;;:28;2819:7;2799:28;;;;;;;;;;;:39;;;;2874:4;2853:45;;;2880:7;2889:8;2853:45;;;;;;;:::i;:::-;;;;;;;;2642:263:::0;;;:::o;2131:153::-;1531:13:0;:11;:13::i;:::-;2229:1:8::1;2210:21;;:7;:21;;::::0;2202:43:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2270:7;2255:12;;:22;;;;;;;;;;;;;;;;;;2131:153:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2433:117:1:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1767:106:1:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2987:212:8:-;3056:7;3186:4;3133:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;3123:69;;;;;;3116:76;;2987:212;;;:::o;3714:255:6:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;1945:106:1:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;2129:778:6:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;5203:1551::-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;88:117:9:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:60::-;2392:3;2413:5;2406:12;;2364:60;;;:::o;2430:142::-;2480:9;2513:53;2531:34;2540:24;2558:5;2540:24;:::i;:::-;2531:34;:::i;:::-;2513:53;:::i;:::-;2500:66;;2430:142;;;:::o;2578:126::-;2628:9;2661:37;2692:5;2661:37;:::i;:::-;2648:50;;2578:126;;;:::o;2710:141::-;2775:9;2808:37;2839:5;2808:37;:::i;:::-;2795:50;;2710:141;;;:::o;2857:161::-;2959:52;3005:5;2959:52;:::i;:::-;2954:3;2947:65;2857:161;;:::o;3024:252::-;3132:4;3170:2;3159:9;3155:18;3147:26;;3183:86;3266:1;3255:9;3251:17;3242:6;3183:86;:::i;:::-;3024:252;;;;:::o;3282:118::-;3369:24;3387:5;3369:24;:::i;:::-;3364:3;3357:37;3282:118;;:::o;3406:222::-;3499:4;3537:2;3526:9;3522:18;3514:26;;3550:71;3618:1;3607:9;3603:17;3594:6;3550:71;:::i;:::-;3406:222;;;;:::o;3634:142::-;3700:9;3733:37;3764:5;3733:37;:::i;:::-;3720:50;;3634:142;;;:::o;3782:163::-;3885:53;3932:5;3885:53;:::i;:::-;3880:3;3873:66;3782:163;;:::o;3951:254::-;4060:4;4098:2;4087:9;4083:18;4075:26;;4111:87;4195:1;4184:9;4180:17;4171:6;4111:87;:::i;:::-;3951:254;;;;:::o;4211:90::-;4245:7;4288:5;4281:13;4274:21;4263:32;;4211:90;;;:::o;4307:109::-;4388:21;4403:5;4388:21;:::i;:::-;4383:3;4376:34;4307:109;;:::o;4422:210::-;4509:4;4547:2;4536:9;4532:18;4524:26;;4560:65;4622:1;4611:9;4607:17;4598:6;4560:65;:::i;:::-;4422:210;;;;:::o;4638:117::-;4747:1;4744;4737:12;4761:117;4870:1;4867;4860:12;4884:117;4993:1;4990;4983:12;5020:552;5077:8;5087:6;5137:3;5130:4;5122:6;5118:17;5114:27;5104:122;;5145:79;;:::i;:::-;5104:122;5258:6;5245:20;5235:30;;5288:18;5280:6;5277:30;5274:117;;;5310:79;;:::i;:::-;5274:117;5424:4;5416:6;5412:17;5400:29;;5478:3;5470:4;5462:6;5458:17;5448:8;5444:32;5441:41;5438:128;;;5485:79;;:::i;:::-;5438:128;5020:552;;;;;:::o;5578:817::-;5666:6;5674;5682;5690;5739:2;5727:9;5718:7;5714:23;5710:32;5707:119;;;5745:79;;:::i;:::-;5707:119;5865:1;5890:53;5935:7;5926:6;5915:9;5911:22;5890:53;:::i;:::-;5880:63;;5836:117;5992:2;6018:53;6063:7;6054:6;6043:9;6039:22;6018:53;:::i;:::-;6008:63;;5963:118;6148:2;6137:9;6133:18;6120:32;6179:18;6171:6;6168:30;6165:117;;;6201:79;;:::i;:::-;6165:117;6314:64;6370:7;6361:6;6350:9;6346:22;6314:64;:::i;:::-;6296:82;;;;6091:297;5578:817;;;;;;;:::o;6401:619::-;6478:6;6486;6494;6543:2;6531:9;6522:7;6518:23;6514:32;6511:119;;;6549:79;;:::i;:::-;6511:119;6669:1;6694:53;6739:7;6730:6;6719:9;6715:22;6694:53;:::i;:::-;6684:63;;6640:117;6796:2;6822:53;6867:7;6858:6;6847:9;6843:22;6822:53;:::i;:::-;6812:63;;6767:118;6924:2;6950:53;6995:7;6986:6;6975:9;6971:22;6950:53;:::i;:::-;6940:63;;6895:118;6401:619;;;;;:::o;7026:169::-;7110:11;7144:6;7139:3;7132:19;7184:4;7179:3;7175:14;7160:29;;7026:169;;;;:::o;7201:159::-;7341:11;7337:1;7329:6;7325:14;7318:35;7201:159;:::o;7366:365::-;7508:3;7529:66;7593:1;7588:3;7529:66;:::i;:::-;7522:73;;7604:93;7693:3;7604:93;:::i;:::-;7722:2;7717:3;7713:12;7706:19;;7366:365;;;:::o;7737:419::-;7903:4;7941:2;7930:9;7926:18;7918:26;;7990:9;7984:4;7980:20;7976:1;7965:9;7961:17;7954:47;8018:131;8144:4;8018:131;:::i;:::-;8010:139;;7737:419;;;:::o;8162:159::-;8302:11;8298:1;8290:6;8286:14;8279:35;8162:159;:::o;8327:365::-;8469:3;8490:66;8554:1;8549:3;8490:66;:::i;:::-;8483:73;;8565:93;8654:3;8565:93;:::i;:::-;8683:2;8678:3;8674:12;8667:19;;8327:365;;;:::o;8698:419::-;8864:4;8902:2;8891:9;8887:18;8879:26;;8951:9;8945:4;8941:20;8937:1;8926:9;8922:17;8915:47;8979:131;9105:4;8979:131;:::i;:::-;8971:139;;8698:419;;;:::o;9123:165::-;9263:17;9259:1;9251:6;9247:14;9240:41;9123:165;:::o;9294:366::-;9436:3;9457:67;9521:2;9516:3;9457:67;:::i;:::-;9450:74;;9533:93;9622:3;9533:93;:::i;:::-;9651:2;9646:3;9642:12;9635:19;;9294:366;;;:::o;9666:419::-;9832:4;9870:2;9859:9;9855:18;9847:26;;9919:9;9913:4;9909:20;9905:1;9894:9;9890:17;9883:47;9947:131;10073:4;9947:131;:::i;:::-;9939:139;;9666:419;;;:::o;10091:94::-;10124:8;10172:5;10168:2;10164:14;10143:35;;10091:94;;;:::o;10191:::-;10230:7;10259:20;10273:5;10259:20;:::i;:::-;10248:31;;10191:94;;;:::o;10291:100::-;10330:7;10359:26;10379:5;10359:26;:::i;:::-;10348:37;;10291:100;;;:::o;10397:157::-;10502:45;10522:24;10540:5;10522:24;:::i;:::-;10502:45;:::i;:::-;10497:3;10490:58;10397:157;;:::o;10560:79::-;10599:7;10628:5;10617:16;;10560:79;;;:::o;10645:157::-;10750:45;10770:24;10788:5;10770:24;:::i;:::-;10750:45;:::i;:::-;10745:3;10738:58;10645:157;;:::o;10808:538::-;10976:3;10991:75;11062:3;11053:6;10991:75;:::i;:::-;11091:2;11086:3;11082:12;11075:19;;11104:75;11175:3;11166:6;11104:75;:::i;:::-;11204:2;11199:3;11195:12;11188:19;;11217:75;11288:3;11279:6;11217:75;:::i;:::-;11317:2;11312:3;11308:12;11301:19;;11337:3;11330:10;;10808:538;;;;;;:::o;11352:167::-;11492:19;11488:1;11480:6;11476:14;11469:43;11352:167;:::o;11525:366::-;11667:3;11688:67;11752:2;11747:3;11688:67;:::i;:::-;11681:74;;11764:93;11853:3;11764:93;:::i;:::-;11882:2;11877:3;11873:12;11866:19;;11525:366;;;:::o;11897:419::-;12063:4;12101:2;12090:9;12086:18;12078:26;;12150:9;12144:4;12140:20;12136:1;12125:9;12121:17;12114:47;12178:131;12304:4;12178:131;:::i;:::-;12170:139;;11897:419;;;:::o;12322:332::-;12443:4;12481:2;12470:9;12466:18;12458:26;;12494:71;12562:1;12551:9;12547:17;12538:6;12494:71;:::i;:::-;12575:72;12643:2;12632:9;12628:18;12619:6;12575:72;:::i;:::-;12322:332;;;;;:::o;12660:166::-;12800:18;12796:1;12788:6;12784:14;12777:42;12660:166;:::o;12832:366::-;12974:3;12995:67;13059:2;13054:3;12995:67;:::i;:::-;12988:74;;13071:93;13160:3;13071:93;:::i;:::-;13189:2;13184:3;13180:12;13173:19;;12832:366;;;:::o;13204:419::-;13370:4;13408:2;13397:9;13393:18;13385:26;;13457:9;13451:4;13447:20;13443:1;13432:9;13428:17;13421:47;13485:131;13611:4;13485:131;:::i;:::-;13477:139;;13204:419;;;:::o;13629:181::-;13769:33;13765:1;13757:6;13753:14;13746:57;13629:181;:::o;13816:366::-;13958:3;13979:67;14043:2;14038:3;13979:67;:::i;:::-;13972:74;;14055:93;14144:3;14055:93;:::i;:::-;14173:2;14168:3;14164:12;14157:19;;13816:366;;;:::o;14188:419::-;14354:4;14392:2;14381:9;14377:18;14369:26;;14441:9;14435:4;14431:20;14427:1;14416:9;14412:17;14405:47;14469:131;14595:4;14469:131;:::i;:::-;14461:139;;14188:419;;;:::o;14613:148::-;14715:11;14752:3;14737:18;;14613:148;;;;:::o;14767:214::-;14907:66;14903:1;14895:6;14891:14;14884:90;14767:214;:::o;14987:402::-;15147:3;15168:85;15250:2;15245:3;15168:85;:::i;:::-;15161:92;;15262:93;15351:3;15262:93;:::i;:::-;15380:2;15375:3;15371:12;15364:19;;14987:402;;;:::o;15395:77::-;15432:7;15461:5;15450:16;;15395:77;;;:::o;15478:79::-;15517:7;15546:5;15535:16;;15478:79;;;:::o;15563:157::-;15668:45;15688:24;15706:5;15688:24;:::i;:::-;15668:45;:::i;:::-;15663:3;15656:58;15563:157;;:::o;15726:522::-;15939:3;15961:148;16105:3;15961:148;:::i;:::-;15954:155;;16119:75;16190:3;16181:6;16119:75;:::i;:::-;16219:2;16214:3;16210:12;16203:19;;16239:3;16232:10;;15726:522;;;;:::o;16254:170::-;16394:22;16390:1;16382:6;16378:14;16371:46;16254:170;:::o;16430:366::-;16572:3;16593:67;16657:2;16652:3;16593:67;:::i;:::-;16586:74;;16669:93;16758:3;16669:93;:::i;:::-;16787:2;16782:3;16778:12;16771:19;;16430:366;;;:::o;16802:419::-;16968:4;17006:2;16995:9;16991:18;16983:26;;17055:9;17049:4;17045:20;17041:1;17030:9;17026:17;17019:47;17083:131;17209:4;17083:131;:::i;:::-;17075:139;;16802:419;;;:::o;17227:180::-;17275:77;17272:1;17265:88;17372:4;17369:1;17362:15;17396:4;17393:1;17386:15;17413:118;17500:24;17518:5;17500:24;:::i;:::-;17495:3;17488:37;17413:118;;:::o;17537:222::-;17630:4;17668:2;17657:9;17653:18;17645:26;;17681:71;17749:1;17738:9;17734:17;17725:6;17681:71;:::i;:::-;17537:222;;;;:::o;17765:86::-;17800:7;17840:4;17833:5;17829:16;17818:27;;17765:86;;;:::o;17857:112::-;17940:22;17956:5;17940:22;:::i;:::-;17935:3;17928:35;17857:112;;:::o;17975:545::-;18148:4;18186:3;18175:9;18171:19;18163:27;;18200:71;18268:1;18257:9;18253:17;18244:6;18200:71;:::i;:::-;18281:68;18345:2;18334:9;18330:18;18321:6;18281:68;:::i;:::-;18359:72;18427:2;18416:9;18412:18;18403:6;18359:72;:::i;:::-;18441;18509:2;18498:9;18494:18;18485:6;18441:72;:::i;:::-;17975:545;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1403200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"avatarNFT()": "infinite",
								"claimReward(uint256,uint256,bytes)": "infinite",
								"itemNFT()": "infinite",
								"owner()": "2625",
								"pause()": "infinite",
								"paused()": "2612",
								"questProgress(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardClaimed(address,uint256)": "3137",
								"rewardSigner()": "2598",
								"setAvatarNFT(address)": "infinite",
								"setItemNFT(address)": "infinite",
								"setRewardSigner(address)": "infinite",
								"setTreasuryWallet(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"treasuryWallet()": "2531",
								"unpause()": "infinite",
								"updateLevel(address,uint256)": "infinite",
								"updateQuestProgress(address,uint256,uint256)": "infinite",
								"userLevel(address)": "2848"
							},
							"internal": {
								"toEthSignedMessageHash(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 414,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1030,
									"end": 1629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1204,
									"end": 1216,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1258,
									"end": 1259,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1260,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1236,
									"end": 1260,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1236,
									"end": 1246,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1236,
									"end": 1260,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1236,
									"end": 1260,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1236,
									"end": 1260,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1228,
									"end": 1279,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 1228,
									"end": 1279,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1317,
									"end": 1318,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1297,
									"end": 1319,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1297,
									"end": 1319,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1305,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1319,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1297,
									"end": 1319,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1297,
									"end": 1319,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1289,
									"end": 1336,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1289,
									"end": 1336,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1381,
									"end": 1382,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1354,
									"end": 1383,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1354,
									"end": 1383,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1369,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1383,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1354,
									"end": 1383,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1354,
									"end": 1383,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1346,
									"end": 1401,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 1346,
									"end": 1401,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1445,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1419,
									"end": 1446,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1419,
									"end": 1446,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1419,
									"end": 1432,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1419,
									"end": 1446,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1419,
									"end": 1446,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1419,
									"end": 1446,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1411,
									"end": 1462,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1411,
									"end": 1462,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1503,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1482,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1473,
									"end": 1482,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1473,
									"end": 1504,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1533,
									"end": 1541,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1521,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1514,
									"end": 1521,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1514,
									"end": 1542,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1569,
									"end": 1584,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1566,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1552,
									"end": 1566,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1584,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1609,
									"end": 1622,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1606,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1594,
									"end": 1606,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1594,
									"end": 1622,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1629,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 951,
									"end": 957,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 965,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 967,
									"end": 973,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 975,
									"end": 981,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 989,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1035,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 1020,
									"end": 1029,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1011,
									"end": 1018,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1007,
									"end": 1030,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1003,
									"end": 1036,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1039,
									"end": 1118,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1039,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 1000,
									"end": 1120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1160,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1240,
									"end": 1247,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1231,
									"end": 1237,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1229,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1216,
									"end": 1238,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1184,
									"end": 1248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 1184,
									"end": 1248,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1174,
									"end": 1248,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 1174,
									"end": 1248,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1130,
									"end": 1258,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1299,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1379,
									"end": 1386,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1370,
									"end": 1376,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1359,
									"end": 1368,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1377,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1323,
									"end": 1387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1323,
									"end": 1387,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 1313,
									"end": 1387,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1268,
									"end": 1397,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1436,
									"end": 1438,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1518,
									"end": 1525,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1515,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1507,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1494,
									"end": 1516,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1462,
									"end": 1526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 1462,
									"end": 1526,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1452,
									"end": 1526,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1536,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1575,
									"end": 1577,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1657,
									"end": 1664,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1648,
									"end": 1654,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1637,
									"end": 1646,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1655,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1601,
									"end": 1665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1601,
									"end": 1665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1591,
									"end": 1665,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1591,
									"end": 1665,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1546,
									"end": 1675,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1714,
									"end": 1717,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1797,
									"end": 1804,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 1788,
									"end": 1794,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1777,
									"end": 1786,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1773,
									"end": 1795,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 1741,
									"end": 1805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1741,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1731,
									"end": 1805,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1731,
									"end": 1805,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1685,
									"end": 1815,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1946,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1828,
									"end": 1946,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1915,
									"end": 1939,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1933,
									"end": 1938,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1915,
									"end": 1939,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1915,
									"end": 1939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1915,
									"end": 1939,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 1915,
									"end": 1939,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1910,
									"end": 1913,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1903,
									"end": 1940,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1946,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1946,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1952,
									"end": 2174,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1952,
									"end": 2174,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2045,
									"end": 2049,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2083,
									"end": 2085,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2072,
									"end": 2081,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2068,
									"end": 2086,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2086,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2086,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2164,
									"end": 2165,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2153,
									"end": 2162,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2149,
									"end": 2166,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2140,
									"end": 2146,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 2096,
									"end": 2167,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2096,
									"end": 2167,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 2096,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1952,
									"end": 2174,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1952,
									"end": 2174,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1952,
									"end": 2174,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1952,
									"end": 2174,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1952,
									"end": 2174,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2349,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2180,
									"end": 2349,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2264,
									"end": 2275,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2298,
									"end": 2304,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2293,
									"end": 2296,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2286,
									"end": 2305,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2338,
									"end": 2342,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2333,
									"end": 2336,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2329,
									"end": 2343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2343,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2349,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2349,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2349,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2349,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2180,
									"end": 2349,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2519,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2355,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2495,
									"end": 2511,
									"name": "PUSH",
									"source": 9,
									"value": "6176617461724E4654207A65726F000000000000000000000000000000000000"
								},
								{
									"begin": 2491,
									"end": 2492,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2489,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2479,
									"end": 2493,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2472,
									"end": 2512,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2519,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2355,
									"end": 2519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2525,
									"end": 2891,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2525,
									"end": 2891,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2667,
									"end": 2670,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2688,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 9,
									"value": "E"
								},
								{
									"begin": 2747,
									"end": 2750,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2688,
									"end": 2755,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2688,
									"end": 2755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2688,
									"end": 2755,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 2688,
									"end": 2755,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2755,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2755,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2764,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2853,
									"end": 2856,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2764,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2764,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2764,
									"end": 2857,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2764,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2882,
									"end": 2884,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2877,
									"end": 2880,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 2885,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2866,
									"end": 2885,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2866,
									"end": 2885,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2525,
									"end": 2891,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2525,
									"end": 2891,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2525,
									"end": 2891,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2525,
									"end": 2891,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2897,
									"end": 3316,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2897,
									"end": 3316,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3063,
									"end": 3067,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3101,
									"end": 3103,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3090,
									"end": 3099,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3086,
									"end": 3104,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3078,
									"end": 3104,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3078,
									"end": 3104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3150,
									"end": 3159,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3144,
									"end": 3148,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3140,
									"end": 3160,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3136,
									"end": 3137,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3125,
									"end": 3134,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3121,
									"end": 3138,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3114,
									"end": 3161,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3309,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3304,
									"end": 3308,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3309,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 3178,
									"end": 3309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3178,
									"end": 3309,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 3178,
									"end": 3309,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3309,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3170,
									"end": 3309,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2897,
									"end": 3316,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2897,
									"end": 3316,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2897,
									"end": 3316,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2897,
									"end": 3316,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3484,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 3322,
									"end": 3484,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3462,
									"end": 3476,
									"name": "PUSH",
									"source": 9,
									"value": "6974656D4E4654207A65726F0000000000000000000000000000000000000000"
								},
								{
									"begin": 3458,
									"end": 3459,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3450,
									"end": 3456,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3446,
									"end": 3460,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3477,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3484,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3322,
									"end": 3484,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3490,
									"end": 3856,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3490,
									"end": 3856,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3632,
									"end": 3635,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3653,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3717,
									"end": 3719,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 3712,
									"end": 3715,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3720,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 3653,
									"end": 3720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3653,
									"end": 3720,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3653,
									"end": 3720,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3646,
									"end": 3720,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3646,
									"end": 3720,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 3822,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3818,
									"end": 3821,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 3822,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 3729,
									"end": 3822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3729,
									"end": 3822,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3729,
									"end": 3822,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3847,
									"end": 3849,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3842,
									"end": 3845,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3850,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3831,
									"end": 3850,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3490,
									"end": 3856,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3490,
									"end": 3856,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3490,
									"end": 3856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3490,
									"end": 3856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3862,
									"end": 4281,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3862,
									"end": 4281,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4028,
									"end": 4032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4066,
									"end": 4068,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4055,
									"end": 4064,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4051,
									"end": 4069,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4043,
									"end": 4069,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4043,
									"end": 4069,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4115,
									"end": 4124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4109,
									"end": 4113,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4105,
									"end": 4125,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4101,
									"end": 4102,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4090,
									"end": 4099,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4086,
									"end": 4103,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4079,
									"end": 4126,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 4269,
									"end": 4273,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4274,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 4143,
									"end": 4274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4143,
									"end": 4274,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 4143,
									"end": 4274,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4135,
									"end": 4274,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4135,
									"end": 4274,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3862,
									"end": 4281,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3862,
									"end": 4281,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3862,
									"end": 4281,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3862,
									"end": 4281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4287,
									"end": 4450,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4287,
									"end": 4450,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4427,
									"end": 4442,
									"name": "PUSH",
									"source": 9,
									"value": "7472656173757279207A65726F00000000000000000000000000000000000000"
								},
								{
									"begin": 4423,
									"end": 4424,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4415,
									"end": 4421,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4411,
									"end": 4425,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4404,
									"end": 4443,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4287,
									"end": 4450,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4287,
									"end": 4450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4456,
									"end": 4822,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 4456,
									"end": 4822,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4598,
									"end": 4601,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4619,
									"end": 4686,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 4683,
									"end": 4685,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 4678,
									"end": 4681,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4619,
									"end": 4686,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 4619,
									"end": 4686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4619,
									"end": 4686,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 4619,
									"end": 4686,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4612,
									"end": 4686,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4612,
									"end": 4686,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4695,
									"end": 4788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4784,
									"end": 4787,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4695,
									"end": 4788,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4695,
									"end": 4788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4695,
									"end": 4788,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4695,
									"end": 4788,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4813,
									"end": 4815,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4816,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4797,
									"end": 4816,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4797,
									"end": 4816,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4456,
									"end": 4822,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4456,
									"end": 4822,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4456,
									"end": 4822,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4456,
									"end": 4822,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4828,
									"end": 5247,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 4828,
									"end": 5247,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 4998,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5032,
									"end": 5034,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5021,
									"end": 5030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5017,
									"end": 5035,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5009,
									"end": 5035,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5009,
									"end": 5035,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5081,
									"end": 5090,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5075,
									"end": 5079,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5071,
									"end": 5091,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 5067,
									"end": 5068,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5056,
									"end": 5065,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5052,
									"end": 5069,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5045,
									"end": 5092,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5109,
									"end": 5240,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 5235,
									"end": 5239,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5109,
									"end": 5240,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 5109,
									"end": 5240,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5109,
									"end": 5240,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 5109,
									"end": 5240,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5240,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5101,
									"end": 5240,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4828,
									"end": 5247,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4828,
									"end": 5247,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4828,
									"end": 5247,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4828,
									"end": 5247,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5253,
									"end": 5414,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 5253,
									"end": 5414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5393,
									"end": 5406,
									"name": "PUSH",
									"source": 9,
									"value": "7369676E6572207A65726F000000000000000000000000000000000000000000"
								},
								{
									"begin": 5389,
									"end": 5390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5381,
									"end": 5387,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5377,
									"end": 5391,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5370,
									"end": 5407,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5253,
									"end": 5414,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5253,
									"end": 5414,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5786,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 5420,
									"end": 5786,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5562,
									"end": 5565,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5583,
									"end": 5650,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 5647,
									"end": 5649,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 5642,
									"end": 5645,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5583,
									"end": 5650,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 5583,
									"end": 5650,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5583,
									"end": 5650,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 5583,
									"end": 5650,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5576,
									"end": 5650,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5576,
									"end": 5650,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5659,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 5748,
									"end": 5751,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5659,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 5659,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5659,
									"end": 5752,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 5659,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5777,
									"end": 5779,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5772,
									"end": 5775,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5768,
									"end": 5780,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5780,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5780,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5786,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5786,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5786,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5420,
									"end": 5786,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5792,
									"end": 6211,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 5792,
									"end": 6211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5958,
									"end": 5962,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5996,
									"end": 5998,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5985,
									"end": 5994,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5981,
									"end": 5999,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5973,
									"end": 5999,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5973,
									"end": 5999,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6045,
									"end": 6054,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6039,
									"end": 6043,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6035,
									"end": 6055,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 6031,
									"end": 6032,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6020,
									"end": 6029,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6016,
									"end": 6033,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6009,
									"end": 6056,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6073,
									"end": 6204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 6199,
									"end": 6203,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6073,
									"end": 6204,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 6073,
									"end": 6204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6073,
									"end": 6204,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 6073,
									"end": 6204,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6065,
									"end": 6204,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6065,
									"end": 6204,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5792,
									"end": 6211,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5792,
									"end": 6211,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5792,
									"end": 6211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5792,
									"end": 6211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 414,
									"end": 3929,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc600af56c5a74beb46df9fe656e41bee2487b47ba647092225bdb7fa6d3b9bf64736f6c634300081e0033",
									".code": [
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "A8602FEA"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "A8602FEA"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "A87331E5"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "C5FB50D5"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "C69D65D1"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "76618F27"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "83B78188"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "4626402B"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "4626402B"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "47E25EFF"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "57D1F910"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "5FB84D67"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "28BE338"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "280E31CC"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "2F5E6A05"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "323F24AB"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 3929,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 665,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 665,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 665,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 615,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 615,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 486,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 581,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 581,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2357,
											"end": 2422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 546,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 546,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1806,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1806,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 516,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 516,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2428,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2428,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3205,
											"end": 3927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3205,
											"end": 3927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 739,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 739,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 739,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2290,
											"end": 2351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1968,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1968,
											"end": 2125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 1635,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1635,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "tag",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2642,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2642,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2131,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2131,
											"end": 2284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 665,
											"end": 733,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 665,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 615,
											"end": 659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 510,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 486,
											"end": 510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 581,
											"end": 608,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 581,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2357,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2405,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2405,
											"end": 2413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2405,
											"end": 2415,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2405,
											"end": 2415,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2405,
											"end": 2415,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 546,
											"end": 575,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 546,
											"end": 575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1881,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1881,
											"end": 1903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1903,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1873,
											"end": 1917,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 1873,
											"end": 1917,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1954,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1927,
											"end": 1934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1955,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1806,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 516,
											"end": 539,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 516,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2522,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2536,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2510,
											"end": 2550,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2510,
											"end": 2550,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2574,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2575,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2614,
											"end": 2618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4BD6AEDF6FBD4E9CACAF319DC8D6906FF7F7FD2522898365F92AFAB9CB245444"
										},
										{
											"begin": 2620,
											"end": 2628,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2601,
											"end": 2629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2629,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2428,
											"end": 2636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3371,
											"end": 3384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3395,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3396,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3405,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3371,
											"end": 3406,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3406,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 3362,
											"end": 3426,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 3362,
											"end": 3426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3486,
											"end": 3496,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3498,
											"end": 3506,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3508,
											"end": 3514,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 3469,
											"end": 3515,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3515,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3516,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3516,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3516,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3516,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3437,
											"end": 3516,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3554,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3592,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3580,
											"end": 3591,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3579,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 3557,
											"end": 3592,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3592,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 3557,
											"end": 3592,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3592,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3526,
											"end": 3592,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3626,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 3643,
											"end": 3663,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3674,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3665,
											"end": 3674,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3642,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3629,
											"end": 3675,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 3629,
											"end": 3675,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3675,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3675,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3712,
											"end": 3724,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3724,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3693,
											"end": 3724,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3708,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3724,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3693,
											"end": 3724,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3724,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3685,
											"end": 3746,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 3685,
											"end": 3746,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3795,
											"end": 3799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3757,
											"end": 3770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3781,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3782,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3791,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3799,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3899,
											"end": 3909,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 3911,
											"end": 3919,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 3885,
											"end": 3920,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3885,
											"end": 3920,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3927,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3927,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3352,
											"end": 3927,
											"modifierDepth": 2,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3205,
											"end": 3927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 739,
											"end": 804,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 2290,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2336,
											"end": 2342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 2336,
											"end": 2344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 2336,
											"end": 2344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2290,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2049,
											"end": 2070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2049,
											"end": 2070,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2041,
											"end": 2084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2041,
											"end": 2084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2111,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2094,
											"end": 2118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1738,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1724,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1738,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1714,
											"end": 1738,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1706,
											"end": 1752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 1706,
											"end": 1752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1782,
											"end": 1792,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1762,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1762,
											"end": 1793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2757,
											"end": 2775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2761,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2757,
											"end": 2775,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2749,
											"end": 2789,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2749,
											"end": 2789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2830,
											"end": 2838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2817,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2818,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2826,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2838,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2799,
											"end": 2838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2874,
											"end": 2878,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "95B529CEB2B4C5026133EAFCB0F6E7E63F17C39398D1B67E14569272CF3C956B"
										},
										{
											"begin": 2880,
											"end": 2887,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2889,
											"end": 2897,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2853,
											"end": 2898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2853,
											"end": 2898,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2231,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2231,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2210,
											"end": 2231,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2202,
											"end": 2245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 2202,
											"end": 2245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2255,
											"end": 2267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3199,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2987,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3190,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3133,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3133,
											"end": 3191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3192,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3116,
											"end": 3192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3199,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3831,
											"end": 3849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3882,
											"end": 3886,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3897,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3871,
											"end": 3898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3871,
											"end": 3898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3935,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3908,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3908,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2283,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2315,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2321,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2610,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2610,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2653,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2651,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2659,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2714,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2689,
											"end": 2716,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2717,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 2769,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2771,
											"end": 2772,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2775,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2751,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2751,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2744,
											"end": 2776,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2295,
											"end": 2901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2862,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2872,
											"end": 2881,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2864,
											"end": 2889,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2889,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2807,
											"end": 2890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2907,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7375,
											"end": 7395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7366,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7366,
											"end": 7395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7366,
											"end": 7395,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7362,
											"end": 7806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7471,
											"end": 7500,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7462,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7462,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7462,
											"end": 7500,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 6,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7523,
											"end": 7546,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 7458,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7576,
											"end": 7611,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7567,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7567,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7567,
											"end": 7611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7670,
											"end": 7678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7662,
											"end": 7679,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7679,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 6,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7634,
											"end": 7680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7680,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 7563,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7710,
											"end": 7740,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7701,
											"end": 7740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7706,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7701,
											"end": 7740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7701,
											"end": 7740,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7786,
											"end": 7794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 6,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7763,
											"end": 7795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7763,
											"end": 7795,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 7697,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5329,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6349,
											"name": "PUSH",
											"source": 6,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6278,
											"end": 6279,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6280,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6349,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6381,
											"end": 6382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6415,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6365,
											"end": 6419,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 6266,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6557,
											"end": 6558,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6564,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 6541,
											"end": 6565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6565,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6597,
											"end": 6598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6579,
											"end": 6599,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6664,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6666,
											"end": 6676,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 6615,
											"end": 6677,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 6575,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6714,
											"end": 6734,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6744,
											"end": 6745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6746,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6698,
											"end": 6747,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2406,
											"end": 2418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2406,
											"end": 2418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2364,
											"end": 2424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2531,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2540,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "tag",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 2540,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2531,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2565,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 2531,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2513,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2430,
											"end": 2572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 2637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2692,
											"end": 2697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2661,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 2661,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2808,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "tag",
											"source": 9,
											"value": "353"
										},
										{
											"begin": 2808,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2795,
											"end": 2845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2710,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 3018,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2857,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2959,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2959,
											"end": 3011,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 2959,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2954,
											"end": 2957,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 3012,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 3018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 3018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 3018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3276,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3132,
											"end": 3136,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3155,
											"end": 3173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3173,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3173,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3266,
											"end": 3267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3264,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3183,
											"end": 3269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 3183,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3276,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3400,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3282,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3369,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3387,
											"end": 3392,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3369,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 3369,
											"end": 3393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3369,
											"end": 3393,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 3369,
											"end": 3393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3364,
											"end": 3367,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3357,
											"end": 3394,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3282,
											"end": 3400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3628,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3499,
											"end": 3503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3539,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3526,
											"end": 3535,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3522,
											"end": 3540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3540,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3514,
											"end": 3540,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 3618,
											"end": 3619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3607,
											"end": 3616,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3620,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3594,
											"end": 3600,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3550,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3550,
											"end": 3621,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 3550,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3776,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3634,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3733,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3733,
											"end": 3770,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 3733,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3720,
											"end": 3770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3776,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3945,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3782,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3932,
											"end": 3937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3885,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 3885,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3945,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3782,
											"end": 3945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 4205,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3951,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4060,
											"end": 4064,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4098,
											"end": 4100,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4087,
											"end": 4096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4101,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4101,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 4195,
											"end": 4196,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4193,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4180,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4111,
											"end": 4198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4198,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 4111,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 4205,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 4205,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 4205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 4205,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3951,
											"end": 4205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4301,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4211,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4245,
											"end": 4252,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4293,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4281,
											"end": 4294,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4274,
											"end": 4295,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4263,
											"end": 4295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4301,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4307,
											"end": 4416,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4307,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 4403,
											"end": 4408,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4388,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4383,
											"end": 4386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4376,
											"end": 4410,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4307,
											"end": 4416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4307,
											"end": 4416,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4307,
											"end": 4416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4632,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4422,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4509,
											"end": 4513,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4536,
											"end": 4545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4532,
											"end": 4550,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4550,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 4622,
											"end": 4623,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4607,
											"end": 4624,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4598,
											"end": 4604,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4560,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4560,
											"end": 4625,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 4560,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4632,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4632,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4422,
											"end": 4632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 4638,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4748,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4878,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 4761,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4872,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4884,
											"end": 5001,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4884,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4993,
											"end": 4994,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 4995,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5020,
											"end": 5572,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 5020,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5077,
											"end": 5085,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5140,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5122,
											"end": 5128,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5118,
											"end": 5135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5141,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 5104,
											"end": 5226,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5145,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 5145,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5224,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 5145,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5226,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 5104,
											"end": 5226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5245,
											"end": 5265,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5265,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5265,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5288,
											"end": 5306,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5280,
											"end": 5286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5307,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5274,
											"end": 5391,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5274,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 5274,
											"end": 5391,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 5310,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 5310,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5310,
											"end": 5389,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 5310,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5274,
											"end": 5391,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 5274,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5424,
											"end": 5428,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5416,
											"end": 5422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5412,
											"end": 5429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5429,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5474,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5462,
											"end": 5468,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5475,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5448,
											"end": 5456,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5441,
											"end": 5482,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5438,
											"end": 5566,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5438,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 5438,
											"end": 5566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5485,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 5485,
											"end": 5564,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 5485,
											"end": 5564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5485,
											"end": 5564,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 5485,
											"end": 5564,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5438,
											"end": 5566,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 5438,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5020,
											"end": 5572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5020,
											"end": 5572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5020,
											"end": 5572,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5020,
											"end": 5572,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5020,
											"end": 5572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5020,
											"end": 5572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5666,
											"end": 5672,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5682,
											"end": 5688,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5696,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5741,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5727,
											"end": 5736,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5718,
											"end": 5725,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5714,
											"end": 5737,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5710,
											"end": 5742,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5745,
											"end": 5824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "tag",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 5745,
											"end": 5824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 5707,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5890,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 5935,
											"end": 5942,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5915,
											"end": 5924,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5911,
											"end": 5933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 5890,
											"end": 5943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5943,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 5890,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5880,
											"end": 5943,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5880,
											"end": 5943,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5836,
											"end": 5953,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6018,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 6063,
											"end": 6070,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6060,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6052,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6039,
											"end": 6061,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6018,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6018,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6018,
											"end": 6071,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 6018,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6008,
											"end": 6071,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6008,
											"end": 6071,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5963,
											"end": 6081,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6148,
											"end": 6150,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6146,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6133,
											"end": 6151,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6120,
											"end": 6152,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6179,
											"end": 6197,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6171,
											"end": 6177,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6168,
											"end": 6198,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 6165,
											"end": 6282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6201,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 6201,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 6201,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6201,
											"end": 6280,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 6201,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6165,
											"end": 6282,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 6165,
											"end": 6282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 6370,
											"end": 6377,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6361,
											"end": 6367,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6350,
											"end": 6359,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6346,
											"end": 6368,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6314,
											"end": 6378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6378,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 6314,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6378,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6378,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6091,
											"end": 6388,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5578,
											"end": 6395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 7020,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 6401,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6486,
											"end": 6492,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6500,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6545,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6531,
											"end": 6540,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6522,
											"end": 6529,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6518,
											"end": 6541,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6514,
											"end": 6546,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 6511,
											"end": 6630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6549,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 6549,
											"end": 6628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6549,
											"end": 6628,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 6549,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6630,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 6511,
											"end": 6630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6739,
											"end": 6746,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6730,
											"end": 6736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6719,
											"end": 6728,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 6694,
											"end": 6747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6694,
											"end": 6747,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 6694,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6747,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6684,
											"end": 6747,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6640,
											"end": 6757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6796,
											"end": 6798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6822,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6867,
											"end": 6874,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6858,
											"end": 6864,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6822,
											"end": 6875,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6822,
											"end": 6875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6822,
											"end": 6875,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 6822,
											"end": 6875,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6812,
											"end": 6875,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6812,
											"end": 6875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6767,
											"end": 6885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6924,
											"end": 6926,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6950,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6995,
											"end": 7002,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6971,
											"end": 6993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6950,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6950,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6950,
											"end": 7003,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 6950,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 7003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6895,
											"end": 7013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 7020,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 7020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 7020,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 7020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 7020,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7195,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7026,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7110,
											"end": 7121,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7150,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7132,
											"end": 7151,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7188,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7179,
											"end": 7182,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7189,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7160,
											"end": 7189,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7160,
											"end": 7189,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7195,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7195,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7026,
											"end": 7195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7201,
											"end": 7360,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 7201,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7341,
											"end": 7352,
											"name": "PUSH",
											"source": 9,
											"value": "7A65726F20616464720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7337,
											"end": 7338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7325,
											"end": 7339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7318,
											"end": 7353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7201,
											"end": 7360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7201,
											"end": 7360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 7366,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 7593,
											"end": 7594,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7588,
											"end": 7591,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 7529,
											"end": 7595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7529,
											"end": 7595,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 7529,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7522,
											"end": 7595,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7522,
											"end": 7595,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7604,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7693,
											"end": 7696,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7604,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 7604,
											"end": 7697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7604,
											"end": 7697,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 7604,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7717,
											"end": 7720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7713,
											"end": 7725,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 7725,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 7725,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7731,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 8156,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 7737,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7943,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7918,
											"end": 7944,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7918,
											"end": 7944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7990,
											"end": 7999,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7980,
											"end": 8000,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7976,
											"end": 7977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7965,
											"end": 7974,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7961,
											"end": 7978,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7954,
											"end": 8001,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8018,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 8144,
											"end": 8148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8018,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 8018,
											"end": 8149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8018,
											"end": 8149,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 8018,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8010,
											"end": 8149,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8010,
											"end": 8149,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 8156,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 8156,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 8156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7737,
											"end": 8156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8321,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 8162,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8302,
											"end": 8313,
											"name": "PUSH",
											"source": 9,
											"value": "7A65726F20757365720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8296,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8286,
											"end": 8300,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8279,
											"end": 8314,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8162,
											"end": 8321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8692,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 8327,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8469,
											"end": 8472,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8490,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 8554,
											"end": 8555,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 8549,
											"end": 8552,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 8490,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8556,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 8490,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8556,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8483,
											"end": 8556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 8654,
											"end": 8657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 8565,
											"end": 8658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8685,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8678,
											"end": 8681,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8674,
											"end": 8686,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8692,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8692,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8692,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8864,
											"end": 8868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8904,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8891,
											"end": 8900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8879,
											"end": 8905,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8879,
											"end": 8905,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8951,
											"end": 8960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8945,
											"end": 8949,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8941,
											"end": 8961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8926,
											"end": 8935,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8922,
											"end": 8939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8915,
											"end": 8962,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 8979,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8971,
											"end": 9110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8698,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9123,
											"end": 9288,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 9123,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "PUSH",
											"source": 9,
											"value": "616C726561647920636C61696D65640000000000000000000000000000000000"
										},
										{
											"begin": 9259,
											"end": 9260,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9251,
											"end": 9257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9247,
											"end": 9261,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9240,
											"end": 9281,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9123,
											"end": 9288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9123,
											"end": 9288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9436,
											"end": 9439,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9457,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 9521,
											"end": 9523,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9457,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 9457,
											"end": 9524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9457,
											"end": 9524,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 9457,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9524,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9524,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 9533,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9533,
											"end": 9626,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 9533,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9651,
											"end": 9653,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9646,
											"end": 9649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9654,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9635,
											"end": 9654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9635,
											"end": 9654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9832,
											"end": 9836,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9870,
											"end": 9872,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9855,
											"end": 9873,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9847,
											"end": 9873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9919,
											"end": 9928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9913,
											"end": 9917,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9909,
											"end": 9929,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9905,
											"end": 9906,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9894,
											"end": 9903,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9890,
											"end": 9907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9883,
											"end": 9930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 10073,
											"end": 10077,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 10078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 9947,
											"end": 10078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 10078,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 9947,
											"end": 10078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9939,
											"end": 10078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9939,
											"end": 10078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 10085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9666,
											"end": 10085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10185,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 10091,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10124,
											"end": 10132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10177,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10168,
											"end": 10170,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 10164,
											"end": 10178,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10143,
											"end": 10178,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10143,
											"end": 10178,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10185,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10185,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10185,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10091,
											"end": 10185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10285,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 10191,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10230,
											"end": 10237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10259,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 10273,
											"end": 10278,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10279,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 10259,
											"end": 10279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10259,
											"end": 10279,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 10259,
											"end": 10279,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10279,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10248,
											"end": 10279,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10285,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10285,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10285,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10191,
											"end": 10285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10330,
											"end": 10337,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10359,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 10379,
											"end": 10384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10359,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 10359,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10359,
											"end": 10385,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 10359,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10391,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10291,
											"end": 10391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10397,
											"end": 10554,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 10397,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10502,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 10522,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 10540,
											"end": 10545,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10522,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 10522,
											"end": 10546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10522,
											"end": 10546,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 10522,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10502,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 10502,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10502,
											"end": 10547,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 10502,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10497,
											"end": 10500,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10490,
											"end": 10548,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10397,
											"end": 10554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10397,
											"end": 10554,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10397,
											"end": 10554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10560,
											"end": 10639,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 10560,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10599,
											"end": 10606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10628,
											"end": 10633,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10560,
											"end": 10639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10560,
											"end": 10639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10560,
											"end": 10639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10560,
											"end": 10639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10645,
											"end": 10802,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 10645,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10750,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 10770,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 10788,
											"end": 10793,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10770,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 10770,
											"end": 10794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10770,
											"end": 10794,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 10770,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10750,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 10750,
											"end": 10795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10750,
											"end": 10795,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 10750,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10745,
											"end": 10748,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10738,
											"end": 10796,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10645,
											"end": 10802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10645,
											"end": 10802,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10645,
											"end": 10802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 11346,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 10808,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10976,
											"end": 10979,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10991,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 11062,
											"end": 11065,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11053,
											"end": 11059,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10991,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 10991,
											"end": 11066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10991,
											"end": 11066,
											"name": "tag",
											"source": 9,
											"value": "429"
										},
										{
											"begin": 10991,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11091,
											"end": 11093,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 11086,
											"end": 11089,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11075,
											"end": 11094,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11104,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 11175,
											"end": 11178,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11166,
											"end": 11172,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11104,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11104,
											"end": 11179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11104,
											"end": 11179,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 11104,
											"end": 11179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11204,
											"end": 11206,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11199,
											"end": 11202,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11195,
											"end": 11207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11188,
											"end": 11207,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11188,
											"end": 11207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11217,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 11288,
											"end": 11291,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11279,
											"end": 11285,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11217,
											"end": 11292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 11217,
											"end": 11292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11217,
											"end": 11292,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 11217,
											"end": 11292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11319,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11312,
											"end": 11315,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11308,
											"end": 11320,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11301,
											"end": 11320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11301,
											"end": 11320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11337,
											"end": 11340,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11330,
											"end": 11340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11330,
											"end": 11340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 11346,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 11346,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 11346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 11346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11519,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 11352,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11492,
											"end": 11511,
											"name": "PUSH",
											"source": 9,
											"value": "696E76616C6964207369676E6174757265000000000000000000000000000000"
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11480,
											"end": 11486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11476,
											"end": 11490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11469,
											"end": 11512,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11519,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11352,
											"end": 11519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11891,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 11525,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11667,
											"end": 11670,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 11752,
											"end": 11754,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 11747,
											"end": 11750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 11688,
											"end": 11755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11755,
											"name": "tag",
											"source": 9,
											"value": "434"
										},
										{
											"begin": 11688,
											"end": 11755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11681,
											"end": 11755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11681,
											"end": 11755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11764,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 11853,
											"end": 11856,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11764,
											"end": 11857,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 11764,
											"end": 11857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11764,
											"end": 11857,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 11764,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11882,
											"end": 11884,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11877,
											"end": 11880,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11873,
											"end": 11885,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11866,
											"end": 11885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11891,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11891,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11525,
											"end": 11891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11897,
											"end": 12316,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 11897,
											"end": 12316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12063,
											"end": 12067,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12101,
											"end": 12103,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12090,
											"end": 12099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12086,
											"end": 12104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12078,
											"end": 12104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12150,
											"end": 12159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12144,
											"end": 12148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12140,
											"end": 12160,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12125,
											"end": 12134,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12121,
											"end": 12138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12114,
											"end": 12161,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 12304,
											"end": 12308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 12178,
											"end": 12309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12178,
											"end": 12309,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 12178,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12170,
											"end": 12309,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11897,
											"end": 12316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11897,
											"end": 12316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11897,
											"end": 12316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11897,
											"end": 12316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12654,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 12322,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12443,
											"end": 12447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12481,
											"end": 12483,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12470,
											"end": 12479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12466,
											"end": 12484,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12484,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12484,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 12562,
											"end": 12563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12560,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12547,
											"end": 12564,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12538,
											"end": 12544,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 12494,
											"end": 12565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12494,
											"end": 12565,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 12494,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 12643,
											"end": 12645,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12632,
											"end": 12641,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12628,
											"end": 12646,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12619,
											"end": 12625,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 12575,
											"end": 12647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12575,
											"end": 12647,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 12575,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12654,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12654,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12654,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12322,
											"end": 12654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12660,
											"end": 12826,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 12660,
											"end": 12826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12800,
											"end": 12818,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12788,
											"end": 12794,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12784,
											"end": 12798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12777,
											"end": 12819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12660,
											"end": 12826,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12660,
											"end": 12826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12832,
											"end": 13198,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 12832,
											"end": 13198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12974,
											"end": 12977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12995,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 13059,
											"end": 13061,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 13054,
											"end": 13057,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12995,
											"end": 13062,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 12995,
											"end": 13062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12995,
											"end": 13062,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 12995,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12988,
											"end": 13062,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12988,
											"end": 13062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13071,
											"end": 13164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13160,
											"end": 13163,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13071,
											"end": 13164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 13071,
											"end": 13164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13071,
											"end": 13164,
											"name": "tag",
											"source": 9,
											"value": "444"
										},
										{
											"begin": 13071,
											"end": 13164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13189,
											"end": 13191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13184,
											"end": 13187,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13180,
											"end": 13192,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13173,
											"end": 13192,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12832,
											"end": 13198,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12832,
											"end": 13198,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12832,
											"end": 13198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12832,
											"end": 13198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13204,
											"end": 13623,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 13204,
											"end": 13623,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13370,
											"end": 13374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13408,
											"end": 13410,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13397,
											"end": 13406,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13393,
											"end": 13411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13385,
											"end": 13411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13385,
											"end": 13411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13457,
											"end": 13466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13451,
											"end": 13455,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13447,
											"end": 13467,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13443,
											"end": 13444,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13432,
											"end": 13441,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13428,
											"end": 13445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13421,
											"end": 13468,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13485,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 13611,
											"end": 13615,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13485,
											"end": 13616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 13485,
											"end": 13616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13485,
											"end": 13616,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 13485,
											"end": 13616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13477,
											"end": 13616,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13477,
											"end": 13616,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13204,
											"end": 13623,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13204,
											"end": 13623,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13204,
											"end": 13623,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13204,
											"end": 13623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 13810,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 13629,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13769,
											"end": 13802,
											"name": "PUSH",
											"source": 9,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13765,
											"end": 13766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13757,
											"end": 13763,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13753,
											"end": 13767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13746,
											"end": 13803,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 13810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13629,
											"end": 13810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 14182,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 13816,
											"end": 14182,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13958,
											"end": 13961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13979,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 14043,
											"end": 14045,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 14038,
											"end": 14041,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13979,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 13979,
											"end": 14046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13979,
											"end": 14046,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 13979,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13972,
											"end": 14046,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13972,
											"end": 14046,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14055,
											"end": 14148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14144,
											"end": 14147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14055,
											"end": 14148,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 14055,
											"end": 14148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14055,
											"end": 14148,
											"name": "tag",
											"source": 9,
											"value": "450"
										},
										{
											"begin": 14055,
											"end": 14148,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14173,
											"end": 14175,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14168,
											"end": 14171,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14164,
											"end": 14176,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14157,
											"end": 14176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14157,
											"end": 14176,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 14182,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 14182,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 14182,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13816,
											"end": 14182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14188,
											"end": 14607,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 14188,
											"end": 14607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14354,
											"end": 14358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14392,
											"end": 14394,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14381,
											"end": 14390,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14377,
											"end": 14395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14369,
											"end": 14395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14369,
											"end": 14395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14441,
											"end": 14450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14439,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14431,
											"end": 14451,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14427,
											"end": 14428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14416,
											"end": 14425,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14412,
											"end": 14429,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14405,
											"end": 14452,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14595,
											"end": 14599,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14600,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 14469,
											"end": 14600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14469,
											"end": 14600,
											"name": "tag",
											"source": 9,
											"value": "452"
										},
										{
											"begin": 14469,
											"end": 14600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14461,
											"end": 14600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14461,
											"end": 14600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14188,
											"end": 14607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14188,
											"end": 14607,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14188,
											"end": 14607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14188,
											"end": 14607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14613,
											"end": 14761,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 14613,
											"end": 14761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14715,
											"end": 14726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14752,
											"end": 14755,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14737,
											"end": 14755,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14737,
											"end": 14755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14613,
											"end": 14761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14613,
											"end": 14761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14613,
											"end": 14761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14613,
											"end": 14761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14613,
											"end": 14761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14767,
											"end": 14981,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 14767,
											"end": 14981,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14907,
											"end": 14973,
											"name": "PUSH",
											"source": 9,
											"value": "19457468657265756D205369676E6564204D6573736167653A0A333200000000"
										},
										{
											"begin": 14903,
											"end": 14904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14895,
											"end": 14901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14891,
											"end": 14905,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14884,
											"end": 14974,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14767,
											"end": 14981,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14767,
											"end": 14981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15389,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 14987,
											"end": 15389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15147,
											"end": 15150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15168,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 15250,
											"end": 15252,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 15245,
											"end": 15248,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15168,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 15168,
											"end": 15253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15168,
											"end": 15253,
											"name": "tag",
											"source": 9,
											"value": "456"
										},
										{
											"begin": 15168,
											"end": 15253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15161,
											"end": 15253,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15161,
											"end": 15253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15262,
											"end": 15355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 15351,
											"end": 15354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15262,
											"end": 15355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 15262,
											"end": 15355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15262,
											"end": 15355,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 15262,
											"end": 15355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15380,
											"end": 15382,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 15375,
											"end": 15378,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15371,
											"end": 15383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15364,
											"end": 15383,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15364,
											"end": 15383,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15389,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14987,
											"end": 15389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15395,
											"end": 15472,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 15395,
											"end": 15472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15432,
											"end": 15439,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15461,
											"end": 15466,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15450,
											"end": 15466,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15450,
											"end": 15466,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15395,
											"end": 15472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15395,
											"end": 15472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15395,
											"end": 15472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15395,
											"end": 15472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15557,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 15478,
											"end": 15557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15517,
											"end": 15524,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15546,
											"end": 15551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15535,
											"end": 15551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15535,
											"end": 15551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15557,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15557,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15557,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15478,
											"end": 15557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15563,
											"end": 15720,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 15563,
											"end": 15720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15668,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 15688,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 15706,
											"end": 15711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 15688,
											"end": 15712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15688,
											"end": 15712,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 15688,
											"end": 15712,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15668,
											"end": 15713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 15668,
											"end": 15713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15668,
											"end": 15713,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 15668,
											"end": 15713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15663,
											"end": 15666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15656,
											"end": 15714,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15563,
											"end": 15720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15563,
											"end": 15720,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15563,
											"end": 15720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 16248,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 15726,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15939,
											"end": 15942,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15961,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 16105,
											"end": 16108,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15961,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 15961,
											"end": 16109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15961,
											"end": 16109,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 15961,
											"end": 16109,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15954,
											"end": 16109,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15954,
											"end": 16109,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16119,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 16190,
											"end": 16193,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16181,
											"end": 16187,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 16119,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 16119,
											"end": 16194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16119,
											"end": 16194,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 16119,
											"end": 16194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16219,
											"end": 16221,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16214,
											"end": 16217,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16210,
											"end": 16222,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16203,
											"end": 16222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16203,
											"end": 16222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16239,
											"end": 16242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16232,
											"end": 16242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 16248,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 16248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 16248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 16248,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15726,
											"end": 16248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16254,
											"end": 16424,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 16254,
											"end": 16424,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16394,
											"end": 16416,
											"name": "PUSH",
											"source": 9,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 16390,
											"end": 16391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16382,
											"end": 16388,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16378,
											"end": 16392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16371,
											"end": 16417,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16254,
											"end": 16424,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16254,
											"end": 16424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16430,
											"end": 16796,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 16430,
											"end": 16796,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16572,
											"end": 16575,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16593,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 16657,
											"end": 16659,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 16652,
											"end": 16655,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16593,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 16593,
											"end": 16660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16593,
											"end": 16660,
											"name": "tag",
											"source": 9,
											"value": "468"
										},
										{
											"begin": 16593,
											"end": 16660,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 16660,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16586,
											"end": 16660,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16758,
											"end": 16761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 16669,
											"end": 16762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16669,
											"end": 16762,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 16669,
											"end": 16762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16787,
											"end": 16789,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16782,
											"end": 16785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16778,
											"end": 16790,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16771,
											"end": 16790,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16771,
											"end": 16790,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16430,
											"end": 16796,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16430,
											"end": 16796,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16430,
											"end": 16796,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16430,
											"end": 16796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 17221,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 16802,
											"end": 17221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16968,
											"end": 16972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17006,
											"end": 17008,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16995,
											"end": 17004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16991,
											"end": 17009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16983,
											"end": 17009,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17055,
											"end": 17064,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17049,
											"end": 17053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17045,
											"end": 17065,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17041,
											"end": 17042,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17030,
											"end": 17039,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17026,
											"end": 17043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17019,
											"end": 17066,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 17209,
											"end": 17213,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 17083,
											"end": 17214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 17083,
											"end": 17214,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17075,
											"end": 17214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17075,
											"end": 17214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 17221,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 17221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 17221,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16802,
											"end": 17221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17227,
											"end": 17407,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 17227,
											"end": 17407,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17275,
											"end": 17352,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17265,
											"end": 17353,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17372,
											"end": 17376,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 17369,
											"end": 17370,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17362,
											"end": 17377,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17396,
											"end": 17400,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17393,
											"end": 17394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17386,
											"end": 17401,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17413,
											"end": 17531,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 17413,
											"end": 17531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17500,
											"end": 17524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 17518,
											"end": 17523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17500,
											"end": 17524,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 17500,
											"end": 17524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17500,
											"end": 17524,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 17500,
											"end": 17524,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17495,
											"end": 17498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17488,
											"end": 17525,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17413,
											"end": 17531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17413,
											"end": 17531,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17413,
											"end": 17531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17537,
											"end": 17759,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 17537,
											"end": 17759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17630,
											"end": 17634,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17668,
											"end": 17670,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17657,
											"end": 17666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17653,
											"end": 17671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17645,
											"end": 17671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17645,
											"end": 17671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17681,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 17749,
											"end": 17750,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17738,
											"end": 17747,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17734,
											"end": 17751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17725,
											"end": 17731,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 17681,
											"end": 17752,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 17681,
											"end": 17752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17681,
											"end": 17752,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 17681,
											"end": 17752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17537,
											"end": 17759,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 17537,
											"end": 17759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17537,
											"end": 17759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17537,
											"end": 17759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17537,
											"end": 17759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17765,
											"end": 17851,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 17765,
											"end": 17851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17800,
											"end": 17807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17840,
											"end": 17844,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 17833,
											"end": 17838,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17829,
											"end": 17845,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 17818,
											"end": 17845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17818,
											"end": 17845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17765,
											"end": 17851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17765,
											"end": 17851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17765,
											"end": 17851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17765,
											"end": 17851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17857,
											"end": 17969,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 17857,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17940,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17956,
											"end": 17961,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17940,
											"end": 17962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 17940,
											"end": 17962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17940,
											"end": 17962,
											"name": "tag",
											"source": 9,
											"value": "479"
										},
										{
											"begin": 17940,
											"end": 17962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17935,
											"end": 17938,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17928,
											"end": 17963,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17857,
											"end": 17969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17857,
											"end": 17969,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17857,
											"end": 17969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18148,
											"end": 18152,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18186,
											"end": 18189,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 18175,
											"end": 18184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18171,
											"end": 18190,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18163,
											"end": 18190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18200,
											"end": 18271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 18268,
											"end": 18269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18257,
											"end": 18266,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18253,
											"end": 18270,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18244,
											"end": 18250,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 18200,
											"end": 18271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 18200,
											"end": 18271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18200,
											"end": 18271,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 18200,
											"end": 18271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18281,
											"end": 18349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 18345,
											"end": 18347,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18334,
											"end": 18343,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18330,
											"end": 18348,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18321,
											"end": 18327,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 18281,
											"end": 18349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 18281,
											"end": 18349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18281,
											"end": 18349,
											"name": "tag",
											"source": 9,
											"value": "482"
										},
										{
											"begin": 18281,
											"end": 18349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18359,
											"end": 18431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 18427,
											"end": 18429,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18416,
											"end": 18425,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18412,
											"end": 18430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18403,
											"end": 18409,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 18359,
											"end": 18431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 18359,
											"end": 18431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18359,
											"end": 18431,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 18359,
											"end": 18431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18441,
											"end": 18513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 18509,
											"end": 18511,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 18498,
											"end": 18507,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18494,
											"end": 18512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18485,
											"end": 18491,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 18441,
											"end": 18513,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 18441,
											"end": 18513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18441,
											"end": 18513,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 18441,
											"end": 18513,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17975,
											"end": 18520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Game_Logic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"avatarNFT()": "2f5e6a05",
							"claimReward(uint256,uint256,bytes)": "76618f27",
							"itemNFT()": "57d1f910",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"questProgress(address,uint256)": "028be338",
							"renounceOwnership()": "715018a6",
							"rewardClaimed(address,uint256)": "83b78188",
							"rewardSigner()": "323f24ab",
							"setAvatarNFT(address)": "a87331e5",
							"setItemNFT(address)": "47e25eff",
							"setRewardSigner(address)": "c69d65d1",
							"setTreasuryWallet(address)": "a8602fea",
							"transferOwnership(address)": "f2fde38b",
							"treasuryWallet()": "4626402b",
							"unpause()": "3f4ba83a",
							"updateLevel(address,uint256)": "5fb84d67",
							"updateQuestProgress(address,uint256,uint256)": "c5fb50d5",
							"userLevel(address)": "280e31cc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_avatarNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_itemNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLevel\",\"type\":\"uint256\"}],\"name\":\"LevelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"questId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"progress\",\"type\":\"uint256\"}],\"name\":\"QuestProgressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"avatarNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"itemNFT\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"questProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_avatarNFT\",\"type\":\"address\"}],\"name\":\"setAvatarNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_itemNFT\",\"type\":\"address\"}],\"name\":\"setItemNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"setRewardSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newLevel\",\"type\":\"uint256\"}],\"name\":\"updateLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"questId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"progress\",\"type\":\"uint256\"}],\"name\":\"updateQuestProgress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Game_Logic.sol\":\"SavePointGameLogic\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"Game_Logic.sol\":{\"keccak256\":\"0x2f760c2d0ef128b380f16fb22f491c990b8e5c71fc17f6e5d243c8b91b8ad6fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bcc7208e6101c95e10311fdff22628598d6a8f78548d4d6d476dc19db33574f\",\"dweb:/ipfs/QmPkFu6CdGBJSWN9LnDM85KKVygSCPwgA5ykv52MrA5yqY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 165,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 266,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 967,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "avatarNFT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)560"
							},
							{
								"astId": 970,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "itemNFT",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC1155)443"
							},
							{
								"astId": 972,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "treasuryWallet",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 974,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "rewardSigner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 978,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "userLevel",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 984,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "questProgress",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 990,
								"contract": "Game_Logic.sol:SavePointGameLogic",
								"label": "rewardClaimed",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC1155)443": {
								"encoding": "inplace",
								"label": "contract IERC1155",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)560": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							590
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 591,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 590,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 590,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								590
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							590
						],
						"Pausable": [
							255
						]
					},
					"id": 256,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 150,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 256,
							"sourceUnit": 591,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 152,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 590,
										"src": "632:7:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 151,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 255,
							"linearizedBaseContracts": [
								255,
								590
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 158,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 163,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 255,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 164,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 174,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 255,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 177,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 180,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 182,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 185,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 188,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 190,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 196,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 165,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 195,
												"id": 197,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 255,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 204,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 255,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 216,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 199,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 255,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 228,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 233,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 232,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 225,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 255,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 249,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 241,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 190,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 255,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 256,
							"src": "602:1950:1",
							"usedErrors": [],
							"usedEvents": [
								158,
								163
							]
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							320
						]
					},
					"id": 321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 257,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 320,
							"linearizedBaseContracts": [
								320
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 261,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 260,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 264,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 263,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 266,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 320,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 265,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 270,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 274,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 320,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 277,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 280,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 285,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 289,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 290,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 288,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 295,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 296,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 320,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 320,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 314,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 315,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 320,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 321,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							443
						],
						"IERC165": [
							950
						]
					},
					"id": 444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 322,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 444,
							"sourceUnit": 951,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 323,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 950,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "IERC165",
										"nameLocations": [
											"359:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 950,
										"src": "359:7:3"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "359:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 325,
								"nodeType": "StructuredDocumentation",
								"src": "200:136:3",
								"text": " @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."
							},
							"fullyImplemented": false,
							"id": 443,
							"linearizedBaseContracts": [
								443,
								950
							],
							"name": "IERC1155",
							"nameLocation": "347:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "373:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 340,
									"name": "TransferSingle",
									"nameLocation": "509:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "540:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "524:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "566:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "550:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "550:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "588:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "572:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "600:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "592:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "612:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "604:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "523:95:3"
									},
									"src": "503:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "625:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 355,
									"name": "TransferBatch",
									"nameLocation": "780:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "819:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "803:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "853:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "837:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "883:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "867:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "905:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "895:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 348,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "895:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 349,
													"nodeType": "ArrayTypeName",
													"src": "895:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "928:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "918:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 351,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "918:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 352,
													"nodeType": "ArrayTypeName",
													"src": "918:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:147:3"
									},
									"src": "774:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "947:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 364,
									"name": "ApprovalForAll",
									"nameLocation": "1105:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1136:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1120:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1145:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1176:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1171:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:66:3"
									},
									"src": "1099:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1192:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 371,
									"name": "URI",
									"nameLocation": "1546:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1550:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1550:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1580:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1564:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:34:3"
									},
									"src": "1540:44:3"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1590:90:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`."
									},
									"functionSelector": "00fdd58e",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1694:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1712:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1704:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1729:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1721:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:29:3"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1756:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:9:3"
									},
									"scope": 443,
									"src": "1685:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "1771:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "1973:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1997:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 383,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1997:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 384,
													"nodeType": "ArrayTypeName",
													"src": "1997:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2053:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2034:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 386,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2034:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 387,
													"nodeType": "ArrayTypeName",
													"src": "2034:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:75:3"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2086:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 390,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2086:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 391,
													"nodeType": "ArrayTypeName",
													"src": "2086:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:18:3"
									},
									"scope": 443,
									"src": "1964:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2110:254:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"functionSelector": "a22cb465",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2378:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2404:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2396:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2419:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2414:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2414:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:33:3"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:0:3"
									},
									"scope": 443,
									"src": "2369:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "2444:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2593:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2618:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2610:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2635:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2627:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:35:3"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2668:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2668:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:6:3"
									},
									"scope": 443,
									"src": "2584:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2680:927:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3621:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3646:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3638:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3660:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3652:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3672:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3664:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3664:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3684:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3676:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3706:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3691:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3691:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3637:74:3"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3720:0:3"
									},
									"scope": 443,
									"src": "3612:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3727:831:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4572:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4611:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4603:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4633:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4625:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4664:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4645:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4645:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "4645:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4696:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4677:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4677:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 436,
													"nodeType": "ArrayTypeName",
													"src": "4677:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4727:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4712:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4712:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4593:144:3"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4746:0:3"
									},
									"scope": 443,
									"src": "4563:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 444,
							"src": "337:4412:3",
							"usedErrors": [],
							"usedEvents": [
								340,
								355,
								364,
								371
							]
						}
					],
					"src": "110:4640:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							950
						],
						"IERC721": [
							560
						]
					},
					"id": 561,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 445,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 561,
							"sourceUnit": 951,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 446,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 950,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 449,
										"name": "IERC165",
										"nameLocations": [
											"288:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 950,
										"src": "288:7:4"
									},
									"id": 450,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 448,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:4",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 560,
							"linearizedBaseContracts": [
								560,
								950
							],
							"name": "IERC721",
							"nameLocation": "277:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 459,
									"name": "Transfer",
									"nameLocation": "401:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "410:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "432:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "452:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:4"
									},
									"src": "395:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 468,
									"name": "Approval",
									"nameLocation": "588:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "597:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "620:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "646:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:4"
									},
									"src": "582:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 477,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "820:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "843:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "869:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 474,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:4"
									},
									"src": "799:85:4"
								},
								{
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "990:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1028:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:4"
									},
									"scope": 560,
									"src": "971:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1204:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:4"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "1244:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:4"
									},
									"scope": 560,
									"src": "1187:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 505,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "1861:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "1875:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "1887:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "1904:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 501,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:4"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:4"
									},
									"scope": 560,
									"src": "1835:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 515,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2691:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "2703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:4"
									},
									"scope": 560,
									"src": "2651:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 525,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3495:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3509:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "3521:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:4"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:4"
									},
									"scope": 560,
									"src": "3473:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "4027:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "4039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:4"
									},
									"scope": 560,
									"src": "4010:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4418:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "4436:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:4"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:4"
									},
									"scope": 560,
									"src": "4391:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "4631:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:4"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "4671:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:4"
									},
									"scope": 560,
									"src": "4610:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 559,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4864:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4879:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "4920:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:4"
									},
									"scope": 560,
									"src": "4838:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 561,
							"src": "267:4661:4",
							"usedErrors": [],
							"usedEvents": [
								459,
								468,
								477
							]
						}
					],
					"src": "108:4821:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							590
						]
					},
					"id": 591,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 562,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 563,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 590,
							"linearizedBaseContracts": [
								590
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 568,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 567,
												"id": 570,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 590,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 577,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 576,
												"id": 579,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 590,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 585,
												"id": 587,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 590,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 591,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							938
						]
					},
					"id": 939,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 592,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 593,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:6",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 938,
							"linearizedBaseContracts": [
								938
							],
							"name": "ECDSA",
							"nameLocation": "352:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 598,
									"members": [
										{
											"id": 594,
											"name": "NoError",
											"nameLocation": "392:7:6",
											"nodeType": "EnumValue",
											"src": "392:7:6"
										},
										{
											"id": 595,
											"name": "InvalidSignature",
											"nameLocation": "409:16:6",
											"nodeType": "EnumValue",
											"src": "409:16:6"
										},
										{
											"id": 596,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:6",
											"nodeType": "EnumValue",
											"src": "435:22:6"
										},
										{
											"id": 597,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:6",
											"nodeType": "EnumValue",
											"src": "467:17:6"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:6",
									"nodeType": "EnumDefinition",
									"src": "364:126:6"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:6",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 601,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:6"
									},
									"src": "564:30:6"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:6",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 606,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "699:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:6"
									},
									"src": "665:50:6"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:6",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 611,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "840:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 608,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:6"
									},
									"src": "811:40:6"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2285:622:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 626,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2299:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2309:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2299:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2319:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2299:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 661,
													"nodeType": "Block",
													"src": "2793:108:6",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2823:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2815:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 648,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2815:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2815:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 652,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "2827:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$598_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2840:22:6",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 596,
																		"src": "2827:35:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$598",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 656,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "2872:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 657,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2882:6:6",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2872:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2864:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2864:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2864:25:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 659,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2814:76:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 625,
															"id": 660,
															"nodeType": "Return",
															"src": "2807:83:6"
														}
													]
												},
												"id": 662,
												"nodeType": "IfStatement",
												"src": "2295:606:6",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "2323:464:6",
													"statements": [
														{
															"assignments": [
																631
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 631,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2345:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 647,
																	"src": "2337:9:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 630,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2337:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 632,
															"nodeType": "VariableDeclarationStatement",
															"src": "2337:9:6"
														},
														{
															"assignments": [
																634
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 634,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2368:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 647,
																	"src": "2360:9:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 633,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2360:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"nodeType": "VariableDeclarationStatement",
															"src": "2360:9:6"
														},
														{
															"assignments": [
																637
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 637,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2389:1:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 647,
																	"src": "2383:7:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 636,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2383:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 638,
															"nodeType": "VariableDeclarationStatement",
															"src": "2383:7:6"
														},
														{
															"AST": {
																"nativeSrc": "2560:171:6",
																"nodeType": "YulBlock",
																"src": "2560:171:6",
																"statements": [
																	{
																		"nativeSrc": "2578:32:6",
																		"nodeType": "YulAssignment",
																		"src": "2578:32:6",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2593:9:6",
																							"nodeType": "YulIdentifier",
																							"src": "2593:9:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2604:4:6",
																							"nodeType": "YulLiteral",
																							"src": "2604:4:6",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2589:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2589:3:6"
																					},
																					"nativeSrc": "2589:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2589:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2583:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2583:5:6"
																			},
																			"nativeSrc": "2583:27:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2583:27:6"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2578:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "2578:1:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2627:32:6",
																		"nodeType": "YulAssignment",
																		"src": "2627:32:6",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2642:9:6",
																							"nodeType": "YulIdentifier",
																							"src": "2642:9:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2653:4:6",
																							"nodeType": "YulLiteral",
																							"src": "2653:4:6",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2638:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2638:3:6"
																					},
																					"nativeSrc": "2638:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2638:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2632:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2632:5:6"
																			},
																			"nativeSrc": "2632:27:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2632:27:6"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2627:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "2627:1:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2676:41:6",
																		"nodeType": "YulAssignment",
																		"src": "2676:41:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2686:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2686:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2699:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2699:9:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2710:4:6",
																									"nodeType": "YulLiteral",
																									"src": "2710:4:6",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2695:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2695:3:6"
																							},
																							"nativeSrc": "2695:20:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2695:20:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2689:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2689:5:6"
																					},
																					"nativeSrc": "2689:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2689:27:6"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2681:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2681:4:6"
																			},
																			"nativeSrc": "2681:36:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2681:36:6"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2676:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "2676:1:6"
																			}
																		]
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 631,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2578:1:6",
																	"valueSize": 1
																},
																{
																	"declaration": 634,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2627:1:6",
																	"valueSize": 1
																},
																{
																	"declaration": 616,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2593:9:6",
																	"valueSize": 1
																},
																{
																	"declaration": 616,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2642:9:6",
																	"valueSize": 1
																},
																{
																	"declaration": 616,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2699:9:6",
																	"valueSize": 1
																},
																{
																	"declaration": 637,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2676:1:6",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 639,
															"nodeType": "InlineAssembly",
															"src": "2535:196:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 641,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "2762:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 642,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "2768:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 643,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "2771:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 644,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "2774:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 640,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		664,
																		744,
																		852
																	],
																	"referencedDeclaration": 852,
																	"src": "2751:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2751:25:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 625,
															"id": 646,
															"nodeType": "Return",
															"src": "2744:32:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:6",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2166:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2158:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 613,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2193:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2180:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2180:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:60:6"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "2240:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2232:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "2264:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2251:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$598",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 621,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 620,
														"name": "RecoverError",
														"nameLocations": [
															"2251:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 598,
														"src": "2251:12:6"
													},
													"referencedDeclaration": 598,
													"src": "2251:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$598",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "2277:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "2269:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 623,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:53:6"
									},
									"scope": 938,
									"src": "2129:778:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "3801:168:6",
										"statements": [
											{
												"assignments": [
													675,
													678,
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3820:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "3812:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 674,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3812:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3844:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "3831:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$598",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 677,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 676,
																"name": "RecoverError",
																"nameLocations": [
																	"3831:12:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 598,
																"src": "3831:12:6"
															},
															"referencedDeclaration": 598,
															"src": "3831:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3859:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 693,
														"src": "3851:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 679,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3851:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"arguments": [
														{
															"id": 682,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "3882:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 683,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "3888:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 681,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															744,
															852
														],
														"referencedDeclaration": 664,
														"src": "3871:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3811:87:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "3920:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 688,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3927:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 686,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3908:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$598_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3908:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "3908:28:6"
											},
											{
												"expression": {
													"id": 691,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 675,
													"src": "3953:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 673,
												"id": 692,
												"nodeType": "Return",
												"src": "3946:16:6"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "2913:796:6",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3723:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3739:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3731:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3758:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3745:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3745:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:38:6"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3792:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3791:9:6"
									},
									"scope": 938,
									"src": "3714:255:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "4348:342:6",
										"statements": [
											{
												"id": 742,
												"nodeType": "UncheckedBlock",
												"src": "4358:326:6",
												"statements": [
													{
														"assignments": [
															712
														],
														"declarations": [
															{
																"constant": false,
																"id": 712,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4390:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 742,
																"src": "4382:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 711,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4382:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 719,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 713,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "4394:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4407:66:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4399:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 714,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4399:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4399:75:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4394:80:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4382:92:6"
													},
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4591:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 742,
																"src": "4585:7:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4585:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 734,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 726,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 701,
																							"src": "4610:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 725,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4602:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 724,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4602:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 727,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4602:11:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4617:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4602:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 730,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4601:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4624:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4601:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4595:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 722,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4595:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4595:32:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4585:42:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 736,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "4659:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 737,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "4665:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 738,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "4668:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 739,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "4671:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 735,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	664,
																	744,
																	852
																],
																"referencedDeclaration": 852,
																"src": "4648:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4648:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 710,
														"id": 741,
														"nodeType": "Return",
														"src": "4641:32:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "3975:205:6",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4194:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4222:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "4214:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 696,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4244:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "4236:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 698,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "4255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 700,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4204:67:6"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "4303:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "4295:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4295:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "4327:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "4314:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$598",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "RecoverError",
														"nameLocations": [
															"4314:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 598,
														"src": "4314:12:6"
													},
													"referencedDeclaration": 598,
													"src": "4314:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$598",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "4340:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "4332:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 708,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4294:53:6"
									},
									"scope": 938,
									"src": "4185:505:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "4903:164:6",
										"statements": [
											{
												"assignments": [
													757,
													760,
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4922:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "4914:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 756,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4914:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4946:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "4933:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$598",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 759,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 758,
																"name": "RecoverError",
																"nameLocations": [
																	"4933:12:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 598,
																"src": "4933:12:6"
															},
															"referencedDeclaration": 598,
															"src": "4933:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4961:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "4953:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 761,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4953:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [
														{
															"id": 764,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "4984:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 765,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 766,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "4993:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 763,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															744,
															852
														],
														"referencedDeclaration": 744,
														"src": "4973:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4973:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4913:83:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "5018:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 771,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "5025:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 769,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "5006:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$598_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "5006:28:6"
											},
											{
												"expression": {
													"id": 774,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 757,
													"src": "5051:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 755,
												"id": 775,
												"nodeType": "Return",
												"src": "5044:16:6"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "4696:116:6",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4826:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4842:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "4834:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 746,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4856:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "4848:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 748,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4848:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4867:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "4859:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 750,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4859:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:37:6"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "4894:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:9:6"
									},
									"scope": 938,
									"src": "4817:250:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 851,
										"nodeType": "Block",
										"src": "5382:1372:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 798,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "6278:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6270:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 796,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6270:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6270:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6283:66:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6270:79:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 812,
												"nodeType": "IfStatement",
												"src": "6266:164:6",
												"trueBody": {
													"id": 811,
													"nodeType": "Block",
													"src": "6351:79:6",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6381:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6373:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 802,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6373:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 806,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6385:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$598_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6398:17:6",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 597,
																		"src": "6385:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$598",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 808,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "6417:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 809,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6372:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 795,
															"id": 810,
															"nodeType": "Return",
															"src": "6365:54:6"
														}
													]
												}
											},
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6532:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 851,
														"src": "6524:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6524:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"initialValue": {
													"arguments": [
														{
															"id": 816,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "6551:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 817,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "6557:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 818,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "6560:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 819,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "6563:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 815,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6541:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6541:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "6579:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6597:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6589:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6589:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6589:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6579:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 841,
												"nodeType": "IfStatement",
												"src": "6575:113:6",
												"trueBody": {
													"id": 840,
													"nodeType": "Block",
													"src": "6601:87:6",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6631:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6623:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 828,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6623:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6623:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 832,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6635:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$598_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6648:16:6",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 595,
																		"src": "6635:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$598",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6674:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6666:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 834,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6666:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6666:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 838,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6622:55:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 795,
															"id": 839,
															"nodeType": "Return",
															"src": "6615:62:6"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 842,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "6706:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 843,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "6714:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$598_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6727:7:6",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 594,
															"src": "6714:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6744:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6736:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 845,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6736:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 849,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6705:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 795,
												"id": 850,
												"nodeType": "Return",
												"src": "6698:49:6"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "5073:125:6",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5212:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5240:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5232:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 779,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5260:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5254:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 781,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5254:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5279:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5271:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 783,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5298:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5290:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 785,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5222:83:6"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "recovered",
												"nameLocation": "5337:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5329:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "err",
												"nameLocation": "5361:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5348:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$598",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 791,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 790,
														"name": "RecoverError",
														"nameLocations": [
															"5348:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 598,
														"src": "5348:12:6"
													},
													"referencedDeclaration": 598,
													"src": "5348:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$598",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "errArg",
												"nameLocation": "5374:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "5366:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 793,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5366:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:53:6"
									},
									"scope": 938,
									"src": "5203:1551:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "6981:166:6",
										"statements": [
											{
												"assignments": [
													867,
													870,
													872
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "7000:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "6992:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 866,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6992:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "7024:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "7011:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$598",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 869,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 868,
																"name": "RecoverError",
																"nameLocations": [
																	"7011:12:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 598,
																"src": "7011:12:6"
															},
															"referencedDeclaration": 598,
															"src": "7011:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 872,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "7039:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "7031:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 871,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7031:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [
														{
															"id": 874,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "7062:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 875,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "7068:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 876,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "7071:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 877,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "7074:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 873,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															664,
															744,
															852
														],
														"referencedDeclaration": 852,
														"src": "7051:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7051:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$598_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6991:85:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 881,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "7098:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 882,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "7105:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 880,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "7086:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$598_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7086:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "7086:28:6"
											},
											{
												"expression": {
													"id": 885,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 867,
													"src": "7131:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 865,
												"id": 886,
												"nodeType": "Return",
												"src": "7124:16:6"
											}
										]
									},
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "6760:122:6",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6896:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6912:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "6904:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 854,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6924:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "6918:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 856,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6918:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6935:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "6927:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6927:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6946:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "6938:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 860,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6938:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6903:45:6"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "6972:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6972:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6971:9:6"
									},
									"scope": 938,
									"src": "6887:260:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "7352:460:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$598",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 897,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "7366:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$598",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 898,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "7375:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$598_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7388:7:6",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 594,
														"src": "7375:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$598",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7366:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$598",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 903,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7462:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 904,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "7471:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$598_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7484:16:6",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 595,
															"src": "7471:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7462:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$598",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "7567:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$598",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 912,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "7576:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$598_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7589:22:6",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 596,
																"src": "7576:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$598",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7567:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$598",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 923,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "7701:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$598",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 924,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "7710:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$598_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7723:17:6",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 597,
																	"src": "7710:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$598",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7701:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 932,
															"nodeType": "IfStatement",
															"src": "7697:109:6",
															"trueBody": {
																"id": 931,
																"nodeType": "Block",
																"src": "7742:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 928,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7786:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 927,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 611,
																				"src": "7763:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																					"typeString": "function (bytes32) pure returns (error)"
																				}
																			},
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7763:32:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 930,
																		"nodeType": "RevertStatement",
																		"src": "7756:39:6"
																	}
																]
															}
														},
														"id": 933,
														"nodeType": "IfStatement",
														"src": "7563:243:6",
														"trueBody": {
															"id": 922,
															"nodeType": "Block",
															"src": "7613:78:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 918,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 894,
																						"src": "7670:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7662:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 916,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7662:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7662:17:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 915,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 606,
																			"src": "7634:27:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (uint256) pure returns (error)"
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7634:46:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 921,
																	"nodeType": "RevertStatement",
																	"src": "7627:53:6"
																}
															]
														}
													},
													"id": 934,
													"nodeType": "IfStatement",
													"src": "7458:348:6",
													"trueBody": {
														"id": 910,
														"nodeType": "Block",
														"src": "7502:55:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 907,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 601,
																		"src": "7523:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7523:23:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 909,
																"nodeType": "RevertStatement",
																"src": "7516:30:6"
															}
														]
													}
												},
												"id": 935,
												"nodeType": "IfStatement",
												"src": "7362:444:6",
												"trueBody": {
													"id": 902,
													"nodeType": "Block",
													"src": "7397:55:6",
													"statements": [
														{
															"functionReturnParameters": 896,
															"id": 901,
															"nodeType": "Return",
															"src": "7411:7:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "7153:122:6",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7289:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7314:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7301:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$598",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 891,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 890,
														"name": "RecoverError",
														"nameLocations": [
															"7301:12:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 598,
														"src": "7301:12:6"
													},
													"referencedDeclaration": 598,
													"src": "7301:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$598",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7329:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7321:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 893,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7321:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:38:6"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7352:0:6"
									},
									"scope": 938,
									"src": "7280:532:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 939,
							"src": "344:7470:6",
							"usedErrors": [
								601,
								606,
								611
							],
							"usedEvents": []
						}
					],
					"src": "112:7703:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							950
						]
					},
					"id": 951,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 940,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 941,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:7",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 950,
							"linearizedBaseContracts": [
								950
							],
							"name": "IERC165",
							"nameLocation": "433:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 949,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "819:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 943,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:7"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "862:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 946,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:7"
									},
									"scope": 950,
									"src": "792:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 951,
							"src": "423:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:7"
				},
				"id": 7
			},
			"Game_Logic.sol": {
				"ast": {
					"absolutePath": "Game_Logic.sol",
					"exportedSymbols": {
						"Context": [
							590
						],
						"ECDSA": [
							938
						],
						"IERC1155": [
							443
						],
						"IERC165": [
							950
						],
						"IERC721": [
							560
						],
						"Ownable": [
							147
						],
						"Pausable": [
							255
						],
						"ReentrancyGuard": [
							320
						],
						"SavePointGameLogic": [
							1355
						]
					},
					"id": 1356,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 952,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 953,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 148,
							"src": "58:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 954,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 256,
							"src": "111:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 955,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 321,
							"src": "167:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
							"id": 956,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 939,
							"src": "230:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 957,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 561,
							"src": "293:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 958,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1356,
							"sourceUnit": 444,
							"src": "352:60:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 959,
										"name": "Ownable",
										"nameLocations": [
											"445:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "445:7:8"
									},
									"id": 960,
									"nodeType": "InheritanceSpecifier",
									"src": "445:7:8"
								},
								{
									"baseName": {
										"id": 961,
										"name": "Pausable",
										"nameLocations": [
											"454:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 255,
										"src": "454:8:8"
									},
									"id": 962,
									"nodeType": "InheritanceSpecifier",
									"src": "454:8:8"
								},
								{
									"baseName": {
										"id": 963,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"464:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 320,
										"src": "464:15:8"
									},
									"id": 964,
									"nodeType": "InheritanceSpecifier",
									"src": "464:15:8"
								}
							],
							"canonicalName": "SavePointGameLogic",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1355,
							"linearizedBaseContracts": [
								1355,
								320,
								255,
								147,
								590
							],
							"name": "SavePointGameLogic",
							"nameLocation": "423:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "2f5e6a05",
									"id": 967,
									"mutability": "mutable",
									"name": "avatarNFT",
									"nameLocation": "501:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "486:24:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$560",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 966,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 965,
											"name": "IERC721",
											"nameLocations": [
												"486:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 560,
											"src": "486:7:8"
										},
										"referencedDeclaration": 560,
										"src": "486:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$560",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "57d1f910",
									"id": 970,
									"mutability": "mutable",
									"name": "itemNFT",
									"nameLocation": "532:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "516:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155_$443",
										"typeString": "contract IERC1155"
									},
									"typeName": {
										"id": 969,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 968,
											"name": "IERC1155",
											"nameLocations": [
												"516:8:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 443,
											"src": "516:8:8"
										},
										"referencedDeclaration": 443,
										"src": "516:8:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$443",
											"typeString": "contract IERC1155"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4626402b",
									"id": 972,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nameLocation": "561:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "546:29:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 971,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "546:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "323f24ab",
									"id": 974,
									"mutability": "mutable",
									"name": "rewardSigner",
									"nameLocation": "596:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "581:27:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 973,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "581:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "280e31cc",
									"id": 978,
									"mutability": "mutable",
									"name": "userLevel",
									"nameLocation": "650:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "615:44:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 977,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 975,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "623:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "615:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 976,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "634:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "028be338",
									"id": 984,
									"mutability": "mutable",
									"name": "questProgress",
									"nameLocation": "720:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "665:68:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 983,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 979,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "673:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "665:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 982,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 980,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "692:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "684:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 981,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "703:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83b78188",
									"id": 990,
									"mutability": "mutable",
									"name": "rewardClaimed",
									"nameLocation": "791:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1355,
									"src": "739:65:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 989,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 985,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "747:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "739:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 988,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 986,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "766:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "758:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 987,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "777:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4bd6aedf6fbd4e9cacaf319dc8d6906ff7f7fd2522898365f92afab9cb245444",
									"id": 996,
									"name": "LevelUpdated",
									"nameLocation": "817:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "846:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "830:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"indexed": false,
												"mutability": "mutable",
												"name": "newLevel",
												"nameLocation": "860:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "852:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:40:8"
									},
									"src": "811:59:8"
								},
								{
									"anonymous": false,
									"eventSelector": "95b529ceb2b4c5026133eafcb0f6e7e63f17c39398d1b67e14569272cf3c956b",
									"id": 1004,
									"name": "QuestProgressUpdated",
									"nameLocation": "881:20:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "918:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "902:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "questId",
												"nameLocation": "932:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "924:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "progress",
												"nameLocation": "949:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "941:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:57:8"
									},
									"src": "875:84:8"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 1010,
									"name": "RewardClaimed",
									"nameLocation": "970:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1000:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "984:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardId",
												"nameLocation": "1014:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "1006:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:40:8"
									},
									"src": "964:60:8"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1218:411:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1027,
																"name": "_avatarNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "1236:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1258:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1250:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1028,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1250:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1250:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1236:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6176617461724e4654207a65726f",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1262:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0",
																"typeString": "literal_string \"avatarNFT zero\""
															},
															"value": "avatarNFT zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca8af991dc0d936fa68ff84c8f05bf808eb4a45a661c77f8ba40b26dd6272bf0",
																"typeString": "literal_string \"avatarNFT zero\""
															}
														],
														"id": 1026,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1228:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1228:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "1228:51:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1037,
																"name": "_itemNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1297:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1317:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1309:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1038,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1309:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1309:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1297:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6974656d4e4654207a65726f",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3",
																"typeString": "literal_string \"itemNFT zero\""
															},
															"value": "itemNFT zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a06815a376ab8fcad5f702f0ada36853958fa24f784d12ad13bf2a906c93d0d3",
																"typeString": "literal_string \"itemNFT zero\""
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1289:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "1289:47:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1047,
																"name": "_treasuryWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "1354:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1381:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1373:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1048,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1373:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1373:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1354:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472656173757279207a65726f",
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1385:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00",
																"typeString": "literal_string \"treasury zero\""
															},
															"value": "treasury zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebe048de25018f1d75254a57e4974973114a38e4e6c42f995d9c8fd56d180a00",
																"typeString": "literal_string \"treasury zero\""
															}
														],
														"id": 1046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1346:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1346:55:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1057,
																"name": "_rewardSigner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "1419:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1444:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1436:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1058,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1436:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1436:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1419:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7369676e6572207a65726f",
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1448:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8",
																"typeString": "literal_string \"signer zero\""
															},
															"value": "signer zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_436f3a097fc8bf31317b8f67e9b0a8f87213e353a105d145a97674febd50ebe8",
																"typeString": "literal_string \"signer zero\""
															}
														],
														"id": 1056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1411:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1411:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1411:51:8"
											},
											{
												"expression": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1066,
														"name": "avatarNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1473:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$560",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1068,
																"name": "_avatarNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "1493:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1067,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "1485:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$560_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1485:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$560",
															"typeString": "contract IERC721"
														}
													},
													"src": "1473:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$560",
														"typeString": "contract IERC721"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "1473:31:8"
											},
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1072,
														"name": "itemNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "1514:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$443",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1074,
																"name": "_itemNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "1533:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1073,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "1524:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$443_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1524:18:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$443",
															"typeString": "contract IERC1155"
														}
													},
													"src": "1514:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$443",
														"typeString": "contract IERC1155"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "1514:28:8"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1078,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "1552:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1079,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1569:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1552:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "1552:32:8"
											},
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "rewardSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1594:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1083,
														"name": "_rewardSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "1609:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1594:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "1594:28:8"
											}
										]
									},
									"id": 1087,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1023,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1012,
													"src": "1204:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1024,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1022,
												"name": "Ownable",
												"nameLocations": [
													"1196:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1196:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1196:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1059:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1051:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "_avatarNFT",
												"nameLocation": "1089:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1081:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1081:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "_itemNFT",
												"nameLocation": "1117:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1109:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1109:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nameLocation": "1143:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1135:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1135:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "_rewardSigner",
												"nameLocation": "1176:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "1168:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:154:8"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:0:8"
									},
									"scope": 1355,
									"src": "1030:599:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1110,
										"nodeType": "Block",
										"src": "1696:104:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "_avatarNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "1714:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1736:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1728:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1728:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1728:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1714:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2061646472",
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1740:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															},
															"value": "zero addr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															}
														],
														"id": 1094,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1706:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1706:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "1706:46:8"
											},
											{
												"expression": {
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "avatarNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1762:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$560",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1106,
																"name": "_avatarNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "1782:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1105,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "1774:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$560_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1774:19:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$560",
															"typeString": "contract IERC721"
														}
													},
													"src": "1762:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$560",
														"typeString": "contract IERC721"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "1762:31:8"
											}
										]
									},
									"functionSelector": "a87331e5",
									"id": 1111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1091,
												"name": "onlyOwner",
												"nameLocations": [
													"1686:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1686:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1686:9:8"
										}
									],
									"name": "setAvatarNFT",
									"nameLocation": "1644:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "_avatarNFT",
												"nameLocation": "1665:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1657:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1657:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1656:20:8"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1696:0:8"
									},
									"scope": 1355,
									"src": "1635:165:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "1863:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1119,
																"name": "_itemNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "1881:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1901:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1893:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1120,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1893:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1893:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1881:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2061646472",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															},
															"value": "zero addr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1873:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "1873:44:8"
											},
											{
												"expression": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1128,
														"name": "itemNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "1927:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$443",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1130,
																"name": "_itemNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "1946:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1129,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 443,
															"src": "1937:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$443_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1937:18:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$443",
															"typeString": "contract IERC1155"
														}
													},
													"src": "1927:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$443",
														"typeString": "contract IERC1155"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "1927:28:8"
											}
										]
									},
									"functionSelector": "47e25eff",
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1116,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1115,
												"name": "onlyOwner",
												"nameLocations": [
													"1853:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1853:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1853:9:8"
										}
									],
									"name": "setItemNFT",
									"nameLocation": "1815:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "_itemNFT",
												"nameLocation": "1834:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "1826:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:18:8"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1863:0:8"
									},
									"scope": 1355,
									"src": "1806:156:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "2031:94:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "_wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "2049:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2068:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2060:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1144,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2060:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2060:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2049:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2061646472",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2072:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															},
															"value": "zero addr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															}
														],
														"id": 1142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2041:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2041:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "2041:43:8"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1152,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "2094:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1153,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2111:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2094:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2094:24:8"
											}
										]
									},
									"functionSelector": "a8602fea",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1139,
												"name": "onlyOwner",
												"nameLocations": [
													"2021:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2021:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2021:9:8"
										}
									],
									"name": "setTreasuryWallet",
									"nameLocation": "1977:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_wallet",
												"nameLocation": "2003:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "1995:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:17:8"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2031:0:8"
									},
									"scope": 1355,
									"src": "1968:157:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "2192:92:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1165,
																"name": "_signer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "2210:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2229:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2221:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1166,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2221:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2221:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2210:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2061646472",
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2233:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															},
															"value": "zero addr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_76682a2b65da0931708004b93b880ef3761588ae74e98b4a3212a100a6c36a15",
																"typeString": "literal_string \"zero addr\""
															}
														],
														"id": 1164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2202:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2202:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "2202:43:8"
											},
											{
												"expression": {
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1174,
														"name": "rewardSigner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "2255:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1175,
														"name": "_signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "2270:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2255:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "2255:22:8"
											}
										]
									},
									"functionSelector": "c69d65d1",
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1162,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1161,
												"name": "onlyOwner",
												"nameLocations": [
													"2182:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2182:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2182:9:8"
										}
									],
									"name": "setRewardSigner",
									"nameLocation": "2140:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "_signer",
												"nameLocation": "2164:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "2156:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:17:8"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2192:0:8"
									},
									"scope": 1355,
									"src": "2131:153:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "2326:25:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1184,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "2336:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2336:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2336:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1181,
												"name": "onlyOwner",
												"nameLocations": [
													"2316:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2316:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2316:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "2299:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2304:2:8"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:8"
									},
									"scope": 1355,
									"src": "2290:61:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "2395:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1193,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "2405:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2405:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "2405:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1190,
												"name": "onlyOwner",
												"nameLocations": [
													"2385:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2385:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2385:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "2366:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2373:2:8"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2395:0:8"
									},
									"scope": 1355,
									"src": "2357:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "2500:136:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1207,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "2518:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2534:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2526:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2526:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2526:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2518:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2075736572",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2538:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa",
																"typeString": "literal_string \"zero user\""
															},
															"value": "zero user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa",
																"typeString": "literal_string \"zero user\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2510:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2510:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "2510:40:8"
											},
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1216,
															"name": "userLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "2560:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1218,
														"indexExpression": {
															"id": 1217,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "2570:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2560:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1219,
														"name": "newLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "2578:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2560:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "2560:26:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1223,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "2614:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1224,
															"name": "newLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "2620:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1222,
														"name": "LevelUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "2601:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2601:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "EmitStatement",
												"src": "2596:33:8"
											}
										]
									},
									"functionSelector": "5fb84d67",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1203,
												"name": "onlyOwner",
												"nameLocations": [
													"2490:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2490:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2490:9:8"
										}
									],
									"name": "updateLevel",
									"nameLocation": "2437:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2457:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2449:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "newLevel",
												"nameLocation": "2471:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2463:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2463:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:32:8"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2500:0:8"
									},
									"scope": 1355,
									"src": "2428:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "2739:166:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1240,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "2757:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2773:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2765:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2765:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2765:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2757:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7a65726f2075736572",
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2777:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa",
																"typeString": "literal_string \"zero user\""
															},
															"value": "zero user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e679005588d074f2c339c270c6d493b386fcb73fd33d8c9c85e3e0a6b26757fa",
																"typeString": "literal_string \"zero user\""
															}
														],
														"id": 1239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2749:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2749:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "2749:40:8"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1249,
																"name": "questProgress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "2799:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1252,
															"indexExpression": {
																"id": 1250,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1230,
																"src": "2813:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2799:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1253,
														"indexExpression": {
															"id": 1251,
															"name": "questId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "2819:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2799:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1254,
														"name": "progress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "2830:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2799:39:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "2799:39:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1258,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "2874:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1259,
															"name": "questId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "2880:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1260,
															"name": "progress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "2889:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1257,
														"name": "QuestProgressUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "2853:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2853:45:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "EmitStatement",
												"src": "2848:50:8"
											}
										]
									},
									"functionSelector": "c5fb50d5",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1237,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1236,
												"name": "onlyOwner",
												"nameLocations": [
													"2729:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2729:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2729:9:8"
										}
									],
									"name": "updateQuestProgress",
									"nameLocation": "2651:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2679:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2671:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "questId",
												"nameLocation": "2693:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2685:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "progress",
												"nameLocation": "2710:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "2702:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2670:49:8"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2739:0:8"
									},
									"scope": 1355,
									"src": "2642:263:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "3065:134:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3150:34:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 1276,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1267,
																	"src": "3186:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1273,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3133:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3137:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3133:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3133:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1272,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3123:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3123:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1279,
												"nodeType": "Return",
												"src": "3116:76:8"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "2911:71:8",
										"text": "@notice Internal function to recreate EIP-191 prefixed message hash"
									},
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "2996:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3027:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3019:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3019:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3018:14:8"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "3056:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3056:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:9:8"
									},
									"scope": 1355,
									"src": "2987:212:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "3352:575:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3370:36:8",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1295,
																		"name": "rewardClaimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "3371:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(uint256 => bool))"
																		}
																	},
																	"id": 1298,
																	"indexExpression": {
																		"expression": {
																			"id": 1296,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3385:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3389:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3385:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3371:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1300,
																"indexExpression": {
																	"id": 1299,
																	"name": "rewardId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "3397:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3371:35:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616c726561647920636c61696d6564",
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3408:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
																"typeString": "literal_string \"already claimed\""
															},
															"value": "already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
																"typeString": "literal_string \"already claimed\""
															}
														],
														"id": 1294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3362:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3362:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "3362:64:8"
											},
											{
												"assignments": [
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "messageHash",
														"nameLocation": "3445:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "3437:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1305,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3437:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1310,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3486:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3490:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3486:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1312,
																	"name": "rewardId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "3498:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1313,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1285,
																	"src": "3508:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1308,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3469:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3473:12:8",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3469:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3469:46:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1307,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3459:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3459:57:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3437:79:8"
											},
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "ethSignedMessageHash",
														"nameLocation": "3534:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "3526:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1317,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3526:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"arguments": [
														{
															"id": 1320,
															"name": "messageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "3580:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1319,
														"name": "toEthSignedMessageHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "3557:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (bytes32)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3526:66:8"
											},
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "recoveredSigner",
														"nameLocation": "3611:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1353,
														"src": "3603:23:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1323,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3603:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"arguments": [
														{
															"id": 1327,
															"name": "ethSignedMessageHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "3643:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1328,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3665:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"expression": {
															"id": 1325,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "3629:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$938_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3635:7:8",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 694,
														"src": "3629:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3629:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3603:72:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1332,
																"name": "recoveredSigner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "3693:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1333,
																"name": "rewardSigner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "3712:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3693:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964207369676e6174757265",
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3726:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a",
																"typeString": "literal_string \"invalid signature\""
															},
															"value": "invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a179e1a73f41ef8e1ba2f259a99bc53b6ace3abb110ac2ea058e42c6104e1a",
																"typeString": "literal_string \"invalid signature\""
															}
														],
														"id": 1331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3685:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3685:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "3685:61:8"
											},
											{
												"expression": {
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1338,
																"name": "rewardClaimed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "3757:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 1342,
															"indexExpression": {
																"expression": {
																	"id": 1339,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3771:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3775:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3771:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3757:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1343,
														"indexExpression": {
															"id": 1341,
															"name": "rewardId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3783:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3757:35:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3795:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3757:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "3757:42:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1348,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3899:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3903:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3899:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "rewardId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3911:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1347,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "3885:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3885:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "EmitStatement",
												"src": "3880:40:8"
											}
										]
									},
									"functionSelector": "76618f27",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1289,
												"name": "whenNotPaused",
												"nameLocations": [
													"3325:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 182,
												"src": "3325:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3325:13:8"
										},
										{
											"id": 1292,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1291,
												"name": "nonReentrant",
												"nameLocations": [
													"3339:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 285,
												"src": "3339:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3339:12:8"
										}
									],
									"name": "claimReward",
									"nameLocation": "3214:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "rewardId",
												"nameLocation": "3243:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3235:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3269:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3261:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3261:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3300:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "3285:24:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3285:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:90:8"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3352:0:8"
									},
									"scope": 1355,
									"src": "3205:722:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1356,
							"src": "414:3515:8",
							"usedErrors": [
								13,
								18,
								601,
								606,
								611
							],
							"usedEvents": [
								24,
								158,
								163,
								996,
								1004,
								1010
							]
						}
					],
					"src": "32:3898:8"
				},
				"id": 8
			}
		}
	}
}